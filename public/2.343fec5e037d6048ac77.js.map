{"version":3,"sources":["webpack:///2.343fec5e037d6048ac77.js","webpack:///./~/vue-style-loader/addStyles.js?c2fc","webpack:///player.vue","webpack:///index.vue","webpack:///./~/plyr/dist/plyr.css","webpack:///./client/components/player/index.vue?5f50","webpack:///./client/code/player.vue?8b6c","webpack:///./~/plyr/dist/plyr.css?455f","webpack:///./client/components/player/index.vue?5477","webpack:///./client/code/player.vue?4bf0","webpack:///./~/plyr/src/js/plyr.js","webpack:///./client/components/player/index.vue?3443","webpack:///./client/code/player.vue?635a","webpack:///./client/code/player.vue","webpack:///./client/components/player/index.vue"],"names":["webpackJsonp",3,"module","exports","__webpack_require__","addStylesToDom","styles","options","i","length","item","domStyle","stylesInDom","id","refs","j","parts","push","addStyle","listToStyles","list","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","obj","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","fn","memo","apply","this","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","join",21,"_interopRequireDefault","__esModule","default","Object","defineProperty","value","_player","_player2","name","data","components","player",22,"_plyr","_plyr2","props","url","String","required","computed","video","startsWith","ready","setup",28,29,"version","names","mappings","file","sourcesContent","sourceRoot",33,34,"content","locals",38,42,44,"__WEBPACK_AMD_DEFINE_RESULT__","root","factory","call","undefined","_browserSniff","nameOffset","verOffset","ix","nAgt","appName","fullVersion","parseFloat","appVersion","majorVersion","parseInt","substring","lastIndexOf","toUpperCase","isNaN","ios","platform","touch","documentElement","_supportMime","plyr","mimeType","canPlayType","replace","_injectScript","source","querySelectorAll","tag","src","firstScriptTag","_inArray","haystack","needle","Array","prototype","_replaceAll","string","find","RegExp","_wrap","elements","wrapper","child","cloneNode","element","parent","sibling","_unwrap","_remove","_prependChild","_setAttributes","attributes","key","_insertElement","_getClassname","selector","_toggleClass","className","state","classList","_hasClass","contains","_on","events","callback","_toggleListener","_off","_proxyListener","eventName","userListener","defaultListener","event","toggle","eventList","split","NodeList","x","Node","_triggerEvent","properties","CustomEvent","dispatchEvent","_toggleState","target","getAttribute","_getPercentage","current","max","toFixed","_extend","objects","lenth","destination","shift","property","constructor","_fullscreen","fullscreen","supportsFullScreen","isFullScreen","requestFullScreen","cancelFullScreen","fullScreenEventName","prefix","browserPrefixes","il","msExitFullscreen","msFullscreenEnabled","body","fullscreenElement","mozFullScreenElement","_storage","storage","supported","localStorage","setItem","result","getItem","removeItem","e","Plyr","container","config","_log","text","warn","debug","console","_buildControls","html","i18n","played","buffered","tooltips","seek","controls","iconPrefix","restart","rewind","play","pause","forward","currentTime","duration","toggleMute","volume","toggleCaptions","toggleFullscreen","_setupFullscreen","full","allowAudio","enabled","nativeSupport","fallback","_inFrame","classes","buttons","_focusTrap","hideControls","_setupCaptions","_getElement","selectors","captions","videoContainer","insertAdjacentHTML","usingTextTracks","textTracks","kind","captionSrc","children","nodeName","captionExists","tracks","mode","_showCaptions","browser","y","track","activeCues","_setCaption","getCueAsHTML","currentCaption","xhr","XMLHttpRequest","onreadystatechange","readyState","status","caption","req","responseText","r","open","send","innerHTML","trim","offsetHeight","_seekManualCaptions","time","_timecodeCommon","tc","pos","tcpair","_subTcSecs","_timecodeMin","_timecodeMax","seconds","tc1","tc2","Math","floor","subcount","defaultActive","active","_getElements","self","top","_checkFocus","which","isFullscreen","last","shiftKey","first","preventDefault","focus","tabbables","_insertChildElements","_injectControls","seekTime","random","querySelector","HTMLElement","labels","hidden","label","tooltip","_findElements","mute","checkboxes","progress","buffer","bar","_toggleControls","_toggleStyleHook","removeAttribute","_setTitle","iframe","title","frameTitle","_setupMedia","stopped","autoplay","isIos","isTouch","videoWrapper","types","embed","_setupEmbed","embedId","videoId","containers","embedWrapper","YT","_youTubeReady","urls","youtube","api","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","forEach","loaded","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","frameborder","vimeo","timer","setInterval","clearInterval","_vimeoReady","_embedReady","_setupInterface","Player","playerVars","rel","showinfo","iv_load_policy","cc_load_policy","cc_lang_pref","wmode","modestbranding","disablekb","origin","onReady","instance","playVideo","paused","pauseVideo","stop","stopVideo","getDuration","getCurrentTime","muted","isMuted","getVideoData","buffering","getVideoLoadedFraction","_displayDuration","onStateChange","playing","seeking","$f","addEvent","percent","_play","_pause","_togglePlay","_rewind","_seek","_forward","input","targetTime","_getDuration","seekTo","_checkPlaying","_toggleFullscreen","_handleEscapeFullscreen","style","overflow","_showControls","charCode","keyCode","_toggleMute","_setVolume","setVolume","_updateVolume","_toggleCaptions","show","captionsEnabled","_checkLoading","loading","clearTimeout","timers","setTimeout","_updateProgress","end","_updateTimeDisplay","secs","mins","hours","displayHours","slice","displayDuration","_updateSeekTooltip","_timeUpdate","clientRect","getBoundingClientRect","visible","width","pageX","left","force","hover","mouseover","_source","_updateSource","getVideoUrl","currentSrc","destroy","_cancelRequests","firstSource","html5","crossorigin","poster","loop","originalClassName","load","_updatePoster","_controlListeners","trigger","hadTabFocus","tabFocus","checkFocus","focused","activeElement","button","inputEvent","code","listeners","_mediaListeners","click","ended","_destroy","init","clone","replaceChild","_init","tagName","basic","controlsMissing","togglePlay","support","restore","defaults","oldIE","iPhone","audio","instances","parse","keys","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event",50,54,57,"__vue_script__","__vue_template__","template",58],"mappings":"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","file":"2.343fec5e037d6048ac77.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _player = __webpack_require__(58);\n\t\n\tvar _player2 = _interopRequireDefault(_player);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    name: 'lightweight-player',\n\t    data: function data() {\n\t        return {};\n\t    },\n\t\n\t    components: { player: _player2.default }\n\t};\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(34);\n\t\n\tvar _plyr = __webpack_require__(44);\n\t\n\tvar _plyr2 = _interopRequireDefault(_plyr);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    props: {\n\t        url: {\n\t            type: String,\n\t            required: true\n\t        },\n\t        type: {\n\t            type: String,\n\t            default: 'video/mp4'\n\t        }\n\t    },\n\t    data: function data() {\n\t        return {};\n\t    },\n\t\n\t    computed: {\n\t        video: function video() {\n\t            return this.type.startsWith('video');\n\t        }\n\t    },\n\t    ready: function ready() {\n\t        _plyr2.default.setup({});\n\t    }\n\t};\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(4)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".plyr__captions,.plyr__controls{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-align:center}@-webkit-keyframes plyr-progress{to{background-position:40px 0}}@keyframes plyr-progress{to{background-position:40px 0}}.plyr{position:relative;max-width:100%;min-width:290px;font-family:Avenir,Avenir Next,Helvetica Neue,Segoe UI,Helvetica,Arial,sans-serif}.plyr,.plyr *,.plyr :after,.plyr :before{box-sizing:border-box}.plyr a,.plyr button,.plyr input,.plyr label{-ms-touch-action:manipulation;touch-action:manipulation}.plyr__sr-only{position:absolute!important;clip:rect(1px,1px,1px,1px);padding:0!important;border:0!important;height:1px!important;width:1px!important;overflow:hidden}.plyr__video-wrapper{position:relative}.plyr audio,.plyr video{width:100%;height:auto;vertical-align:middle}.plyr video::-webkit-media-text-track-container{display:none}.plyr__video-embed{padding-bottom:56.25%;height:0;overflow:hidden;background:#000}.plyr__video-embed iframe{position:absolute;top:0;left:0;width:100%;height:100%;border:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.plyr__video-embed>div{position:relative;padding-bottom:200%;-webkit-transform:translateY(-35.95%);transform:translateY(-35.95%)}.plyr__video-embed.plyr iframe{pointer-events:none}.plyr__captions{display:none;position:absolute;bottom:0;left:0;width:100%;padding:20px 20px 30px;color:#fff;font-size:20px}.plyr__captions span{border-radius:2px;padding:3px 10px;background:rgba(0,0,0,.9)}.plyr__captions span:empty{display:none}@media (min-width:768px){.plyr__captions{font-size:24px}}.plyr--captions-active .plyr__captions{display:block}.plyr--fullscreen-active .plyr__captions{font-size:32px}.plyr__controls{position:relative;padding:10px;background:#fff;line-height:1;box-shadow:0 1px 1px rgba(52,63,74,.2)}.plyr__controls:after{content:'';display:table;clear:both}.plyr__controls--right{display:block;margin:10px auto 0}@media (min-width:560px){.plyr__controls--left{float:left}.plyr__controls--right{float:right;margin-top:0}}.plyr__controls button{display:inline-block;vertical-align:middle;margin:0 2px;padding:5px 10px;overflow:hidden;border:0;background:0 0;border-radius:3px;cursor:pointer;color:#6b7d86;transition:background .3s ease,color .3s ease,opacity .3s ease}.plyr__controls button svg{width:18px;height:18px;display:block;fill:currentColor;transition:fill .3s ease}.plyr__controls button.tab-focus:focus,.plyr__controls button:hover{background:#3498db;color:#fff}.plyr__controls .plyr__time,.plyr__tooltip{color:#6b7d86;font-size:14px;font-weight:600}.plyr__controls button:focus{outline:0}.plyr__controls .icon--captions-on,.plyr__controls .icon--exit-fullscreen,.plyr__controls .icon--muted{display:none}.plyr__controls .plyr__time{display:inline-block;vertical-align:middle;margin-left:10px}.plyr__controls .plyr__time+.plyr__time{display:none}@media (min-width:560px){.plyr__controls .plyr__time+.plyr__time{display:inline-block}}.plyr__controls .plyr__time+.plyr__time:before{content:'\\\\2044';margin-right:10px}.plyr__tooltip{visibility:hidden;position:absolute;z-index:2;bottom:100%;margin-bottom:10px;padding:10px 15px;opacity:0;background:#fff;box-shadow:0 0 5px rgba(64,64,64,.1),0 0 0 1px rgba(64,64,64,.1);border-radius:3px;line-height:1.5;-webkit-transform:translate(-50%,10px) scale(.8);transform:translate(-50%,10px) scale(.8);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transition:opacity .2s .1s ease,visibility .3s ease,-webkit-transform .2s .1s ease;transition:transform .2s .1s ease,opacity .2s .1s ease,visibility .3s ease;transition:transform .2s .1s ease,opacity .2s .1s ease,visibility .3s ease,-webkit-transform .2s .1s ease}.plyr__tooltip:after,.plyr__tooltip:before{content:'';position:absolute;width:0;height:0;top:100%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.plyr__tooltip:after{bottom:-8px;border-right:7px solid transparent;border-top:7px solid rgba(64,64,64,.2);border-left:7px solid transparent;z-index:1}.plyr__tooltip:before{bottom:-6px;border-right:6px solid transparent;border-top:6px solid #fff;border-left:6px solid transparent;z-index:2}.plyr__tooltip--visible,.plyr button.tab-focus:focus .plyr__tooltip,.plyr button:hover .plyr__tooltip{visibility:visible;opacity:1;-webkit-transform:translate(-50%) scale(1);transform:translate(-50%) scale(1)}.plyr button:hover .plyr__tooltip{z-index:3}.plyr input[type=range]::-ms-tooltip{display:none}.plyr input[type=range].tab-focus:focus{outline:1px dotted rgba(52,63,74,.8);outline-offset:3px}.plyr__progress--seek[type=range]:focus,.plyr__volume[type=range]:focus{outline:0}.plyr__progress{position:absolute;bottom:100%;left:0;right:0;width:100%;height:10px;background:rgba(86,93,100,.2)}.plyr__progress--buffer[value],.plyr__progress--played[value],.plyr__progress--seek[type=range]{position:absolute;left:0;top:0;width:100%;height:10px;margin:0;padding:0;vertical-align:top;-webkit-appearance:none;-moz-appearance:none;border:none;background:0 0}.plyr__progress--buffer[value]::-webkit-progress-bar,.plyr__progress--played[value]::-webkit-progress-bar{background:0 0;transition:width .2s ease}.plyr__progress--buffer[value]::-webkit-progress-value,.plyr__progress--played[value]::-webkit-progress-value{background:currentColor;transition:width .2s ease}.plyr__progress--buffer[value]::-moz-progress-bar,.plyr__progress--played[value]::-moz-progress-bar{background:currentColor;transition:width .2s ease}.plyr__progress--played[value]{z-index:2;color:#3498db}.plyr__progress--buffer[value]{color:rgba(86,93,100,.25)}.plyr__progress--seek[type=range]{z-index:4;cursor:pointer;outline:0}.plyr__progress--seek[type=range]::-webkit-slider-runnable-track{background:0 0;border:0}.plyr__progress--seek[type=range]::-webkit-slider-thumb{-webkit-appearance:none;background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-moz-range-track{background:0 0;border:0}.plyr__progress--seek[type=range]::-moz-range-thumb{-moz-appearance:none;background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-ms-track{color:transparent;background:0 0;border:0}.plyr__progress--seek[type=range]::-ms-fill-lower,.plyr__progress--seek[type=range]::-ms-fill-upper{background:0 0;border:0}.plyr__progress--seek[type=range]::-ms-thumb{background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-moz-focus-outer{border:0}.plyr__progress .plyr__tooltip{left:0}.plyr--is-touch .plyr--seek[type=range]::-webkit-slider-thumb{width:40px;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.plyr--is-touch .plyr--seek[type=range]::-moz-range-thumb{width:40px;transform:translateX(-50%)}.plyr--is-touch .plyr--seek[type=range]::-ms-thumb{width:40px;transform:translateX(-50%)}.plyr--loading .plyr__progress--buffer{-webkit-animation:plyr-progress 1s linear infinite;animation:plyr-progress 1s linear infinite;background-size:40px 40px;background-repeat:repeat-x;background-color:rgba(86,93,100,.25);background-image:linear-gradient(-45deg,rgba(0,0,0,.15) 25%,transparent 0,transparent 50%,rgba(0,0,0,.15) 0,rgba(0,0,0,.15) 75%,transparent 0,transparent);color:transparent}.plyr--playing .plyr__controls [data-plyr=play],.plyr__controls [data-plyr=pause]{display:none}.plyr--playing .plyr__controls [data-plyr=pause]{display:inline-block}.plyr__volume[type=range]{display:inline-block;vertical-align:middle;-webkit-appearance:none;-moz-appearance:none;width:100px;margin:0 10px 0 0;padding:0;cursor:pointer;background:0 0;border:none}.plyr__volume[type=range]::-webkit-slider-runnable-track{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-webkit-slider-thumb{-webkit-appearance:none;margin-top:-3px;height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]::-moz-range-track{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-moz-range-thumb{height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]::-ms-track{height:6px;background:0 0;border-color:transparent;border-width:3px 0;color:transparent}.plyr__volume[type=range]::-ms-fill-lower,.plyr__volume[type=range]::-ms-fill-upper{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-ms-thumb{height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]:focus::-webkit-slider-thumb{background:#3498db}.plyr__volume[type=range]:focus::-moz-range-thumb{background:#3498db}.plyr__volume[type=range]:focus::-ms-thumb{background:#3498db}.plyr--is-ios.plyr--audio .plyr__controls--right,.plyr--is-ios .plyr__volume,.plyr--is-ios [data-plyr=mute]{display:none}.plyr--is-ios.plyr--audio .plyr__controls--left{float:none}.plyr--audio .plyr__controls{padding-top:20px}.plyr--audio .plyr__progress{bottom:auto;top:0;background:#d6dadd}.plyr--fullscreen-active,.plyr.plyr--fullscreen{position:fixed;top:0;left:0;right:0;bottom:0;height:100%;width:100%;z-index:10000000;background:#000}.plyr--fullscreen-active video,.plyr.plyr--fullscreen video{height:100%}.plyr--fullscreen-active .plyr__video-wrapper,.plyr.plyr--fullscreen .plyr__video-wrapper{height:100%;width:100%}.plyr--fullscreen-active .plyr__controls,.plyr.plyr--fullscreen .plyr__controls{position:absolute;bottom:0;left:0;right:0}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing .plyr__controls,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing .plyr__controls{-webkit-transform:translateY(100%) translateY(5px);transform:translateY(100%) translateY(5px);transition:-webkit-transform .3s .2s ease;transition:transform .3s .2s ease;transition:transform .3s .2s ease,-webkit-transform .3s .2s ease}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing .plyr__captions,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing .plyr__captions{bottom:5px;transition:bottom .3s .2s ease}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing.plyr--hover .plyr__controls,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing.plyr--hover .plyr__controls{-webkit-transform:translateY(0);transform:translateY(0)}.plyr--fullscreen--hide-controls.plyr--fullscreen-active.plyr--playing.plyr--hover .plyr__captions,.plyr--fullscreen-active .plyr__captions,.plyr.plyr--fullscreen .plyr__captions{top:auto;bottom:90px}@media (min-width:560px){.plyr--fullscreen--hide-controls.plyr--fullscreen-active.plyr--playing.plyr--hover .plyr__captions,.plyr--fullscreen-active .plyr__captions,.plyr.plyr--fullscreen .plyr__captions{bottom:60px}}.plyr--captions-active .plyr__controls .icon--captions-on,.plyr--fullscreen-active .icon--exit-fullscreen,.plyr--muted .plyr__controls .icon--muted{display:block}.plyr--captions-active .plyr__controls .icon--captions-on+svg,.plyr--fullscreen-active .icon--exit-fullscreen+svg,.plyr--muted .plyr__controls .icon--muted+svg,.plyr [data-plyr=captions],.plyr [data-plyr=fullscreen]{display:none}.plyr--captions-enabled [data-plyr=captions],.plyr--fullscreen-enabled [data-plyr=fullscreen]{display:inline-block}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(4)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"audio[_v-00580021],video[_v-00580021]{width:100%}\", \"\", {\"version\":3,\"sources\":[\"/./client/components/player/index.vue\"],\"names\":[],\"mappings\":\"AAAA,sCAEE,UAAY,CACb\",\"file\":\"index.vue\",\"sourcesContent\":[\"video[_v-00580021],\\naudio[_v-00580021] {\\n  width: 100%;\\n}\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(4)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"player.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(28);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(46)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./plyr.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./plyr.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(29);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./../../../node_modules/stylus-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./../../../node_modules/stylus-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(33);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// ==========================================================================\n\t// Plyr\n\t// plyr.js v1.5.20\n\t// https://github.com/selz/plyr\n\t// License: The MIT License (MIT)\n\t// ==========================================================================\n\t// Credits: http://paypal.github.io/accessible-html5-video-player/\n\t// ==========================================================================\n\t\n\t(function(root, factory) {\n\t    'use strict';\n\t    /*global define,module*/\n\t\n\t    if (typeof module === 'object' && typeof module.exports === 'object') {\n\t        // Node, CommonJS-like\n\t        module.exports = factory(root, document);\n\t    } else if (true) {\n\t        // AMD\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { factory(root, document) }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        // Browser globals (root is window)\n\t        root.plyr = factory(root, document);\n\t    }\n\t}(typeof window !== 'undefined' ? window : this, function(window, document) {\n\t    'use strict';\n\t    /*global YT,$f*/\n\t\n\t    // Globals\n\t    var fullscreen, api = {};\n\t\n\t    // Default config\n\t    var defaults = {\n\t        enabled:                true,\n\t        debug:                  false,\n\t        autoplay:               false,\n\t        loop:                   false,\n\t        seekTime:               10,\n\t        volume:                 5,\n\t        duration:               null,\n\t        displayDuration:        true,\n\t        iconPrefix:             'icon',\n\t        click:                  true,\n\t        tooltips:               {\n\t            controls:           false,\n\t            seek:               true\n\t        },\n\t        selectors: {\n\t            container:          '.plyr',\n\t            controls: {\n\t                container:      null,\n\t                wrapper:        '.plyr__controls'\n\t            },\n\t            labels:             '[data-plyr]',\n\t            buttons: {\n\t                seek:           '[data-plyr=\"seek\"]',\n\t                play:           '[data-plyr=\"play\"]',\n\t                pause:          '[data-plyr=\"pause\"]',\n\t                restart:        '[data-plyr=\"restart\"]',\n\t                rewind:         '[data-plyr=\"rewind\"]',\n\t                forward:        '[data-plyr=\"fast-forward\"]',\n\t                mute:           '[data-plyr=\"mute\"]',\n\t                volume:         '[data-plyr=\"volume\"]',\n\t                captions:       '[data-plyr=\"captions\"]',\n\t                fullscreen:     '[data-plyr=\"fullscreen\"]'\n\t            },\n\t            progress: {\n\t                container:      '.plyr__progress',\n\t                buffer:         '.plyr__progress--buffer',\n\t                played:         '.plyr__progress--played'\n\t            },\n\t            captions:           '.plyr__captions',\n\t            currentTime:        '.plyr__time--current',\n\t            duration:           '.plyr__time--duration'\n\t        },\n\t        classes: {\n\t            videoWrapper:       'plyr__video-wrapper',\n\t            embedWrapper:       'plyr__video-embed',\n\t            type:               'plyr--{0}',\n\t            stopped:            'plyr--stopped',\n\t            playing:            'plyr--playing',\n\t            muted:              'plyr--muted',\n\t            loading:            'plyr--loading',\n\t            hover:              'plyr--hover',\n\t            tooltip:            'plyr__tooltip',\n\t            hidden:             'plyr__sr-only',\n\t            isIos:              'plyr--is-ios',\n\t            isTouch:            'plyr--is-touch',\n\t            captions: {\n\t                enabled:        'plyr--captions-enabled',\n\t                active:         'plyr--captions-active'\n\t            },\n\t            fullscreen: {\n\t                enabled:        'plyr--fullscreen-enabled',\n\t                active:         'plyr--fullscreen-active',\n\t                hideControls:   'plyr--fullscreen--hide-controls'\n\t            },\n\t            tabFocus:           'tab-focus'\n\t        },\n\t        captions: {\n\t            defaultActive:      false\n\t        },\n\t        fullscreen: {\n\t            enabled:            true,\n\t            fallback:           true,\n\t            hideControls:       true,\n\t            allowAudio:         false\n\t        },\n\t        storage: {\n\t            enabled:            true,\n\t            key:                'plyr'\n\t        },\n\t        controls:               ['restart', 'rewind', 'play', 'fast-forward', 'current-time', 'duration', 'mute', 'volume', 'captions', 'fullscreen'],\n\t        i18n: {\n\t            restart:            'Restart',\n\t            rewind:             'Rewind {seektime} secs',\n\t            play:               'Play',\n\t            pause:              'Pause',\n\t            forward:            'Forward {seektime} secs',\n\t            played:             'played',\n\t            buffered:           'buffered',\n\t            currentTime:        'Current time',\n\t            duration:           'Duration',\n\t            volume:             'Volume',\n\t            toggleMute:         'Toggle Mute',\n\t            toggleCaptions:     'Toggle Captions',\n\t            toggleFullscreen:   'Toggle Fullscreen',\n\t            frameTitle:         'Player for {title}'\n\t        },\n\t        types: {\n\t            embed:              ['youtube', 'vimeo'],\n\t            html5:              ['video', 'audio']\n\t        },\n\t        // URLs\n\t        urls: {\n\t            vimeo: {\n\t                api:            'https://cdn.plyr.io/froogaloop/1.0.1/plyr.froogaloop.js',\n\t            },\n\t            youtube: {\n\t                api:            'https://www.youtube.com/iframe_api'\n\t            }\n\t        },\n\t        // Custom control listeners\n\t        listeners: {\n\t            seek:               null,\n\t            play:               null,\n\t            pause:              null,\n\t            restart:            null,\n\t            rewind:             null,\n\t            forward:            null,\n\t            mute:               null,\n\t            volume:             null,\n\t            captions:           null,\n\t            fullscreen:         null\n\t        },\n\t        // Events to watch on HTML5 media elements\n\t        events:                 ['ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'emptied']\n\t    };\n\t\n\t    // Credits: http://paypal.github.io/accessible-html5-video-player/\n\t    // Unfortunately, due to mixed support, UA sniffing is required\n\t    function _browserSniff() {\n\t        var nAgt = navigator.userAgent,\n\t            name = navigator.appName,\n\t            fullVersion = '' + parseFloat(navigator.appVersion),\n\t            majorVersion = parseInt(navigator.appVersion, 10),\n\t            nameOffset,\n\t            verOffset,\n\t            ix;\n\t\n\t        // MSIE 11\n\t        if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n\t            name = 'IE';\n\t            fullVersion = '11;';\n\t        }\n\t        // MSIE\n\t        else if ((verOffset=nAgt.indexOf('MSIE')) !== -1) {\n\t            name = 'IE';\n\t            fullVersion = nAgt.substring(verOffset + 5);\n\t        }\n\t        // Chrome\n\t        else if ((verOffset=nAgt.indexOf('Chrome')) !== -1) {\n\t            name = 'Chrome';\n\t            fullVersion = nAgt.substring(verOffset + 7);\n\t        }\n\t        // Safari\n\t        else if ((verOffset=nAgt.indexOf('Safari')) !== -1) {\n\t            name = 'Safari';\n\t            fullVersion = nAgt.substring(verOffset + 7);\n\t            if ((verOffset=nAgt.indexOf('Version')) !== -1) {\n\t                fullVersion = nAgt.substring(verOffset + 8);\n\t            }\n\t        }\n\t        // Firefox\n\t        else if ((verOffset=nAgt.indexOf('Firefox')) !== -1) {\n\t            name = 'Firefox';\n\t            fullVersion = nAgt.substring(verOffset + 8);\n\t        }\n\t        // In most other browsers, 'name/version' is at the end of userAgent\n\t        else if ((nameOffset=nAgt.lastIndexOf(' ') + 1) < (verOffset=nAgt.lastIndexOf('/'))) {\n\t            name = nAgt.substring(nameOffset,verOffset);\n\t            fullVersion = nAgt.substring(verOffset + 1);\n\t\n\t            if (name.toLowerCase() == name.toUpperCase()) {\n\t                name = navigator.appName;\n\t            }\n\t        }\n\t        // Trim the fullVersion string at semicolon/space if present\n\t        if ((ix = fullVersion.indexOf(';')) !== -1) {\n\t            fullVersion = fullVersion.substring(0, ix);\n\t        }\n\t        if ((ix = fullVersion.indexOf(' ')) !== -1) {\n\t            fullVersion = fullVersion.substring(0, ix);\n\t        }\n\t        // Get major version\n\t        majorVersion = parseInt('' + fullVersion, 10);\n\t        if (isNaN(majorVersion)) {\n\t            fullVersion = '' + parseFloat(navigator.appVersion);\n\t            majorVersion = parseInt(navigator.appVersion, 10);\n\t        }\n\t\n\t        // Return data\n\t        return {\n\t            name:       name,\n\t            version:    majorVersion,\n\t            ios:        /(iPad|iPhone|iPod)/g.test(navigator.platform),\n\t            touch:      'ontouchstart' in document.documentElement\n\t        };\n\t    }\n\t\n\t    // Check for mime type support against a player instance\n\t    // Credits: http://diveintohtml5.info/everything.html\n\t    // Related: http://www.leanbackplyr.com/test/h5mt.html\n\t    function _supportMime(plyr, mimeType) {\n\t        var media = plyr.media;\n\t\n\t        // Only check video types for video players\n\t        if (plyr.type == 'video') {\n\t            // Check type\n\t            switch (mimeType) {\n\t                case 'video/webm':   return !!(media.canPlayType && media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, ''));\n\t                case 'video/mp4':    return !!(media.canPlayType && media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, ''));\n\t                case 'video/ogg':    return !!(media.canPlayType && media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''));\n\t            }\n\t        }\n\t\n\t        // Only check audio types for audio players\n\t        else if (plyr.type == 'audio') {\n\t            // Check type\n\t            switch (mimeType) {\n\t                case 'audio/mpeg':   return !!(media.canPlayType && media.canPlayType('audio/mpeg;').replace(/no/, ''));\n\t                case 'audio/ogg':    return !!(media.canPlayType && media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n\t                case 'audio/wav':    return !!(media.canPlayType && media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, ''));\n\t            }\n\t        }\n\t\n\t        // If we got this far, we're stuffed\n\t        return false;\n\t    }\n\t\n\t    // Inject a script\n\t    function _injectScript(source) {\n\t        if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n\t            return;\n\t        }\n\t\n\t        var tag = document.createElement('script');\n\t        tag.src = source;\n\t        var firstScriptTag = document.getElementsByTagName('script')[0];\n\t        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\t    }\n\t\n\t    // Element exists in an array\n\t    function _inArray(haystack, needle) {\n\t        return Array.prototype.indexOf && (haystack.indexOf(needle) != -1);\n\t    }\n\t\n\t    // Replace all\n\t    function _replaceAll(string, find, replace) {\n\t        return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n\t    }\n\t\n\t    // Wrap an element\n\t    function _wrap(elements, wrapper) {\n\t        // Convert `elements` to an array, if necessary.\n\t        if (!elements.length) {\n\t            elements = [elements];\n\t        }\n\t\n\t        // Loops backwards to prevent having to clone the wrapper on the\n\t        // first element (see `child` below).\n\t        for (var i = elements.length - 1; i >= 0; i--) {\n\t            var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n\t            var element = elements[i];\n\t\n\t            // Cache the current parent and sibling.\n\t            var parent  = element.parentNode;\n\t            var sibling = element.nextSibling;\n\t\n\t            // Wrap the element (is automatically removed from its current\n\t            // parent).\n\t            child.appendChild(element);\n\t\n\t            // If the element had a sibling, insert the wrapper before\n\t            // the sibling to maintain the HTML structure; otherwise, just\n\t            // append it to the parent.\n\t            if (sibling) {\n\t                parent.insertBefore(child, sibling);\n\t            }\n\t            else {\n\t                parent.appendChild(child);\n\t            }\n\t        }\n\t    }\n\t\n\t    // Unwrap an element\n\t    // http://plainjs.com/javascript/manipulation/unwrap-a-dom-element-35/\n\t    function _unwrap(wrapper) {\n\t        // Get the element's parent node\n\t        var parent = wrapper.parentNode;\n\t\n\t        // Move all children out of the element\n\t        while (wrapper.firstChild) {\n\t            parent.insertBefore(wrapper.firstChild, wrapper);\n\t        }\n\t\n\t        // Remove the empty element\n\t        parent.removeChild(wrapper);\n\t    }\n\t\n\t    // Remove an element\n\t    function _remove(element) {\n\t        if(!element) {\n\t            return;\n\t        }\n\t        element.parentNode.removeChild(element);\n\t    }\n\t\n\t    // Prepend child\n\t    function _prependChild(parent, element) {\n\t        parent.insertBefore(element, parent.firstChild);\n\t    }\n\t\n\t    // Set attributes\n\t    function _setAttributes(element, attributes) {\n\t        for (var key in attributes) {\n\t            element.setAttribute(key, (typeof attributes[key] === 'boolean' && attributes[key]) ? '' : attributes[key]);\n\t        }\n\t    }\n\t\n\t    // Insert a HTML element\n\t    function _insertElement(type, parent, attributes) {\n\t        // Create a new <element>\n\t        var element = document.createElement(type);\n\t\n\t        // Set all passed attributes\n\t        _setAttributes(element, attributes);\n\t\n\t        // Inject the new element\n\t        _prependChild(parent, element);\n\t    }\n\t\n\t    // Get a classname from selector\n\t    function _getClassname(selector) {\n\t        return selector.replace('.', '');\n\t    }\n\t\n\t    // Toggle class on an element\n\t    function _toggleClass(element, className, state) {\n\t        if (element) {\n\t            if (element.classList) {\n\t                element.classList[state ? 'add' : 'remove'](className);\n\t            }\n\t            else {\n\t                var name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n\t                element.className = name + (state ? ' ' + className : '');\n\t            }\n\t        }\n\t    }\n\t\n\t    // Has class name\n\t    function _hasClass(element, className) {\n\t        if (element) {\n\t            if (element.classList) {\n\t                return element.classList.contains(className);\n\t            }\n\t            else {\n\t                return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t\n\t    // Bind event\n\t    function _on(element, events, callback) {\n\t        if (element) {\n\t            _toggleListener(element, events, callback, true);\n\t        }\n\t    }\n\t\n\t    // Unbind event\n\t    function _off(element, events, callback) {\n\t        if (element) {\n\t            _toggleListener(element, events, callback, false);\n\t        }\n\t    }\n\t\n\t    // Bind along with custom handler\n\t    function _proxyListener(element, eventName, userListener, defaultListener) {\n\t        _on(element, eventName, function(event) {\n\t            if(userListener) {\n\t                userListener.apply(element, [event]);\n\t            }\n\t            defaultListener.apply(element, [event]);\n\t        });\n\t    }\n\t\n\t    // Toggle event listener\n\t    function _toggleListener(element, events, callback, toggle) {\n\t        var eventList = events.split(' ');\n\t\n\t        // If a nodelist is passed, call itself on each node\n\t        if (element instanceof NodeList) {\n\t            for (var x = 0; x < element.length; x++) {\n\t                if (element[x] instanceof Node) {\n\t                    _toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n\t                }\n\t            }\n\t            return;\n\t        }\n\t\n\t        // If a single node is passed, bind the event listener\n\t        for (var i = 0; i < eventList.length; i++) {\n\t            element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, false);\n\t        }\n\t    }\n\t\n\t    // Trigger event\n\t    function _triggerEvent(element, eventName, properties) {\n\t        // Bail if no element\n\t        if(!element || !eventName) {\n\t            return;\n\t        }\n\t\n\t        // create and dispatch the event\n\t        var event = new CustomEvent(eventName, properties);\n\t\n\t        // Dispatch the event\n\t        element.dispatchEvent(event);\n\t    }\n\t\n\t    // Toggle aria-pressed state on a toggle button\n\t    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n\t    function _toggleState(target, state) {\n\t        // Bail if no target\n\t        if(!target) {\n\t            return;\n\t        }\n\t\n\t        // Get state\n\t        state = (typeof state === 'boolean' ? state : !target.getAttribute('aria-pressed'));\n\t\n\t        // Set the attribute on target\n\t        target.setAttribute('aria-pressed', state);\n\t\n\t        return state;\n\t    }\n\t\n\t    // Get percentage\n\t    function _getPercentage(current, max) {\n\t        if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n\t            return 0;\n\t        }\n\t        return ((current / max) * 100).toFixed(2);\n\t    }\n\t\n\t    // Deep extend/merge destination object with N more objects\n\t    // http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n\t    // Removed call to arguments.callee (used explicit function name instead)\n\t    function _extend() {\n\t        // Get arguments\n\t\t\tvar objects = arguments;\n\t\n\t        // Bail if nothing to merge\n\t        if(!objects.length) {\n\t            return;\n\t        }\n\t\n\t        // Return first if specified but nothing to merge\n\t        if(objects.lenth == 1) {\n\t            return objects[0];\n\t        }\n\t\n\t        // First object is the destination\n\t        var destination = Array.prototype.shift.call(objects),\n\t            length      = objects.length;\n\t\n\t        // Loop through all objects to merge\n\t        for (var i = 0; i < length; i++) {\n\t            var source = objects[i];\n\t\n\t            for (var property in source) {\n\t                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n\t                    destination[property] = destination[property] || {};\n\t                    _extend(destination[property], source[property]);\n\t                }\n\t                else {\n\t                    destination[property] = source[property];\n\t                }\n\t            }\n\t        }\n\t\n\t        return destination;\n\t    }\n\t\n\t    // Fullscreen API\n\t    function _fullscreen() {\n\t        var fullscreen = {\n\t                supportsFullScreen: false,\n\t                isFullScreen: function() { return false; },\n\t                requestFullScreen: function() {},\n\t                cancelFullScreen: function() {},\n\t                fullScreenEventName: '',\n\t                element: null,\n\t                prefix: ''\n\t            },\n\t            browserPrefixes = 'webkit moz o ms khtml'.split(' ');\n\t\n\t        // Check for native support\n\t        if (typeof document.cancelFullScreen !== 'undefined') {\n\t            fullscreen.supportsFullScreen = true;\n\t        }\n\t        else {\n\t            // Check for fullscreen support by vendor prefix\n\t            for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {\n\t                fullscreen.prefix = browserPrefixes[i];\n\t\n\t                if (typeof document[fullscreen.prefix + 'CancelFullScreen'] !== 'undefined') {\n\t                    fullscreen.supportsFullScreen = true;\n\t                    break;\n\t                }\n\t                // Special case for MS (when isn't it?)\n\t                else if (typeof document.msExitFullscreen !== 'undefined' && document.msFullscreenEnabled) {\n\t                    fullscreen.prefix = 'ms';\n\t                    fullscreen.supportsFullScreen = true;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Update methods to do something useful\n\t        if (fullscreen.supportsFullScreen) {\n\t            // Yet again Microsoft awesomeness,\n\t            // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n\t            fullscreen.fullScreenEventName = (fullscreen.prefix == 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange');\n\t\n\t            fullscreen.isFullScreen = function(element) {\n\t                if (typeof element === 'undefined') {\n\t                    element = document.body;\n\t                }\n\t                switch (this.prefix) {\n\t                    case '':\n\t                        return document.fullscreenElement == element;\n\t                    case 'moz':\n\t                        return document.mozFullScreenElement == element;\n\t                    default:\n\t                        return document[this.prefix + 'FullscreenElement'] == element;\n\t                }\n\t            };\n\t            fullscreen.requestFullScreen = function(element) {\n\t                if (typeof element === 'undefined') {\n\t                    element = document.body;\n\t                }\n\t                return (this.prefix === '') ? element.requestFullScreen() : element[this.prefix + (this.prefix == 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n\t            };\n\t            fullscreen.cancelFullScreen = function() {\n\t                return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + (this.prefix == 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n\t            };\n\t            fullscreen.element = function() {\n\t                return (this.prefix === '') ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n\t            };\n\t        }\n\t\n\t        return fullscreen;\n\t    }\n\t\n\t    // Local storage\n\t    function _storage() {\n\t        var storage = {\n\t            supported: (function() {\n\t                if(!('localStorage' in window)) {\n\t    \t\t\t\treturn false;\n\t    \t\t\t}\n\t\n\t    \t\t\t// Try to use it (it might be disabled, e.g. user is in private/porn mode)\n\t                // see: https://github.com/Selz/plyr/issues/131\n\t    \t\t\ttry {\n\t                    // Add test item\n\t    \t\t\t\twindow.localStorage.setItem('___test', 'OK');\n\t\n\t                    // Get the test item\n\t                    var result = window.localStorage.getItem('___test');\n\t\n\t                    // Clean up\n\t                    window.localStorage.removeItem('___test');\n\t\n\t                    // Check if value matches\n\t                    return (result === 'OK');\n\t    \t\t\t}\n\t    \t\t\tcatch (e) {\n\t    \t\t\t\treturn false;\n\t    \t\t\t}\n\t\n\t    \t\t\treturn false;\n\t            })()\n\t        };\n\t        return storage;\n\t    }\n\t\n\t    // Player instance\n\t    function Plyr(container, config) {\n\t        var plyr = this;\n\t        plyr.container = container;\n\t        plyr.timers = {};\n\t\n\t        // Log config options\n\t        _log(config);\n\t\n\t        // Debugging\n\t        function _log(text, warn) {\n\t            if (config.debug && window.console) {\n\t                console[(warn ? 'warn' : 'log')](text);\n\t            }\n\t        }\n\t\n\t        // Build the default HTML\n\t        function _buildControls() {\n\t            // Open and add the progress and seek elements\n\t            var html = [\n\t            '<div class=\"plyr__controls\">',\n\t                '<div class=\"plyr__progress\">',\n\t                    '<label for=\"seek{id}\" class=\"plyr__sr-only\">Seek</label>',\n\t                    '<input id=\"seek{id}\" class=\"plyr__progress--seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"0\" data-plyr=\"seek\">',\n\t                    '<progress class=\"plyr__progress--played\" max=\"100\" value=\"0\">',\n\t                        '<span>0</span>% ' + config.i18n.played,\n\t                    '</progress>',\n\t                    '<progress class=\"plyr__progress--buffer\" max=\"100\" value=\"0\">',\n\t                        '<span>0</span>% ' + config.i18n.buffered,\n\t                    '</progress>'];\n\t\n\t            // Seek tooltip\n\t            if (config.tooltips.seek) {\n\t                html.push('<span class=\"plyr__tooltip\">00:00</span>');\n\t            }\n\t\n\t            // Close progress\n\t            html.push('</div>',\n\t                '<span class=\"plyr__controls--left\">');\n\t\n\t            // Restart button\n\t            if (_inArray(config.controls, 'restart')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"restart\">',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-restart\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.restart + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Rewind button\n\t            if (_inArray(config.controls, 'rewind')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"rewind\">',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-rewind\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.rewind + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Play/pause button\n\t            if (_inArray(config.controls, 'play')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"play\">',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-play\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n\t                    '</button>',\n\t                    '<button type=\"button\" data-plyr=\"pause\">',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-pause\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.pause + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Fast forward button\n\t            if (_inArray(config.controls, 'fast-forward')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"fast-forward\">',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-fast-forward\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.forward + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Media current time display\n\t            if (_inArray(config.controls, 'current-time')) {\n\t                html.push(\n\t                    '<span class=\"plyr__time\">',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.currentTime + '</span>',\n\t                        '<span class=\"plyr__time--current\">00:00</span>',\n\t                    '</span>'\n\t                );\n\t            }\n\t\n\t            // Media duration display\n\t            if (_inArray(config.controls, 'duration')) {\n\t                html.push(\n\t                    '<span class=\"plyr__time\">',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.duration + '</span>',\n\t                        '<span class=\"plyr__time--duration\">00:00</span>',\n\t                    '</span>'\n\t                );\n\t            }\n\t\n\t            // Close left controls\n\t            html.push(\n\t                '</span>',\n\t                '<span class=\"plyr__controls--right\">'\n\t            );\n\t\n\t            // Toggle mute button\n\t            if (_inArray(config.controls, 'mute')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"mute\">',\n\t                        '<svg class=\"icon--muted\"><use xlink:href=\"#' + config.iconPrefix + '-muted\" /></svg>',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-volume\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleMute + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Volume range control\n\t            if (_inArray(config.controls, 'volume')) {\n\t                html.push(\n\t                    '<label for=\"volume{id}\" class=\"plyr__sr-only\">' + config.i18n.volume + '</label>',\n\t                    '<input id=\"volume{id}\" class=\"plyr__volume\" type=\"range\" min=\"0\" max=\"10\" value=\"5\" data-plyr=\"volume\">'\n\t                );\n\t            }\n\t\n\t            // Toggle captions button\n\t            if (_inArray(config.controls, 'captions')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"captions\">',\n\t                        '<svg class=\"icon--captions-on\"><use xlink:href=\"#' + config.iconPrefix + '-captions-on\" /></svg>',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-captions-off\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleCaptions + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Toggle fullscreen button\n\t            if (_inArray(config.controls, 'fullscreen')) {\n\t                html.push(\n\t                    '<button type=\"button\" data-plyr=\"fullscreen\">',\n\t                        '<svg class=\"icon--exit-fullscreen\"><use xlink:href=\"#' + config.iconPrefix + '-exit-fullscreen\" /></svg>',\n\t                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-enter-fullscreen\" /></svg>',\n\t                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleFullscreen + '</span>',\n\t                    '</button>'\n\t                );\n\t            }\n\t\n\t            // Close everything\n\t            html.push(\n\t                '</span>',\n\t            '</div>'\n\t            );\n\t\n\t            return html.join('');\n\t        }\n\t\n\t        // Setup fullscreen\n\t        function _setupFullscreen() {\n\t            if (!plyr.supported.full) {\n\t                return;\n\t            }\n\t\n\t            if ((plyr.type != 'audio' || config.fullscreen.allowAudio) && config.fullscreen.enabled) {\n\t                // Check for native support\n\t                var nativeSupport = fullscreen.supportsFullScreen;\n\t\n\t                if (nativeSupport || (config.fullscreen.fallback && !_inFrame())) {\n\t                    _log((nativeSupport ? 'Native' : 'Fallback') + ' fullscreen enabled');\n\t\n\t                    // Add styling hook\n\t                    _toggleClass(plyr.container, config.classes.fullscreen.enabled, true);\n\t                }\n\t                else {\n\t                    _log('Fullscreen not supported and fallback disabled');\n\t                }\n\t\n\t                // Toggle state\n\t                _toggleState(plyr.buttons.fullscreen, false);\n\t\n\t                // Setup focus trap\n\t                _focusTrap();\n\t\n\t                // Set control hide class hook\n\t                if (config.fullscreen.hideControls) {\n\t                    _toggleClass(plyr.container, config.classes.fullscreen.hideControls, true);\n\t                }\n\t            }\n\t        }\n\t\n\t        // Setup captions\n\t        function _setupCaptions() {\n\t            if (plyr.type !== 'video') {\n\t                return;\n\t            }\n\t\n\t            // Inject the container\n\t            if (!_getElement(config.selectors.captions)) {\n\t                plyr.videoContainer.insertAdjacentHTML('afterbegin', '<div class=\"' + _getClassname(config.selectors.captions) + '\"></div>');\n\t            }\n\t\n\t            // Determine if HTML5 textTracks is supported\n\t            plyr.usingTextTracks = false;\n\t            if (plyr.media.textTracks) {\n\t                plyr.usingTextTracks = true;\n\t            }\n\t\n\t            // Get URL of caption file if exists\n\t            var captionSrc = '',\n\t                kind,\n\t                children = plyr.media.childNodes;\n\t\n\t            for (var i = 0; i < children.length; i++) {\n\t                if (children[i].nodeName.toLowerCase() === 'track') {\n\t                    kind = children[i].kind;\n\t                    if (kind === 'captions' || kind === 'subtitles') {\n\t                        captionSrc = children[i].getAttribute('src');\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Record if caption file exists or not\n\t            plyr.captionExists = true;\n\t            if (captionSrc === '') {\n\t                plyr.captionExists = false;\n\t                _log('No caption track found');\n\t            }\n\t            else {\n\t                _log('Caption track found; URI: ' + captionSrc);\n\t            }\n\t\n\t            // If no caption file exists, hide container for caption text\n\t            if (!plyr.captionExists) {\n\t                _toggleClass(plyr.container, config.classes.captions.enabled);\n\t            }\n\t            // If caption file exists, process captions\n\t            else {\n\t                // Turn off native caption rendering to avoid double captions\n\t                // This doesn't seem to work in Safari 7+, so the <track> elements are removed from the dom below\n\t                var tracks = plyr.media.textTracks;\n\t                for (var x = 0; x < tracks.length; x++) {\n\t                    tracks[x].mode = 'hidden';\n\t                }\n\t\n\t                // Enable UI\n\t                _showCaptions(plyr);\n\t\n\t                // Disable unsupported browsers than report false positive\n\t                // Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\n\t                if ((plyr.browser.name === 'IE' && plyr.browser.version >= 10) ||\n\t                    (plyr.browser.name === 'Firefox' && plyr.browser.version >= 31)) {\n\t\n\t                    // Debugging\n\t                    _log('Detected browser with known TextTrack issues - using manual fallback');\n\t\n\t                    // Set to false so skips to 'manual' captioning\n\t                    plyr.usingTextTracks = false;\n\t                }\n\t\n\t                // Rendering caption tracks\n\t                // Native support required - http://caniuse.com/webvtt\n\t                if (plyr.usingTextTracks) {\n\t                    _log('TextTracks supported');\n\t\n\t                    for (var y = 0; y < tracks.length; y++) {\n\t                        var track = tracks[y];\n\t\n\t                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n\t                            _on(track, 'cuechange', function() {\n\t                                // Display a cue, if there is one\n\t                                if (this.activeCues[0] && 'text' in this.activeCues[0]) {\n\t                                    _setCaption(this.activeCues[0].getCueAsHTML());\n\t                                }\n\t                                else {\n\t                                    _setCaption();\n\t                                }\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t                // Caption tracks not natively supported\n\t                else {\n\t                    _log('TextTracks not supported so rendering captions manually');\n\t\n\t                    // Render captions from array at appropriate time\n\t                    plyr.currentCaption = '';\n\t                    plyr.captions = [];\n\t\n\t                    if (captionSrc !== '') {\n\t                        // Create XMLHttpRequest Object\n\t                        var xhr = new XMLHttpRequest();\n\t\n\t                        xhr.onreadystatechange = function() {\n\t                            if (xhr.readyState === 4) {\n\t                                if (xhr.status === 200) {\n\t                                    var captions = [],\n\t                                        caption,\n\t                                        req = xhr.responseText;\n\t\n\t                                    captions = req.split('\\n\\n');\n\t\n\t                                    for (var r = 0; r < captions.length; r++) {\n\t                                        caption = captions[r];\n\t                                        plyr.captions[r] = [];\n\t\n\t                                        // Get the parts of the captions\n\t                                        var parts = caption.split('\\n'),\n\t                                            index = 0;\n\t\n\t                                        // Incase caption numbers are added\n\t                                        if(parts[index].indexOf(\":\") === -1) {\n\t                                            index = 1;\n\t                                        }\n\t\n\t                                        plyr.captions[r] = [parts[index], parts[index + 1]];\n\t                                    }\n\t\n\t                                    // Remove first element ('VTT')\n\t                                    plyr.captions.shift();\n\t\n\t                                    _log('Successfully loaded the caption file via AJAX');\n\t                                }\n\t                                else {\n\t                                    _log('There was a problem loading the caption file via AJAX', true);\n\t                                }\n\t                            }\n\t                        };\n\t\n\t                        xhr.open('get', captionSrc, true);\n\t\n\t                        xhr.send();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // Set the current caption\n\t        function _setCaption(caption) {\n\t            var container = _getElement(config.selectors.captions),\n\t                content = document.createElement('span');\n\t\n\t            // Empty the container\n\t            container.innerHTML = '';\n\t\n\t            // Default to empty\n\t            if(typeof caption === 'undefined') {\n\t                caption = '';\n\t            }\n\t\n\t            // Set the span content\n\t            if(typeof caption === 'string') {\n\t                content.innerHTML = caption.trim();\n\t            }\n\t            else {\n\t                content.appendChild(caption);\n\t            }\n\t\n\t            // Set new caption text\n\t            container.appendChild(content);\n\t\n\t            // Force redraw\n\t            var redraw = container.offsetHeight;\n\t        }\n\t\n\t        // Captions functions\n\t        // Seek the manual caption time and update UI\n\t        function _seekManualCaptions(time) {\n\t            // Utilities for caption time codes\n\t            function _timecodeCommon(tc, pos) {\n\t                var tcpair = [];\n\t                tcpair = tc.split(' --> ');\n\t                for(var i = 0; i < tcpair.length; i++) {\n\t                    // WebVTT allows for extra meta data after the timestamp line\n\t                    // So get rid of this if it exists\n\t                    tcpair[i] = tcpair[i].replace(/(\\d+:\\d+:\\d+\\.\\d+).*/, \"$1\");\n\t                }\n\t                return _subTcSecs(tcpair[pos]);\n\t            }\n\t            function _timecodeMin(tc) {\n\t                return _timecodeCommon(tc, 0);\n\t            }\n\t            function _timecodeMax(tc) {\n\t                return _timecodeCommon(tc, 1);\n\t            }\n\t            function _subTcSecs(tc) {\n\t                if (tc === null || tc === undefined) {\n\t                    return 0;\n\t                }\n\t                else {\n\t                    var tc1 = [],\n\t                        tc2 = [],\n\t                        seconds;\n\t                    tc1 = tc.split(',');\n\t                    tc2 = tc1[0].split(':');\n\t                    seconds = Math.floor(tc2[0]*60*60) + Math.floor(tc2[1]*60) + Math.floor(tc2[2]);\n\t                    return seconds;\n\t                }\n\t            }\n\t\n\t            // If it's not video, or we're using textTracks, bail.\n\t            if (plyr.usingTextTracks || plyr.type !== 'video' || !plyr.supported.full) {\n\t                return;\n\t            }\n\t\n\t            // Reset subcount\n\t            plyr.subcount = 0;\n\t\n\t            // Check time is a number, if not use currentTime\n\t            // IE has a bug where currentTime doesn't go to 0\n\t            // https://twitter.com/Sam_Potts/status/573715746506731521\n\t            time = typeof time === 'number' ? time : plyr.media.currentTime;\n\t\n\t            // If there's no subs available, bail\n\t            if (!plyr.captions[plyr.subcount]) {\n\t                return;\n\t            }\n\t\n\t            while (_timecodeMax(plyr.captions[plyr.subcount][0]) < time.toFixed(1)) {\n\t                plyr.subcount++;\n\t                if (plyr.subcount > plyr.captions.length-1) {\n\t                    plyr.subcount = plyr.captions.length-1;\n\t                    break;\n\t                }\n\t            }\n\t\n\t            // Check if the next caption is in the current time range\n\t            if (plyr.media.currentTime.toFixed(1) >= _timecodeMin(plyr.captions[plyr.subcount][0]) &&\n\t                plyr.media.currentTime.toFixed(1) <= _timecodeMax(plyr.captions[plyr.subcount][0])) {\n\t                    plyr.currentCaption = plyr.captions[plyr.subcount][1];\n\t\n\t                // Render the caption\n\t                _setCaption(plyr.currentCaption);\n\t            }\n\t            else {\n\t                _setCaption();\n\t            }\n\t        }\n\t\n\t        // Display captions container and button (for initialization)\n\t        function _showCaptions() {\n\t            // If there's no caption toggle, bail\n\t            if (!plyr.buttons.captions) {\n\t                return;\n\t            }\n\t\n\t            _toggleClass(plyr.container, config.classes.captions.enabled, true);\n\t\n\t            if (config.captions.defaultActive) {\n\t                _toggleClass(plyr.container, config.classes.captions.active, true);\n\t                _toggleState(plyr.buttons.captions, true);\n\t            }\n\t        }\n\t\n\t        // Find all elements\n\t        function _getElements(selector) {\n\t            return plyr.container.querySelectorAll(selector);\n\t        }\n\t\n\t        // Find a single element\n\t        function _getElement(selector) {\n\t            return _getElements(selector)[0];\n\t        }\n\t\n\t        // Determine if we're in an iframe\n\t        function _inFrame() {\n\t            try {\n\t                return window.self !== window.top;\n\t            }\n\t            catch (e) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        // Trap focus inside container\n\t        function _focusTrap() {\n\t            var tabbables   = _getElements('input:not([disabled]), button:not([disabled])'),\n\t                first       = tabbables[0],\n\t                last        = tabbables[tabbables.length - 1];\n\t\n\t            function _checkFocus(event) {\n\t                // If it is TAB\n\t                if (event.which === 9 && plyr.isFullscreen) {\n\t                    // Move focus to first element that can be tabbed if Shift isn't used\n\t                    if (event.target === last && !event.shiftKey) {\n\t                        event.preventDefault();\n\t                        first.focus();\n\t                    }\n\t                    // Move focus to last element that can be tabbed if Shift is used\n\t                    else if (event.target === first && event.shiftKey) {\n\t                        event.preventDefault();\n\t                        last.focus();\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Bind the handler\n\t            _on(plyr.container, 'keydown', _checkFocus);\n\t        }\n\t\n\t        // Add elements to HTML5 media (source, tracks, etc)\n\t        function _insertChildElements(type, attributes) {\n\t            if (typeof attributes === 'string') {\n\t               _insertElement(type, plyr.media, { src: attributes });\n\t            }\n\t            else if (attributes.constructor === Array) {\n\t                for (var i = attributes.length - 1; i >= 0; i--) {\n\t                    _insertElement(type, plyr.media, attributes[i]);\n\t                }\n\t            }\n\t        }\n\t\n\t        // Insert controls\n\t        function _injectControls() {\n\t            // Make a copy of the html\n\t            var html = config.html;\n\t\n\t            // Insert custom video controls\n\t            _log('Injecting custom controls');\n\t\n\t            // If no controls are specified, create default\n\t            if (!html) {\n\t                html = _buildControls();\n\t            }\n\t\n\t            // Replace seek time instances\n\t            html = _replaceAll(html, '{seektime}', config.seekTime);\n\t\n\t            // Replace all id references with random numbers\n\t            html = _replaceAll(html, '{id}', Math.floor(Math.random() * (10000)));\n\t\n\t            // Controls container\n\t            var container;\n\t\n\t            // Inject to custom location\n\t            if (config.selectors.controls.container !== null) {\n\t                container = config.selectors.controls.container;\n\t\n\t                if(typeof selector === 'string') {\n\t                    container = document.querySelector(container);\n\t                }\n\t            }\n\t\n\t            // Inject into the container by default\n\t            if (!(container instanceof HTMLElement)) {\n\t                container = plyr.container\n\t            }\n\t\n\t            // Inject controls HTML\n\t            container.insertAdjacentHTML('beforeend', html);\n\t\n\t            // Setup tooltips\n\t            if (config.tooltips.controls) {\n\t                var labels = _getElements(config.selectors.labels + ' .' + config.classes.hidden);\n\t\n\t                for (var i = labels.length - 1; i >= 0; i--) {\n\t                    var label = labels[i];\n\t\n\t                    _toggleClass(label, config.classes.hidden, false);\n\t                    _toggleClass(label, config.classes.tooltip, true);\n\t                }\n\t            }\n\t        }\n\t\n\t        // Find the UI controls and store references\n\t        function _findElements() {\n\t            try {\n\t                plyr.controls                 = _getElement(config.selectors.controls.wrapper);\n\t\n\t                // Buttons\n\t                plyr.buttons = {};\n\t                plyr.buttons.seek             = _getElement(config.selectors.buttons.seek);\n\t                plyr.buttons.play             = _getElement(config.selectors.buttons.play);\n\t                plyr.buttons.pause            = _getElement(config.selectors.buttons.pause);\n\t                plyr.buttons.restart          = _getElement(config.selectors.buttons.restart);\n\t                plyr.buttons.rewind           = _getElement(config.selectors.buttons.rewind);\n\t                plyr.buttons.forward          = _getElement(config.selectors.buttons.forward);\n\t                plyr.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\t\n\t                // Inputs\n\t                plyr.buttons.volume           = _getElement(config.selectors.buttons.volume);\n\t                plyr.buttons.mute             = _getElement(config.selectors.buttons.mute);\n\t                plyr.buttons.captions         = _getElement(config.selectors.buttons.captions);\n\t                plyr.checkboxes               = _getElements('[type=\"checkbox\"]');\n\t\n\t                // Progress\n\t                plyr.progress = {};\n\t                plyr.progress.container       = _getElement(config.selectors.progress.container);\n\t\n\t                // Progress - Buffering\n\t                plyr.progress.buffer          = {};\n\t                plyr.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n\t                plyr.progress.buffer.text     = plyr.progress.buffer.bar && plyr.progress.buffer.bar.getElementsByTagName('span')[0];\n\t\n\t                // Progress - Played\n\t                plyr.progress.played          = {};\n\t                plyr.progress.played.bar      = _getElement(config.selectors.progress.played);\n\t                plyr.progress.played.text     = plyr.progress.played.bar && plyr.progress.played.bar.getElementsByTagName('span')[0];\n\t\n\t                // Seek tooltip\n\t                plyr.progress.tooltip           = plyr.progress.container && plyr.progress.container.querySelector('.' + config.classes.tooltip);\n\t\n\t                // Volume\n\t                plyr.volume                   = _getElement(config.selectors.buttons.volume);\n\t\n\t                // Timing\n\t                plyr.duration                 = _getElement(config.selectors.duration);\n\t                plyr.currentTime              = _getElement(config.selectors.currentTime);\n\t                plyr.seekTime                 = _getElements(config.selectors.seekTime);\n\t\n\t                return true;\n\t            }\n\t            catch(e) {\n\t                _log('It looks like there is a problem with your controls html', true);\n\t\n\t                // Restore native video controls\n\t                _toggleControls(true);\n\t\n\t                return false;\n\t            }\n\t        }\n\t\n\t        // Toggle style hook\n\t        function _toggleStyleHook() {\n\t            _toggleClass(plyr.container, config.selectors.container.replace('.', ''), plyr.supported.full);\n\t        }\n\t\n\t        // Toggle native controls\n\t        function _toggleControls(toggle) {\n\t            if(toggle) {\n\t                plyr.media.setAttribute('controls', '');\n\t            }\n\t            else {\n\t                plyr.media.removeAttribute('controls');\n\t            }\n\t        }\n\t\n\t        // Setup aria attribute for play and iframe title\n\t        function _setTitle(iframe) {\n\t            // Find the current text\n\t            var label = config.i18n.play;\n\t\n\t            // If there's a media title set, use that for the label\n\t            if (typeof(config.title) !== 'undefined' && config.title.length) {\n\t                label += ', ' + config.title;\n\t            }\n\t\n\t            // If there's a play button, set label\n\t            if (plyr.supported.full && plyr.buttons.play) {\n\t                plyr.buttons.play.setAttribute('aria-label', label);\n\t            }\n\t\n\t            // Set iframe title\n\t            // https://github.com/Selz/plyr/issues/124\n\t            if (iframe instanceof HTMLElement) {\n\t                iframe.setAttribute('title', config.i18n.frameTitle.replace('{title}', config.title));\n\t            }\n\t        }\n\t\n\t        // Setup media\n\t        function _setupMedia() {\n\t            // If there's no media, bail\n\t            if (!plyr.media) {\n\t                _log('No audio or video element found', true);\n\t                return false;\n\t            }\n\t\n\t            if (plyr.supported.full) {\n\t                // Add type class\n\t                _toggleClass(plyr.container, config.classes.type.replace('{0}', plyr.type), true);\n\t\n\t                // If there's no autoplay attribute, assume the video is stopped and add state class\n\t                _toggleClass(plyr.container, config.classes.stopped, config.autoplay);\n\t\n\t                // Add iOS class\n\t                _toggleClass(plyr.container, config.classes.isIos, plyr.browser.ios);\n\t\n\t                // Add touch class\n\t                _toggleClass(plyr.container, config.classes.isTouch, plyr.browser.touch);\n\t\n\t                // Inject the player wrapper\n\t                if (plyr.type === 'video') {\n\t                    // Create the wrapper div\n\t                    var wrapper = document.createElement('div');\n\t                    wrapper.setAttribute('class', config.classes.videoWrapper);\n\t\n\t                    // Wrap the video in a container\n\t                    _wrap(plyr.media, wrapper);\n\t\n\t                    // Cache the container\n\t                    plyr.videoContainer = wrapper;\n\t                }\n\t            }\n\t\n\t            // Embeds\n\t            if (_inArray(config.types.embed, plyr.type)) {\n\t                _setupEmbed();\n\t\n\t                // Clean up\n\t                plyr.embedId = null;\n\t            }\n\t        }\n\t\n\t        // Setup YouTube/Vimeo\n\t        function _setupEmbed() {\n\t            var container = document.createElement('div'),\n\t                videoId = plyr.embedId,\n\t                id = plyr.type + '-' + Math.floor(Math.random() * (10000));\n\t\n\t            // Remove old containers\n\t            var containers = _getElements('[id^=\"' + plyr.type + '-\"]');\n\t            for (var i = containers.length - 1; i >= 0; i--) {\n\t                _remove(containers[i]);\n\t            }\n\t\n\t            // Add embed class for responsive\n\t            _toggleClass(plyr.media, config.classes.videoWrapper, true);\n\t            _toggleClass(plyr.media, config.classes.embedWrapper, true);\n\t\n\t            // YouTube\n\t            if (plyr.type === 'youtube') {\n\t                // Create the YouTube container\n\t                plyr.media.appendChild(container);\n\t\n\t                // Set ID\n\t                container.setAttribute('id', id);\n\t\n\t                // Setup API\n\t                if (typeof YT === 'object') {\n\t                    _youTubeReady(videoId, container);\n\t                }\n\t                else {\n\t                    // Load the API\n\t                    _injectScript(config.urls.youtube.api);\n\t\n\t                    // Setup callback for the API\n\t                    window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\t\n\t                    // Add to queue\n\t                    window.onYouTubeReadyCallbacks.push(function() { _youTubeReady(videoId, container) });\n\t\n\t                    // Set callback to process queue\n\t                    window.onYouTubeIframeAPIReady = function () {\n\t                        window.onYouTubeReadyCallbacks.forEach(function(callback) { callback(); });\n\t                    };\n\t                }\n\t            }\n\t            // Vimeo\n\t            else if (plyr.type === 'vimeo') {\n\t                // Inject the iframe\n\t                var iframe = document.createElement('iframe');\n\t\n\t                // Watch for iframe load\n\t                iframe.loaded = false;\n\t                _on(iframe, 'load', function() { iframe.loaded = true; });\n\t\n\t                _setAttributes(iframe, {\n\t                    'src':                      'https://player.vimeo.com/video/' + videoId + '?player_id=' + id + '&api=1&badge=0&byline=0&portrait=0&title=0',\n\t                    'id':                       id,\n\t                    'webkitallowfullscreen':    '',\n\t                    'mozallowfullscreen':       '',\n\t                    'allowfullscreen':          '',\n\t                    'frameborder':              0\n\t                });\n\t\n\t                // If full support, we can use custom controls (hiding Vimeos), if not, use Vimeo\n\t                if(plyr.supported.full) {\n\t                    container.appendChild(iframe);\n\t                    plyr.media.appendChild(container);\n\t                }\n\t                else {\n\t                    plyr.media.appendChild(iframe);\n\t                }\n\t\n\t                // Load the API\n\t                if (!('$f' in window)) {\n\t                    _injectScript(config.urls.vimeo.api);\n\t                }\n\t\n\t                // Wait for fragaloop load\n\t                var timer = window.setInterval(function() {\n\t                    if ('$f' in window && iframe.loaded) {\n\t                        window.clearInterval(timer);\n\t                        _vimeoReady.call(iframe);\n\t                    }\n\t                }, 50);\n\t            }\n\t        }\n\t\n\t        // When embeds are ready\n\t        function _embedReady() {\n\t            // Set title\n\t            _setTitle(_getElement('iframe'));\n\t\n\t            // Store reference to API\n\t            plyr.container.plyr.embed = plyr.embed;\n\t\n\t            // Setup the UI\n\t            _setupInterface();\n\t        }\n\t\n\t        // Handle YouTube API ready\n\t        function _youTubeReady(videoId, container) {\n\t            // Setup timers object\n\t            // We have to poll YouTube for updates\n\t            if (!('timer' in plyr)) {\n\t                plyr.timer = {};\n\t            }\n\t\n\t            // Setup instance\n\t            // https://developers.google.com/youtube/iframe_api_reference\n\t            plyr.embed = new YT.Player(container.id, {\n\t                videoId: videoId,\n\t                playerVars: {\n\t                    autoplay: (config.autoplay ? 1 : 0),\n\t                    controls: (plyr.supported.full ? 0 : 1),\n\t                    rel: 0,\n\t                    showinfo: 0,\n\t                    iv_load_policy: 3,\n\t                    cc_load_policy: (config.captions.defaultActive ? 1 : 0),\n\t                    cc_lang_pref: 'en',\n\t                    wmode: 'transparent',\n\t                    modestbranding: 1,\n\t                    disablekb: 1,\n\t                    origin: '*' // https://code.google.com/p/gdata-issues/issues/detail?id=5788#c45\n\t                },\n\t                events: {\n\t                    'onReady': function(event) {\n\t                        // Get the instance\n\t                        var instance = event.target;\n\t\n\t                        // Create a faux HTML5 API using the YouTube API\n\t                        plyr.media.play = function() {\n\t                            instance.playVideo();\n\t                            plyr.media.paused = false;\n\t                        };\n\t                        plyr.media.pause = function() {\n\t                            instance.pauseVideo();\n\t                            plyr.media.paused = true;\n\t                        };\n\t                        plyr.media.stop = function() {\n\t                            instance.stopVideo();\n\t                            plyr.media.paused = true;\n\t                        };\n\t                        plyr.media.duration = instance.getDuration();\n\t                        plyr.media.paused = true;\n\t                        plyr.media.currentTime = instance.getCurrentTime();\n\t                        plyr.media.muted = instance.isMuted();\n\t\n\t                        // Set title\n\t                        config.title = instance.getVideoData().title;\n\t\n\t                        // Trigger timeupdate\n\t                        _triggerEvent(plyr.media, 'timeupdate');\n\t\n\t                        // Reset timer\n\t                        window.clearInterval(plyr.timer.buffering);\n\t\n\t                        // Setup buffering\n\t                        plyr.timer.buffering = window.setInterval(function() {\n\t                            // Get loaded % from YouTube\n\t                            plyr.media.buffered = instance.getVideoLoadedFraction();\n\t\n\t                            // Trigger progress\n\t                            _triggerEvent(plyr.media, 'progress');\n\t\n\t                            // Bail if we're at 100%\n\t                            if (plyr.media.buffered === 1) {\n\t                                window.clearInterval(plyr.timer.buffering);\n\t\n\t                                // Trigger event\n\t                                _triggerEvent(plyr.media, 'canplaythrough');\n\t                            }\n\t                        }, 200);\n\t\n\t                        // Update UI\n\t                        _embedReady();\n\t\n\t                        // Display duration if available\n\t                        _displayDuration();\n\t                    },\n\t                    'onStateChange': function(event) {\n\t                        // Get the instance\n\t                        var instance = event.target;\n\t\n\t                        // Reset timer\n\t                        window.clearInterval(plyr.timer.playing);\n\t\n\t                        // Handle events\n\t                        // -1   Unstarted\n\t                        // 0    Ended\n\t                        // 1    Playing\n\t                        // 2    Paused\n\t                        // 3    Buffering\n\t                        // 5    Video cued\n\t                        switch (event.data) {\n\t                            case 0:\n\t                                plyr.media.paused = true;\n\t                                _triggerEvent(plyr.media, 'ended');\n\t                                break;\n\t\n\t                            case 1:\n\t                                plyr.media.paused = false;\n\t                                plyr.media.seeking = false;\n\t                                _triggerEvent(plyr.media, 'play');\n\t                                _triggerEvent(plyr.media, 'playing');\n\t\n\t                                // Poll to get playback progress\n\t                                plyr.timer.playing = window.setInterval(function() {\n\t                                    // Set the current time\n\t                                    plyr.media.currentTime = instance.getCurrentTime();\n\t\n\t                                    // Trigger timeupdate\n\t                                    _triggerEvent(plyr.media, 'timeupdate');\n\t                                }, 100);\n\t\n\t                                break;\n\t\n\t                            case 2:\n\t                                plyr.media.paused = true;\n\t                                _triggerEvent(plyr.media, 'pause');\n\t                                break;\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        // Vimeo ready\n\t        function _vimeoReady() {\n\t            /* jshint validthis: true */\n\t            plyr.embed = $f(this);\n\t\n\t            // Setup on ready\n\t            plyr.embed.addEvent('ready', function() {\n\t\n\t                // Create a faux HTML5 API using the Vimeo API\n\t                plyr.media.play = function() {\n\t                    plyr.embed.api('play');\n\t                    plyr.media.paused = false;\n\t                };\n\t                plyr.media.pause = function() {\n\t                    plyr.embed.api('pause');\n\t                    plyr.media.paused = true;\n\t                };\n\t                plyr.media.stop = function() {\n\t                    plyr.embed.api('stop');\n\t                    plyr.media.paused = true;\n\t                };\n\t                plyr.media.paused = true;\n\t                plyr.media.currentTime = 0;\n\t\n\t                // Update UI\n\t                _embedReady();\n\t\n\t                plyr.embed.api('getCurrentTime', function (value) {\n\t                    plyr.media.currentTime = value;\n\t\n\t                    // Trigger timeupdate\n\t                    _triggerEvent(plyr.media, 'timeupdate');\n\t                });\n\t\n\t                plyr.embed.api('getDuration', function(value) {\n\t                    plyr.media.duration = value;\n\t\n\t                    // Display duration if available\n\t                    _displayDuration();\n\t                });\n\t\n\t                plyr.embed.addEvent('play', function() {\n\t                    plyr.media.paused = false;\n\t                    _triggerEvent(plyr.media, 'play');\n\t                    _triggerEvent(plyr.media, 'playing');\n\t                });\n\t\n\t                plyr.embed.addEvent('pause', function() {\n\t                    plyr.media.paused = true;\n\t                    _triggerEvent(plyr.media, 'pause');\n\t                });\n\t\n\t                plyr.embed.addEvent('playProgress', function(data) {\n\t                    plyr.media.seeking = false;\n\t                    plyr.media.currentTime = data.seconds;\n\t                    _triggerEvent(plyr.media, 'timeupdate');\n\t                });\n\t\n\t                plyr.embed.addEvent('loadProgress', function(data) {\n\t                    plyr.media.buffered = data.percent;\n\t                    _triggerEvent(plyr.media, 'progress');\n\t\n\t                    if(parseInt(data.percent) === 1) {\n\t                        // Trigger event\n\t                        _triggerEvent(plyr.media, 'canplaythrough');\n\t                    }\n\t                });\n\t\n\t                plyr.embed.addEvent('finish', function() {\n\t                    plyr.media.paused = true;\n\t                    _triggerEvent(plyr.media, 'ended');\n\t                });\n\t\n\t                // Always seek to 0\n\t                // plyr.embed.api('seekTo', 0);\n\t\n\t                // Autoplay\n\t                if (config.autoplay) {\n\t                    plyr.embed.api('play');\n\t                }\n\t            });\n\t        }\n\t\n\t        // Play media\n\t        function _play() {\n\t            if('play' in plyr.media) {\n\t                plyr.media.play();\n\t            }\n\t        }\n\t\n\t        // Pause media\n\t        function _pause() {\n\t            if('pause' in plyr.media) {\n\t                plyr.media.pause();\n\t            }\n\t        }\n\t\n\t        // Toggle playback\n\t        function _togglePlay(toggle) {\n\t            // Play\n\t            if (toggle === true) {\n\t                _play();\n\t            }\n\t            // Pause\n\t            else if (toggle === false) {\n\t                _pause();\n\t            }\n\t            // True toggle\n\t            else {\n\t                plyr.media[plyr.media.paused ? 'play' : 'pause']();\n\t            }\n\t        }\n\t\n\t        // Rewind\n\t        function _rewind(seekTime) {\n\t            // Use default if needed\n\t            if (typeof seekTime !== 'number') {\n\t                seekTime = config.seekTime;\n\t            }\n\t            _seek(plyr.media.currentTime - seekTime);\n\t        }\n\t\n\t        // Fast forward\n\t        function _forward(seekTime) {\n\t            // Use default if needed\n\t            if (typeof seekTime !== 'number') {\n\t                seekTime = config.seekTime;\n\t            }\n\t            _seek(plyr.media.currentTime + seekTime);\n\t        }\n\t\n\t        // Seek to time\n\t        // The input parameter can be an event or a number\n\t        function _seek(input) {\n\t            var targetTime = 0,\n\t                paused = plyr.media.paused,\n\t                duration = _getDuration();\n\t\n\t            // Explicit position\n\t            if (typeof input === 'number') {\n\t                targetTime = input;\n\t            }\n\t            // Event\n\t            else if (typeof input === 'object' && (input.type === 'input' || input.type === 'change')) {\n\t                // It's the seek slider\n\t                // Seek to the selected time\n\t                targetTime = ((input.target.value / input.target.max) * duration);\n\t            }\n\t\n\t            // Normalise targetTime\n\t            if (targetTime < 0) {\n\t                targetTime = 0;\n\t            }\n\t            else if (targetTime > duration) {\n\t                targetTime = duration;\n\t            }\n\t\n\t            // Set the current time\n\t            // Try/catch incase the media isn't set and we're calling seek() from source() and IE moans\n\t            try {\n\t                plyr.media.currentTime = targetTime.toFixed(1);\n\t            }\n\t            catch(e) {}\n\t\n\t            // Embeds\n\t            if(_inArray(config.types.embed, plyr.type)) {\n\t                // YouTube\n\t                switch(plyr.type) {\n\t                    case 'youtube':\n\t                        plyr.embed.seekTo(targetTime);\n\t                        break;\n\t\n\t                    case 'vimeo':\n\t                        // Round to nearest second for vimeo\n\t                        plyr.embed.api('seekTo', targetTime.toFixed(0));\n\t                        break;\n\t                }\n\t\n\t                if (paused) {\n\t                    _pause();\n\t                }\n\t\n\t                // Trigger timeupdate for embeds\n\t                _triggerEvent(plyr.media, 'timeupdate');\n\t\n\t                // Set seeking flag\n\t                plyr.media.seeking = true;\n\t            }\n\t\n\t            // Logging\n\t            _log('Seeking to ' + plyr.media.currentTime + ' seconds');\n\t\n\t            // Special handling for 'manual' captions\n\t            _seekManualCaptions(targetTime);\n\t        }\n\t\n\t        // Get the duration (or custom if set)\n\t        function _getDuration() {\n\t            // It should be a number, but parse it just incase\n\t            var duration = parseInt(config.duration);\n\t\n\t            // If custom duration is funky, use regular duration\n\t            return (isNaN(duration) ? plyr.media.duration : duration);\n\t        }\n\t\n\t        // Check playing state\n\t        function _checkPlaying() {\n\t            _toggleClass(plyr.container, config.classes.playing, !plyr.media.paused);\n\t            _toggleClass(plyr.container, config.classes.stopped, plyr.media.paused);\n\t        }\n\t\n\t        // Toggle fullscreen\n\t        function _toggleFullscreen(event) {\n\t            // Check for native support\n\t            var nativeSupport = fullscreen.supportsFullScreen;\n\t\n\t            // If it's a fullscreen change event, it's probably a native close\n\t            if (event && event.type === fullscreen.fullScreenEventName) {\n\t                plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n\t            }\n\t            // If there's native support, use it\n\t            else if (nativeSupport) {\n\t                // Request fullscreen\n\t                if (!fullscreen.isFullScreen(plyr.container)) {\n\t                    fullscreen.requestFullScreen(plyr.container);\n\t                }\n\t                // Bail from fullscreen\n\t                else {\n\t                    fullscreen.cancelFullScreen();\n\t                }\n\t\n\t                // Check if we're actually full screen (it could fail)\n\t                plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n\t            }\n\t            else {\n\t                // Otherwise, it's a simple toggle\n\t                plyr.isFullscreen = !plyr.isFullscreen;\n\t\n\t                // Bind/unbind escape key\n\t                if (plyr.isFullscreen) {\n\t                    _on(document, 'keyup', _handleEscapeFullscreen);\n\t                    document.body.style.overflow = 'hidden';\n\t                }\n\t                else {\n\t                    _off(document, 'keyup', _handleEscapeFullscreen);\n\t                    document.body.style.overflow = '';\n\t                }\n\t            }\n\t\n\t            // Set class hook\n\t            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\t\n\t            // Trap focus\n\t            if(plyr.isFullscreen) {\n\t                plyr.container.setAttribute('tabindex', '-1');\n\t            }\n\t            else {\n\t                plyr.container.removeAttribute('tabindex');\n\t            }\n\t\n\t            // Trap focus\n\t            _focusTrap(plyr.isFullscreen);\n\t\n\t            // Set button state\n\t            _toggleState(plyr.buttons.fullscreen, plyr.isFullscreen);\n\t\n\t            // Hide on entering full screen\n\t            if (config.fullscreen.hideControls) {\n\t                //_toggleClass(plyr.controls, config.classes.hover, false);\n\t                _showControls(true);\n\t            }\n\t\n\t            // Trigger an event\n\t            _triggerEvent(plyr.container, plyr.isFullscreen ? 'enterfullscreen' : 'exitfullscreen');\n\t        }\n\t\n\t        // Bail from faux-fullscreen\n\t        function _handleEscapeFullscreen(event) {\n\t            // If it's a keypress and not escape, bail\n\t            if ((event.which || event.charCode || event.keyCode) === 27 && plyr.isFullscreen) {\n\t                _toggleFullscreen();\n\t            }\n\t        }\n\t\n\t        // Mute\n\t        function _toggleMute(muted) {\n\t            // If the method is called without parameter, toggle based on current value\n\t            if (typeof muted !== 'boolean') {\n\t                muted = !plyr.media.muted;\n\t            }\n\t\n\t            // Set button state\n\t            _toggleState(plyr.buttons.mute, muted);\n\t\n\t            // Set mute on the player\n\t            plyr.media.muted = muted;\n\t\n\t            // Embeds\n\t            if(_inArray(config.types.embed, plyr.type)) {\n\t                // YouTube\n\t                switch(plyr.type) {\n\t                    case 'youtube':\n\t                        plyr.embed[plyr.media.muted ? 'mute' : 'unMute']();\n\t                        break;\n\t\n\t                    case 'vimeo':\n\t                        plyr.embed.api('setVolume', plyr.media.muted ? 0 : parseFloat(config.volume / 10));\n\t                        break;\n\t                }\n\t\n\t                // Trigger volumechange for embeds\n\t                _triggerEvent(plyr.media, 'volumechange');\n\t            }\n\t        }\n\t\n\t        // Set volume\n\t        function _setVolume(volume) {\n\t            // Use default if no value specified\n\t            if (typeof volume === 'undefined') {\n\t                volume = config.volume;\n\t\n\t                if (config.storage.enabled && _storage().supported) {\n\t                    volume = window.localStorage.getItem(config.storage.key);\n\t\n\t                    // Clean up old volume\n\t                    // https://github.com/Selz/plyr/issues/171\n\t                    window.localStorage.removeItem('plyr-volume');\n\t                }\n\t            }\n\t\n\t            // Use config if all else fails\n\t            if(volume === null || isNaN(volume)) {\n\t                volume = config.volume;\n\t            }\n\t\n\t            // Maximum is 10\n\t            if (volume > 10) {\n\t                volume = 10;\n\t            }\n\t            // Minimum is 0\n\t            if (volume < 0) {\n\t                volume = 0;\n\t            }\n\t\n\t            // Set the player volume\n\t            plyr.media.volume = parseFloat(volume / 10);\n\t\n\t            // Store in config\n\t            config.volume = volume;\n\t\n\t            // Embeds\n\t            if(_inArray(config.types.embed, plyr.type)) {\n\t                // YouTube\n\t                switch(plyr.type) {\n\t                    case 'youtube':\n\t                        plyr.embed.setVolume(plyr.media.volume * 100);\n\t                        break;\n\t\n\t                    case 'vimeo':\n\t                        plyr.embed.api('setVolume', plyr.media.volume);\n\t                        break;\n\t                }\n\t\n\t                // Trigger volumechange for embeds\n\t                _triggerEvent(plyr.media, 'volumechange');\n\t            }\n\t\n\t            // Toggle muted state\n\t            if (plyr.media.muted && volume > 0) {\n\t                _toggleMute();\n\t            }\n\t        }\n\t\n\t        // Update volume UI and storage\n\t        function _updateVolume() {\n\t            // Get the current volume\n\t            var volume = plyr.media.muted ? 0 : (plyr.media.volume * 10);\n\t\n\t            // Update the <input type=\"range\"> if present\n\t            if (plyr.supported.full && plyr.volume) {\n\t                plyr.volume.value = volume;\n\t            }\n\t\n\t            // Store the volume in storage\n\t            if (config.storage.enabled && _storage().supported && !isNaN(volume)) {\n\t                window.localStorage.setItem(config.storage.key, volume);\n\t            }\n\t\n\t            // Toggle class if muted\n\t            _toggleClass(plyr.container, config.classes.muted, (volume === 0));\n\t\n\t            // Update checkbox for mute state\n\t            if (plyr.supported.full && plyr.buttons.mute) {\n\t                _toggleState(plyr.buttons.mute, (volume === 0));\n\t            }\n\t        }\n\t\n\t        // Toggle captions\n\t        function _toggleCaptions(show) {\n\t            // If there's no full support, or there's no caption toggle\n\t            if (!plyr.supported.full || !plyr.buttons.captions) {\n\t                return;\n\t            }\n\t\n\t            // If the method is called without parameter, toggle based on current value\n\t            if (typeof show !== 'boolean') {\n\t                show = (plyr.container.className.indexOf(config.classes.captions.active) === -1);\n\t            }\n\t\n\t            // Set global\n\t            plyr.captionsEnabled = show;\n\t\n\t            // Toggle state\n\t            _toggleState(plyr.buttons.captions, plyr.captionsEnabled);\n\t\n\t            // Add class hook\n\t            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\t\n\t            // Trigger an event\n\t            _triggerEvent(plyr.container, plyr.captionsEnabled ? 'captionsenabled' : 'captionsdisabled');\n\t        }\n\t\n\t        // Check if media is loading\n\t        function _checkLoading(event) {\n\t            var loading = (event.type === 'waiting');\n\t\n\t            // Clear timer\n\t            clearTimeout(plyr.timers.loading);\n\t\n\t            // Timer to prevent flicker when seeking\n\t            plyr.timers.loading = setTimeout(function() {\n\t                _toggleClass(plyr.container, config.classes.loading, loading);\n\t            }, (loading ? 250 : 0));\n\t        }\n\t\n\t        // Update <progress> elements\n\t        function _updateProgress(event) {\n\t            var progress    = plyr.progress.played.bar,\n\t                text        = plyr.progress.played.text,\n\t                value       = 0,\n\t                duration    = _getDuration();\n\t\n\t            if (event) {\n\t                switch (event.type) {\n\t                    // Video playing\n\t                    case 'timeupdate':\n\t                    case 'seeking':\n\t                        value = _getPercentage(plyr.media.currentTime, duration);\n\t\n\t                        // Set seek range value only if it's a 'natural' time event\n\t                        if (event.type == 'timeupdate' && plyr.buttons.seek) {\n\t                            plyr.buttons.seek.value = value;\n\t                        }\n\t\n\t                        break;\n\t\n\t                    // Events from seek range\n\t                    case 'change':\n\t                    case 'input':\n\t                        value = event.target.value;\n\t                        break;\n\t\n\t\n\t                    // Check buffer status\n\t                    case 'playing':\n\t                    case 'progress':\n\t                        progress    = plyr.progress.buffer.bar;\n\t                        text        = plyr.progress.buffer.text;\n\t                        value       = (function() {\n\t                                        var buffered = plyr.media.buffered;\n\t\n\t                                        // HTML5\n\t                                        if (buffered && buffered.length) {\n\t                                            return _getPercentage(buffered.end(0), duration);\n\t                                        }\n\t                                        // YouTube returns between 0 and 1\n\t                                        else if (typeof buffered === 'number') {\n\t                                            return (buffered * 100);\n\t                                        }\n\t\n\t                                        return 0;\n\t                                    })();\n\t                }\n\t            }\n\t\n\t            // Set values\n\t            if (progress) {\n\t                progress.value = value;\n\t            }\n\t            if (text) {\n\t                text.innerHTML = value;\n\t            }\n\t        }\n\t\n\t        // Update the displayed time\n\t        function _updateTimeDisplay(time, element) {\n\t            // Bail if there's no duration display\n\t            if (!element) {\n\t                return;\n\t            }\n\t\n\t            // Fallback to 0\n\t            if (isNaN(time)) {\n\t                time = 0;\n\t            }\n\t\n\t            plyr.secs = parseInt(time % 60);\n\t            plyr.mins = parseInt((time / 60) % 60);\n\t            plyr.hours = parseInt(((time / 60) / 60) % 60);\n\t\n\t            // Do we need to display hours?\n\t            var displayHours = (parseInt(((_getDuration() / 60) / 60) % 60) > 0);\n\t\n\t            // Ensure it's two digits. For example, 03 rather than 3.\n\t            plyr.secs = ('0' + plyr.secs).slice(-2);\n\t            plyr.mins = ('0' + plyr.mins).slice(-2);\n\t\n\t            // Render\n\t            element.innerHTML = (displayHours ? plyr.hours + ':' : '') + plyr.mins + ':' + plyr.secs;\n\t        }\n\t\n\t        // Show the duration on metadataloaded\n\t        function _displayDuration() {\n\t            if (!plyr.supported.full) {\n\t                return;\n\t            }\n\t\n\t            // Determine duration\n\t            var duration = _getDuration() || 0;\n\t\n\t            // If there's only one time display, display duration there\n\t            if (!plyr.duration && config.displayDuration && plyr.media.paused) {\n\t                _updateTimeDisplay(duration, plyr.currentTime);\n\t            }\n\t\n\t            // If there's a duration element, update content\n\t            if (plyr.duration) {\n\t                _updateTimeDisplay(duration, plyr.duration);\n\t            }\n\t\n\t            // Update the tooltip (if visible)\n\t            _updateSeekTooltip();\n\t        }\n\t\n\t        // Handle time change event\n\t        function _timeUpdate(event) {\n\t            // Duration\n\t            _updateTimeDisplay(plyr.media.currentTime, plyr.currentTime);\n\t\n\t            // Ignore updates while seeking\n\t            if(event && event.type == 'timeupdate' && plyr.media.seeking) {\n\t                return;\n\t            }\n\t\n\t            // Playing progress\n\t            _updateProgress(event);\n\t        }\n\t\n\t        // Update hover tooltip for seeking\n\t        function _updateSeekTooltip(event) {\n\t            // Bail if setting not true\n\t            if (!config.tooltips.seek || plyr.browser.touch) {\n\t                return;\n\t            }\n\t\n\t            // Calculate percentage\n\t            var clientRect  = plyr.progress.container.getBoundingClientRect(),\n\t                percent     = 0,\n\t                visible     = config.classes.tooltip + '--visible';\n\t\n\t            // Determine percentage, if already visible\n\t            if (!event) {\n\t                if(_hasClass(plyr.progress.tooltip, visible)) {\n\t                    percent = plyr.progress.tooltip.style.left.replace('%', '');\n\t                }\n\t                else {\n\t                    return;\n\t                }\n\t            }\n\t            else {\n\t                percent = ((100 / clientRect.width) * (event.pageX - clientRect.left));\n\t            }\n\t\n\t            // Set bounds\n\t            if (percent < 0) {\n\t                percent = 0;\n\t            }\n\t            else if (percent > 100) {\n\t                percent = 100;\n\t            }\n\t\n\t            // Display the time a click would seek to\n\t            _updateTimeDisplay(((_getDuration() / 100) * percent), plyr.progress.tooltip);\n\t\n\t            // Set position\n\t            plyr.progress.tooltip.style.left = percent + \"%\";\n\t\n\t            // Show/hide the tooltip\n\t            // If the event is a moues in/out and percentage is inside bounds\n\t            if(event && _inArray(['mouseenter', 'mouseleave'], event.type)) {\n\t                _toggleClass(plyr.progress.tooltip, visible, (event.type === 'mouseenter'));\n\t            }\n\t        }\n\t\n\t        // Show the player controls in fullscreen mode\n\t        function _showControls(force) {\n\t            // We're only worried about fullscreen\n\t            if (!plyr.isFullscreen) {\n\t                return;\n\t            }\n\t\n\t            // Set shown class\n\t            _toggleClass(plyr.container, config.classes.hover, true);\n\t\n\t            // Clear timer every movement\n\t            window.clearTimeout(plyr.timers.hover);\n\t\n\t            // If the mouse is not over the controls, set a timeout to hide them\n\t            plyr.timers.hover = window.setTimeout(function() {\n\t                if (!plyr.controls.mouseover || (force === true)) {\n\t                    _toggleClass(plyr.container, config.classes.hover, false);\n\t                }\n\t            }, 2000);\n\t        }\n\t\n\t        // Add common function to retrieve media source\n\t        function _source(source) {\n\t            // If not null or undefined, parse it\n\t            if(typeof source !== 'undefined') {\n\t                _updateSource(source);\n\t                return;\n\t            }\n\t\n\t            // Return the current source\n\t            var url;\n\t            switch(plyr.type) {\n\t                case 'youtube':\n\t                    url = plyr.embed.getVideoUrl();\n\t                    break;\n\t\n\t                case 'vimeo':\n\t                    plyr.embed.api('getVideoUrl', function (value) {\n\t                        url = value;\n\t                    });\n\t                    break;\n\t\n\t                default:\n\t                    url = plyr.media.currentSrc;\n\t                    break;\n\t            }\n\t\n\t            return url || '';\n\t        }\n\t\n\t        // Update source\n\t        // Sources are not checked for support so be careful\n\t        function _updateSource(source) {\n\t            if (typeof source === 'undefined' || !('sources' in source) || !source.sources.length) {\n\t                _log('Invalid source format', true);\n\t                return;\n\t            }\n\t\n\t            // Pause playback\n\t            _pause();\n\t\n\t            // Clean up YouTube stuff\n\t            if (plyr.type === 'youtube') {\n\t                // Destroy the embed instance\n\t                plyr.embed.destroy();\n\t\n\t                // Clear timer\n\t                window.clearInterval(plyr.timer.buffering);\n\t                window.clearInterval(plyr.timer.playing);\n\t            }\n\t            else if (plyr.type === 'video' && plyr.videoContainer) {\n\t                // Remove video wrapper\n\t                _remove(plyr.videoContainer);\n\t            }\n\t\n\t            // Remove embed object\n\t            plyr.embed = null;\n\t\n\t            // Cancel current network requests\n\t            _cancelRequests();\n\t\n\t            // Remove the old media\n\t            _remove(plyr.media);\n\t\n\t            // Set the type\n\t            if ('type' in source) {\n\t                plyr.type = source.type;\n\t\n\t                // Get child type for video (it might be an embed)\n\t                if(plyr.type === 'video') {\n\t                    var firstSource = source.sources[0];\n\t\n\t                    if('type' in firstSource && _inArray(config.types.embed, firstSource.type)) {\n\t                        plyr.type = firstSource.type;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Check for support\n\t            plyr.supported = api.supported(plyr.type);\n\t\n\t            // Create new markup\n\t            switch(plyr.type) {\n\t                case 'video':\n\t                    plyr.media = document.createElement('video');\n\t                    break;\n\t\n\t                case 'audio':\n\t                    plyr.media = document.createElement('audio');\n\t                    break;\n\t\n\t                case 'youtube':\n\t                case 'vimeo':\n\t                    plyr.media = document.createElement('div');\n\t                    plyr.embedId = source.sources[0].src;\n\t                    break;\n\t            }\n\t\n\t            // Inject the new element\n\t            _prependChild(plyr.container, plyr.media);\n\t\n\t            // Autoplay the new source?\n\t            if (typeof source.autoplay !== 'undefined') {\n\t                config.autoplay = source.autoplay;\n\t            }\n\t\n\t            // Set attributes for audio video\n\t            if (_inArray(config.types.html5, plyr.type)) {\n\t                if (config.crossorigin) {\n\t                    plyr.media.setAttribute('crossorigin', '');\n\t                }\n\t                if (config.autoplay) {\n\t                    plyr.media.setAttribute('autoplay', '');\n\t                }\n\t                if ('poster' in source) {\n\t                    plyr.media.setAttribute('poster', source.poster);\n\t                }\n\t                if (config.loop) {\n\t                    plyr.media.setAttribute('loop', '');\n\t                }\n\t            }\n\t\n\t            // Classname reset\n\t            plyr.container.className = plyr.originalClassName;\n\t\n\t            // Restore class hooks\n\t            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\t            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\t            _toggleStyleHook();\n\t\n\t            // Set new sources for html5\n\t            if (_inArray(config.types.html5, plyr.type)) {\n\t                _insertChildElements('source', source.sources);\n\t            }\n\t\n\t            // Set up from scratch\n\t            _setupMedia();\n\t\n\t            // HTML5 stuff\n\t            if (_inArray(config.types.html5, plyr.type)) {\n\t                // Setup captions\n\t                if ('tracks' in source) {\n\t                    _insertChildElements('track', source.tracks);\n\t                }\n\t\n\t                // Load HTML5 sources\n\t                plyr.media.load();\n\t\n\t                // Setup interface\n\t                _setupInterface();\n\t\n\t                // Display duration if available\n\t                _displayDuration();\n\t            }\n\t\n\t            // Set aria title and iframe title\n\t            config.title = source.title;\n\t            _setTitle();\n\t\n\t            // Reset media objects\n\t            plyr.container.plyr.media = plyr.media;\n\t        }\n\t\n\t        // Update poster\n\t        function _updatePoster(source) {\n\t            if (plyr.type === 'video') {\n\t                plyr.media.setAttribute('poster', source);\n\t            }\n\t        }\n\t\n\t        // Listen for control events\n\t        function _controlListeners() {\n\t            // IE doesn't support input event, so we fallback to change\n\t            var inputEvent = (plyr.browser.name == 'IE' ? 'change' : 'input');\n\t\n\t            // Click play/pause helper\n\t            function _togglePlay() {\n\t                var play = plyr.media.paused;\n\t\n\t                // Toggle playback\n\t                if (play) {\n\t                    _play();\n\t                }\n\t                else {\n\t                    _pause();\n\t                }\n\t\n\t                // Determine which buttons\n\t                var trigger = plyr.buttons[play ? 'play' : 'pause'],\n\t                    target = plyr.buttons[play ? 'pause' : 'play'];\n\t\n\t                // Setup focus and tab focus\n\t                if(target) {\n\t                    var hadTabFocus = _hasClass(trigger, config.classes.tabFocus);\n\t\n\t                    setTimeout(function() {\n\t                        target.focus();\n\t\n\t                        if(hadTabFocus) {\n\t                            _toggleClass(trigger, config.classes.tabFocus, false);\n\t                            _toggleClass(target, config.classes.tabFocus, true);\n\t                        }\n\t                    }, 100);\n\t                }\n\t            }\n\t\n\t            // Detect tab focus\n\t            function checkFocus() {\n\t                var focused = document.activeElement;\n\t                if (!focused || focused == document.body) {\n\t                    focused = null;\n\t                }\n\t                else if (document.querySelector) {\n\t                    focused = document.querySelector(':focus');\n\t                }\n\t                for (var button in plyr.buttons) {\n\t                    var element = plyr.buttons[button];\n\t\n\t                    _toggleClass(element, config.classes.tabFocus, (element === focused));\n\t                }\n\t            }\n\t            _on(window, 'keyup', function(event) {\n\t                var code = (event.keyCode ? event.keyCode : event.which);\n\t\n\t                if (code == 9) {\n\t                    checkFocus();\n\t                }\n\t            });\n\t            _on(document.body, 'click', function() {\n\t                _toggleClass(_getElement('.' + config.classes.tabFocus), config.classes.tabFocus, false);\n\t            });\n\t            for (var button in plyr.buttons) {\n\t                var element = plyr.buttons[button];\n\t\n\t                _on(element, 'blur', function() {\n\t                    _toggleClass(element, 'tab-focus', false);\n\t                });\n\t            }\n\t\n\t            // Play\n\t            _proxyListener(plyr.buttons.play, 'click', config.listeners.play, _togglePlay);\n\t\n\t            // Pause\n\t            _proxyListener(plyr.buttons.pause, 'click', config.listeners.pause, _togglePlay);\n\t\n\t            // Restart\n\t            _proxyListener(plyr.buttons.restart, 'click', config.listeners.restart, _seek);\n\t\n\t            // Rewind\n\t            _proxyListener(plyr.buttons.rewind, 'click', config.listeners.rewind, _rewind);\n\t\n\t            // Fast forward\n\t            _proxyListener(plyr.buttons.forward, 'click', config.listeners.forward, _forward);\n\t\n\t            // Seek\n\t            _proxyListener(plyr.buttons.seek, inputEvent, config.listeners.seek, _seek);\n\t\n\t            // Set volume\n\t            _proxyListener(plyr.volume, inputEvent, config.listeners.volume, function() {\n\t                _setVolume(plyr.volume.value);\n\t            });\n\t\n\t            // Mute\n\t            _proxyListener(plyr.buttons.mute, 'click', config.listeners.mute, _toggleMute);\n\t\n\t            // Fullscreen\n\t            _proxyListener(plyr.buttons.fullscreen, 'click', config.listeners.fullscreen, _toggleFullscreen);\n\t\n\t            // Handle user exiting fullscreen by escaping etc\n\t            if (fullscreen.supportsFullScreen) {\n\t                _on(document, fullscreen.fullScreenEventName, _toggleFullscreen);\n\t            }\n\t\n\t            // Captions\n\t            _on(plyr.buttons.captions, 'click', _toggleCaptions);\n\t\n\t            // Seek tooltip\n\t            _on(plyr.progress.container, 'mouseenter mouseleave mousemove', _updateSeekTooltip);\n\t\n\t            // Toggle controls visibility based on mouse movement and location\n\t            var hoverTimer, isMouseOver = false;\n\t\n\t            if (config.fullscreen.hideControls) {\n\t                // Keep an eye on the mouse location in relation to controls\n\t                _on(plyr.controls, 'mouseenter mouseleave', function(event) {\n\t                    plyr.controls.mouseover = (event.type === 'mouseenter');\n\t                });\n\t            }\n\t        }\n\t\n\t        // Listen for media events\n\t        function _mediaListeners() {\n\t            // Time change on media\n\t            _on(plyr.media, 'timeupdate seeking', _timeUpdate);\n\t\n\t            // Update manual captions\n\t            _on(plyr.media, 'timeupdate', _seekManualCaptions);\n\t\n\t            // Display duration\n\t            _on(plyr.media, 'durationchange loadedmetadata', _displayDuration);\n\t\n\t            // Handle the media finishing\n\t            _on(plyr.media, 'ended', function() {\n\t                // Clear\n\t                if (plyr.type === 'video') {\n\t                    _setCaption();\n\t                }\n\t\n\t                // Reset UI\n\t                _checkPlaying();\n\t            });\n\t\n\t            // Check for buffer progress\n\t            _on(plyr.media, 'progress playing', _updateProgress);\n\t\n\t            // Handle native mute\n\t            _on(plyr.media, 'volumechange', _updateVolume);\n\t\n\t            // Handle native play/pause\n\t            _on(plyr.media, 'play pause', _checkPlaying);\n\t\n\t            // Loading\n\t            _on(plyr.media, 'waiting canplay seeked', _checkLoading);\n\t\n\t            // Click video\n\t            if (config.click) {\n\t                _on(plyr.media, 'click', function() {\n\t                    if (plyr.media.paused) {\n\t                        _play();\n\t                    }\n\t                    else if (plyr.media.ended) {\n\t                        _seek();\n\t                        _play();\n\t                    }\n\t                    else {\n\t                        _pause();\n\t                    }\n\t                });\n\t            }\n\t\n\t            // Listen for mouse move to show controls\n\t            if (config.fullscreen.hideControls) {\n\t                // Show the controls on mouse move\n\t                _on(plyr.media, 'mousemove', _showControls);\n\t            }\n\t\n\t            // Proxy events to container\n\t            _on(plyr.media, config.events.join(' '), function(event) {\n\t                _triggerEvent(plyr.container, event.type);\n\t            });\n\t        }\n\t\n\t        // Cancel current network requests\n\t        // See https://github.com/Selz/plyr/issues/174\n\t        function _cancelRequests() {\n\t            if(!_inArray(config.types.html5, plyr.type)) {\n\t                return;\n\t            }\n\t\n\t            // Set empty src attribute\n\t            plyr.media.setAttribute('src', '');\n\t\n\t            // Remove child sources\n\t            var sources = plyr.media.querySelectorAll('source');\n\t            for (var i = 0; i < sources.length; i++) {\n\t                _remove(sources[i]);\n\t            }\n\t\n\t            // Load the new empty source\n\t            // This will cancel existing requests\n\t            // See https://github.com/Selz/plyr/issues/174\n\t            plyr.media.load();\n\t\n\t            // Debugging\n\t            _log(\"Cancelled network requests for old media\");\n\t        }\n\t\n\t        // Destroy an instance\n\t        // Event listeners are removed when elements are removed\n\t        // http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n\t        function _destroy() {\n\t            // Bail if the element is not initialized\n\t            if (!plyr.init) {\n\t                return null;\n\t            }\n\t\n\t            // Reset container classname\n\t            plyr.container.setAttribute('class', _getClassname(config.selectors.container));\n\t\n\t            // Remove init flag\n\t            plyr.init = false;\n\t\n\t            // Remove controls\n\t            _remove(_getElement(config.selectors.controls.wrapper));\n\t\n\t            // YouTube\n\t            if (plyr.type === 'youtube') {\n\t                plyr.embed.destroy();\n\t                return;\n\t            }\n\t\n\t            // If video, we need to remove some more\n\t            if (plyr.type === 'video') {\n\t                // Remove captions container\n\t                _remove(_getElement(config.selectors.captions));\n\t\n\t                // Remove video wrapper\n\t                _unwrap(plyr.videoContainer);\n\t            }\n\t\n\t            // Restore native video controls\n\t            _toggleControls(true);\n\t\n\t            // Clone the media element to remove listeners\n\t            // http://stackoverflow.com/questions/19469881/javascript-remove-all-event-listeners-of-specific-type\n\t            var clone = plyr.media.cloneNode(true);\n\t            plyr.media.parentNode.replaceChild(clone, plyr.media);\n\t        }\n\t\n\t        // Setup a player\n\t        function _init() {\n\t            // Bail if the element is initialized\n\t            if (plyr.init) {\n\t                return null;\n\t            }\n\t\n\t            // Setup the fullscreen api\n\t            fullscreen = _fullscreen();\n\t\n\t            // Sniff out the browser\n\t            plyr.browser = _browserSniff();\n\t\n\t            // Get the media element\n\t            plyr.media = plyr.container.querySelectorAll('audio, video, div')[0];\n\t\n\t            // Get original classname\n\t            plyr.originalClassName = plyr.container.className;\n\t\n\t            // Set media type based on tag or data attribute\n\t            // Supported: video, audio, vimeo, youtube\n\t            var tagName = plyr.media.tagName.toLowerCase();\n\t            if (tagName === 'div') {\n\t                plyr.type     = plyr.media.getAttribute('data-type');\n\t                plyr.embedId  = plyr.media.getAttribute('data-video-id');\n\t\n\t                // Clean up\n\t                plyr.media.removeAttribute('data-type');\n\t                plyr.media.removeAttribute('data-video-id');\n\t            }\n\t            else {\n\t                plyr.type           = tagName;\n\t                config.crossorigin  = (plyr.media.getAttribute('crossorigin') !== null);\n\t                config.autoplay     = (config.autoplay || (plyr.media.getAttribute('autoplay') !== null));\n\t                config.loop         = (config.loop || (plyr.media.getAttribute('loop') !== null));\n\t            }\n\t\n\t            // Check for support\n\t            plyr.supported = api.supported(plyr.type);\n\t\n\t            // Add style hook\n\t            _toggleStyleHook();\n\t\n\t            // If no native support, bail\n\t            if (!plyr.supported.basic) {\n\t                return false;\n\t            }\n\t\n\t            // Debug info\n\t            _log(plyr.browser.name + ' ' + plyr.browser.version);\n\t\n\t            // Setup media\n\t            _setupMedia();\n\t\n\t            // Setup interface\n\t            if (_inArray(config.types.html5, plyr.type)) {\n\t                // Bail if no support\n\t                if (!plyr.supported.full) {\n\t                    // Successful setup\n\t                    plyr.init = true;\n\t\n\t                    // Don't inject controls if no full support\n\t                    return;\n\t                }\n\t\n\t                // Setup UI\n\t                _setupInterface();\n\t\n\t                // Set title on button and frame\n\t                _setTitle();\n\t\n\t                // Autoplay\n\t                if (config.autoplay) {\n\t                    _play();\n\t                }\n\t            }\n\t\n\t            // Successful setup\n\t            plyr.init = true;\n\t        }\n\t\n\t        function _setupInterface() {\n\t            // Don't setup interface if no support\n\t            if (!plyr.supported.full) {\n\t                _log('No full support for this media type (' + plyr.type + ')', true);\n\t\n\t                // Remove controls\n\t                _remove(_getElement(config.selectors.controls.wrapper));\n\t\n\t                // Restore native controls\n\t                _toggleControls(true);\n\t\n\t                // Bail\n\t                return;\n\t            }\n\t\n\t            // Inject custom controls if not present\n\t            var controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n\t            if (controlsMissing) {\n\t                // Inject custom controls\n\t                _injectControls();\n\t            }\n\t\n\t            // Find the elements\n\t            if (!_findElements()) {\n\t                return;\n\t            }\n\t\n\t            // If the controls are injected, re-bind listeners for controls\n\t            if (controlsMissing) {\n\t                _controlListeners();\n\t            }\n\t\n\t            // Media element listeners\n\t            _mediaListeners();\n\t\n\t            // Remove native controls\n\t            _toggleControls();\n\t\n\t            // Setup fullscreen\n\t            _setupFullscreen();\n\t\n\t            // Captions\n\t            _setupCaptions();\n\t\n\t            // Set volume\n\t            _setVolume();\n\t            _updateVolume();\n\t\n\t            // Reset time display\n\t            _timeUpdate();\n\t\n\t            // Update the UI\n\t            _checkPlaying();\n\t\n\t            // Display duration\n\t            _displayDuration();\n\t\n\t            // Ready event\n\t            _triggerEvent(plyr.container, 'ready');\n\t        }\n\t\n\t        // Initialize instance\n\t        _init();\n\t\n\t        // If init failed, return an empty object\n\t        if (!plyr.init) {\n\t            return {};\n\t        }\n\t\n\t        return {\n\t            media:              plyr.media,\n\t            play:               _play,\n\t            pause:              _pause,\n\t            restart:            _seek,\n\t            rewind:             _rewind,\n\t            forward:            _forward,\n\t            seek:               _seek,\n\t            source:             _source,\n\t            poster:             _updatePoster,\n\t            setVolume:          _setVolume,\n\t            togglePlay:         _togglePlay,\n\t            toggleMute:         _toggleMute,\n\t            toggleCaptions:     _toggleCaptions,\n\t            toggleFullscreen:   _toggleFullscreen,\n\t            isFullscreen:       function() { return plyr.isFullscreen || false; },\n\t            support:            function(mimeType) { return _supportMime(plyr, mimeType); },\n\t            destroy:            _destroy,\n\t            restore:            _init\n\t        };\n\t    }\n\t\n\t    // Check for support\n\t    api.supported = function(type) {\n\t        var browser = _browserSniff(),\n\t            oldIE   = (browser.name === 'IE' && browser.version <= 9),\n\t            iPhone  = /iPhone|iPod/i.test(navigator.userAgent),\n\t            audio   = !!document.createElement('audio').canPlayType,\n\t            video   = !!document.createElement('video').canPlayType,\n\t            basic, full;\n\t\n\t        switch (type) {\n\t            case 'video':\n\t                basic = video;\n\t                full  = (basic && (!oldIE && !iPhone));\n\t                break;\n\t\n\t            case 'audio':\n\t                basic = audio;\n\t                full  = (basic && !oldIE);\n\t                break;\n\t\n\t            case 'vimeo':\n\t            case 'youtube':\n\t                basic = true;\n\t                full  = (!oldIE && !iPhone);\n\t                break;\n\t\n\t            default:\n\t                basic = (audio && video);\n\t                full  = (basic && !oldIE);\n\t        }\n\t\n\t        return {\n\t            basic:  basic,\n\t            full:   full\n\t        };\n\t    };\n\t\n\t    // Expose setup function\n\t    api.setup = function(elements, options) {\n\t        // Get the players\n\t        var instances = [];\n\t\n\t        // Select the elements\n\t        // Assume elements is a NodeList by default\n\t        if (typeof elements === 'string') {\n\t            elements = document.querySelectorAll(elements);\n\t        }\n\t        // Single HTMLElement passed\n\t        else if (elements instanceof HTMLElement) {\n\t            elements = [elements];\n\t        }\n\t        // No selector passed, possibly options as first argument\n\t        else if (!(elements instanceof NodeList) && typeof elements !== 'string')  {\n\t            // If options are the first argument\n\t            if (typeof options === 'undefined' && typeof elements === 'object') {\n\t                options = elements;\n\t            }\n\t\n\t            // Use default selector\n\t            elements = document.querySelectorAll(defaults.selectors.container);\n\t        }\n\t\n\t        // Bail if disabled or no basic support\n\t        // You may want to disable certain UAs etc\n\t        if (!api.supported().basic || !elements.length) {\n\t            return false;\n\t        }\n\t\n\t        // Create a player instance for each element\n\t        for (var i = elements.length - 1; i >= 0; i--) {\n\t            // Get the current element\n\t            var element = elements[i];\n\t\n\t            // Setup a player instance and add to the element\n\t            if (typeof element.plyr === 'undefined') {\n\t                // Create instance-specific config\n\t                var config = _extend(defaults, options, JSON.parse(element.getAttribute(\"data-plyr\")));\n\t\n\t                // Bail if not enabled\n\t                if(!config.enabled) {\n\t                    return;\n\t                }\n\t\n\t                // Create new instance\n\t                var instance = new Plyr(element, config);\n\t\n\t                // Set plyr to false if setup failed\n\t                element.plyr = (Object.keys(instance).length ? instance : false);\n\t\n\t                // Callback\n\t                _triggerEvent(element, 'setup', { plyr: element.plyr });\n\t            }\n\t\n\t            // Add to return array even if it's already setup\n\t            instances.push(element.plyr);\n\t        }\n\t\n\t        return instances;\n\t    };\n\t\n\t    return api;\n\t}));\n\t\n\t// Custom event polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n\t(function () {\n\t    if (typeof window.CustomEvent === 'function') {\n\t        return false;\n\t    }\n\t\n\t    function CustomEvent (event, params) {\n\t        params = params || { bubbles: false, cancelable: false, detail: undefined };\n\t        var evt = document.createEvent('CustomEvent');\n\t        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t        return evt;\n\t    }\n\t\n\t    CustomEvent.prototype = window.Event.prototype;\n\t\n\t    window.CustomEvent = CustomEvent;\n\t})();\n\n\n/***/ },\n\n/***/ 50:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div _v-00580021=\\\"\\\"> <div class=hidden _v-00580021=\\\"\\\"> <svg _v-00580021=\\\"\\\"> <symbol id=icon-captions-off viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-captions-on viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M3 11h3v2H3zM12 11h3v2h-3zM7 11h4v2H7z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-enter-fullscreen viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M10.3 9.7c.7.677 1.4 0 1.4 0L16 5.4V10h2V3c0-.6-.4-1-1-1h-7v2h4.6l-4.3 4.3s-.7.723 0 1.4z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M7 2v2H2v10h14v-1h2v2c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1h6z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-exit-fullscreen viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M7.7 8.3c-.7-.677-1.4 0-1.4 0L2 12.6V8H0v7c0 .6.4 1 1 1h7v-2H3.4l4.3-4.3s.7-.723 0-1.4z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M11 16v-2h5V4H2v1H0V3c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1h-6z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-fast-forward viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M17.57 8.246L7 2c-.552 0-1 .448-1 1v1.954L1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l5-2.955V15c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754zM6 10.722l-4 2.364V4.914l4 2.364v3.444zm2 2.364V4.914L14.915 9 8 13.086z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-muted viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M9.214 2c-.11 0-.225.032-.334.1L4.832 4.91C4.75 4.97 4.65 5 4.55 5H.995C.446 5 0 5.448 0 6v6c0 .552.446 1 .996 1H4.55c.1 0 .2.03.282.09L8.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM7.97 12.834L5.58 11.177c-.166-.115-.364-.178-.566-.178H2.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L7.97 5.165v7.67zM14.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M13.957 9.2c.086 1.747 1.514 2.99 2.507 3.648.47.312 1.094.122 1.325-.408l.037-.086c.188-.43.045-.94-.336-1.194-.705-.473-1.585-1.247-1.623-2.065-.032-.676.553-1.468 1.663-2.27.398-.288.53-.84.285-1.275l-.042-.075c-.266-.475-.866-.624-1.3-.312-1.74 1.25-2.586 2.606-2.516 4.037z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-pause viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M2 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2H4S2 2 2 4zm2 0h2v10H4V4zM10 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2h-2s-2 0-2 2zm2 0h2v10h-2V4z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-play viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M5 4.914L11.915 9 5 13.086V4.914zM4 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754L4 2z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-restart viewBox=\\\"0 0 16 16\\\" _v-00580021=\\\"\\\"> <path d=\\\"M7.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C4 2.6 2.9 3.2 2 4.1-.7 6.8-.7 11.2 2 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L14 1.9l-6.3-.7z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-rewind viewBox=\\\"0 0 18 21\\\" _v-00580021=\\\"\\\"> <path d=\\\"M.43 10.754L11 17c.552 0 1-.448 1-1v-1.954L17 17c.552 0 1-.448 1-1V4c0-.552-.448-1-1-1l-5 2.955V4c0-.552-.448-1-1-1L.43 9.246C.165 9.404 0 9.69 0 10s.164.597.43.754zM12 8.278l4-2.364v8.172l-4-2.364V8.278zm-2-2.364v8.172L3.085 10 10 5.914z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-volume viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M10.214 2c-.11 0-.225.032-.334.1L5.832 4.91C5.75 4.97 5.65 5 5.55 5H1.995C1.446 5 1 5.448 1 6v6c0 .552.446 1 .996 1H5.55c.1 0 .2.03.282.09L9.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM8.97 12.834L6.58 11.177c-.166-.115-.364-.178-.566-.178H3.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L8.97 5.165v7.67zM16.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\\\" _v-00580021=\\\"\\\"></path> </symbol> </svg> </div> <div class=plyr v-if=video _v-00580021=\\\"\\\"> <video controls=\\\"\\\" _v-00580021=\\\"\\\"> <source :src=url :type=type _v-00580021=\\\"\\\"> <p class=\\\"alert alert-warning\\\" _v-00580021=\\\"\\\"> <strong _v-00580021=\\\"\\\">糟糕！您的浏览器不支持音频播放，</strong><a href=http://browsehappy.com/ _v-00580021=\\\"\\\">请升级您的浏览器。</a> </p> </video> </div> <div class=plyr v-else=\\\"\\\" _v-00580021=\\\"\\\"> <audio controls=\\\"\\\" _v-00580021=\\\"\\\"> <source :src=url :type=type _v-00580021=\\\"\\\"> <p class=\\\"alert alert-warning\\\" _v-00580021=\\\"\\\"> <strong _v-00580021=\\\"\\\">糟糕！您的浏览器不支持视频播放，</strong><a href=http://browsehappy.com/ _v-00580021=\\\"\\\">请升级您的浏览器。</a> </p> </audio> </div> </div>\";\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div _v-7618d9e7=\\\"\\\"> <h2 class=content-subhead _v-7618d9e7=\\\"\\\"></h2> <p _v-7618d9e7=\\\"\\\"> 音频播放 </p> <p _v-7618d9e7=\\\"\\\"> <player type=audio/mp3 url=http://7xpcvs.com1.z0.glb.clouddn.com/audio.mp3 _v-7618d9e7=\\\"\\\"></player> </p> <p _v-7618d9e7=\\\"\\\"> 视频播放 (不支持 flv) </p> <p _v-7618d9e7=\\\"\\\"> <player type=video/mp4 url=http://7xpcvs.com1.z0.glb.clouddn.com/video.mp4 _v-7618d9e7=\\\"\\\"></player> </p> </div>\";\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(42)\n\t__vue_script__ = __webpack_require__(21)\n\t__vue_template__ = __webpack_require__(54)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(38)\n\t__vue_script__ = __webpack_require__(22)\n\t__vue_template__ = __webpack_require__(50)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 2.343fec5e037d6048ac77.js\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 3\n ** module chunks = 1 2 3\n **/","<style scoped>\n</style>\n\n<template>\n    <div>\n        <h2 class=\"content-subhead\"></h2>\n        <p>\n            音频播放\n        </p>\n        <p>\n            <player type=\"audio/mp3\"\n                    url=\"http://7xpcvs.com1.z0.glb.clouddn.com/audio.mp3\"></player>\n        </p>\n        <p>\n            视频播放 (不支持 flv)\n        </p>\n        <p>\n            <player type=\"video/mp4\"\n                    url=\"http://7xpcvs.com1.z0.glb.clouddn.com/video.mp4\"></player>\n        </p>\n    </div>\n</template>\n\n<script>\n    import player from '../components/player'\n    export default{\n        name: 'lightweight-player',\n        data() {\n            return {}\n        },\n        components: { player }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** player.vue?78a0705a\n **/","<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\n    video, audio\n        width 100%\n</style>\n<template>\n    <div>\n        <div class=\"hidden\">\n            <svg>\n                <symbol id=\"icon-captions-off\" viewbox=\"0 0 18 18\">\n                    <path d=\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\"/>\n                </symbol>\n                <symbol id=\"icon-captions-on\" viewbox=\"0 0 18 18\">\n                    <path d=\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\"/>\n                    <path d=\"M3 11h3v2H3zM12 11h3v2h-3zM7 11h4v2H7z\"/>\n                </symbol>\n                <symbol id=\"icon-enter-fullscreen\" viewbox=\"0 0 18 18\">\n                    <path d=\"M10.3 9.7c.7.677 1.4 0 1.4 0L16 5.4V10h2V3c0-.6-.4-1-1-1h-7v2h4.6l-4.3 4.3s-.7.723 0 1.4z\"/>\n                    <path d=\"M7 2v2H2v10h14v-1h2v2c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1h6z\"/>\n                </symbol>\n                <symbol id=\"icon-exit-fullscreen\" viewbox=\"0 0 18 18\">\n                    <path d=\"M7.7 8.3c-.7-.677-1.4 0-1.4 0L2 12.6V8H0v7c0 .6.4 1 1 1h7v-2H3.4l4.3-4.3s.7-.723 0-1.4z\"/>\n                    <path d=\"M11 16v-2h5V4H2v1H0V3c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1h-6z\"/>\n                </symbol>\n                <symbol id=\"icon-fast-forward\" viewbox=\"0 0 18 18\">\n                    <path d=\"M17.57 8.246L7 2c-.552 0-1 .448-1 1v1.954L1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l5-2.955V15c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754zM6 10.722l-4 2.364V4.914l4 2.364v3.444zm2 2.364V4.914L14.915 9 8 13.086z\"/>\n                </symbol>\n                <symbol id=\"icon-muted\" viewbox=\"0 0 18 18\">\n                    <path d=\"M9.214 2c-.11 0-.225.032-.334.1L4.832 4.91C4.75 4.97 4.65 5 4.55 5H.995C.446 5 0 5.448 0 6v6c0 .552.446 1 .996 1H4.55c.1 0 .2.03.282.09L8.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM7.97 12.834L5.58 11.177c-.166-.115-.364-.178-.566-.178H2.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L7.97 5.165v7.67zM14.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\"/>\n                    <path d=\"M13.957 9.2c.086 1.747 1.514 2.99 2.507 3.648.47.312 1.094.122 1.325-.408l.037-.086c.188-.43.045-.94-.336-1.194-.705-.473-1.585-1.247-1.623-2.065-.032-.676.553-1.468 1.663-2.27.398-.288.53-.84.285-1.275l-.042-.075c-.266-.475-.866-.624-1.3-.312-1.74 1.25-2.586 2.606-2.516 4.037z\"/>\n                </symbol>\n                <symbol id=\"icon-pause\" viewbox=\"0 0 18 18\">\n                    <path d=\"M2 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2H4S2 2 2 4zm2 0h2v10H4V4zM10 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2h-2s-2 0-2 2zm2 0h2v10h-2V4z\"/>\n                </symbol>\n                <symbol id=\"icon-play\" viewbox=\"0 0 18 18\">\n                    <path d=\"M5 4.914L11.915 9 5 13.086V4.914zM4 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754L4 2z\"/>\n                </symbol>\n                <symbol id=\"icon-restart\" viewbox=\"0 0 16 16\">\n                    <path d=\"M7.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C4 2.6 2.9 3.2 2 4.1-.7 6.8-.7 11.2 2 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L14 1.9l-6.3-.7z\"/>\n                </symbol>\n                <symbol id=\"icon-rewind\" viewbox=\"0 0 18 21\">\n                    <path d=\"M.43 10.754L11 17c.552 0 1-.448 1-1v-1.954L17 17c.552 0 1-.448 1-1V4c0-.552-.448-1-1-1l-5 2.955V4c0-.552-.448-1-1-1L.43 9.246C.165 9.404 0 9.69 0 10s.164.597.43.754zM12 8.278l4-2.364v8.172l-4-2.364V8.278zm-2-2.364v8.172L3.085 10 10 5.914z\"/>\n                </symbol>\n                <symbol id=\"icon-volume\" viewbox=\"0 0 18 18\">\n                    <path d=\"M10.214 2c-.11 0-.225.032-.334.1L5.832 4.91C5.75 4.97 5.65 5 5.55 5H1.995C1.446 5 1 5.448 1 6v6c0 .552.446 1 .996 1H5.55c.1 0 .2.03.282.09L9.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM8.97 12.834L6.58 11.177c-.166-.115-.364-.178-.566-.178H3.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L8.97 5.165v7.67zM16.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\"/>\n                </symbol>\n            </svg>\n        </div>\n        <div class=\"plyr\" v-if=\"video\">\n            <video controls>\n                <source :src=\"url\" :type=\"type\">\n                <p class=\"alert alert-warning\">\n                    <strong>糟糕！您的浏览器不支持音频播放，</strong><a href=\"http://browsehappy.com/\">请升级您的浏览器。</a>\n                </p>\n            </video>\n        </div>\n        <div class=\"plyr\" v-else>\n            <audio controls>\n                <source :src=\"url\" :type=\"type\">\n                <p class=\"alert alert-warning\">\n                    <strong>糟糕！您的浏览器不支持视频播放，</strong><a href=\"http://browsehappy.com/\">请升级您的浏览器。</a>\n                </p>\n            </audio>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    import 'plyr/dist/plyr.css'\n    import plyr from 'plyr'\n    export default{\n        props: {\n            url: {\n                type: String,\n                required: true\n            },\n            type: {\n                type: String,\n                default: 'video/mp4'\n            }\n        },\n        data() {\n            return {}\n        },\n        computed: {\n            video() {\n                return this.type.startsWith('video')\n            }\n        },\n        ready() {\n            plyr.setup({})\n        }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** index.vue?64773c50\n **/","exports = module.exports = require(\"./../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".plyr__captions,.plyr__controls{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-align:center}@-webkit-keyframes plyr-progress{to{background-position:40px 0}}@keyframes plyr-progress{to{background-position:40px 0}}.plyr{position:relative;max-width:100%;min-width:290px;font-family:Avenir,Avenir Next,Helvetica Neue,Segoe UI,Helvetica,Arial,sans-serif}.plyr,.plyr *,.plyr :after,.plyr :before{box-sizing:border-box}.plyr a,.plyr button,.plyr input,.plyr label{-ms-touch-action:manipulation;touch-action:manipulation}.plyr__sr-only{position:absolute!important;clip:rect(1px,1px,1px,1px);padding:0!important;border:0!important;height:1px!important;width:1px!important;overflow:hidden}.plyr__video-wrapper{position:relative}.plyr audio,.plyr video{width:100%;height:auto;vertical-align:middle}.plyr video::-webkit-media-text-track-container{display:none}.plyr__video-embed{padding-bottom:56.25%;height:0;overflow:hidden;background:#000}.plyr__video-embed iframe{position:absolute;top:0;left:0;width:100%;height:100%;border:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.plyr__video-embed>div{position:relative;padding-bottom:200%;-webkit-transform:translateY(-35.95%);transform:translateY(-35.95%)}.plyr__video-embed.plyr iframe{pointer-events:none}.plyr__captions{display:none;position:absolute;bottom:0;left:0;width:100%;padding:20px 20px 30px;color:#fff;font-size:20px}.plyr__captions span{border-radius:2px;padding:3px 10px;background:rgba(0,0,0,.9)}.plyr__captions span:empty{display:none}@media (min-width:768px){.plyr__captions{font-size:24px}}.plyr--captions-active .plyr__captions{display:block}.plyr--fullscreen-active .plyr__captions{font-size:32px}.plyr__controls{position:relative;padding:10px;background:#fff;line-height:1;box-shadow:0 1px 1px rgba(52,63,74,.2)}.plyr__controls:after{content:'';display:table;clear:both}.plyr__controls--right{display:block;margin:10px auto 0}@media (min-width:560px){.plyr__controls--left{float:left}.plyr__controls--right{float:right;margin-top:0}}.plyr__controls button{display:inline-block;vertical-align:middle;margin:0 2px;padding:5px 10px;overflow:hidden;border:0;background:0 0;border-radius:3px;cursor:pointer;color:#6b7d86;transition:background .3s ease,color .3s ease,opacity .3s ease}.plyr__controls button svg{width:18px;height:18px;display:block;fill:currentColor;transition:fill .3s ease}.plyr__controls button.tab-focus:focus,.plyr__controls button:hover{background:#3498db;color:#fff}.plyr__controls .plyr__time,.plyr__tooltip{color:#6b7d86;font-size:14px;font-weight:600}.plyr__controls button:focus{outline:0}.plyr__controls .icon--captions-on,.plyr__controls .icon--exit-fullscreen,.plyr__controls .icon--muted{display:none}.plyr__controls .plyr__time{display:inline-block;vertical-align:middle;margin-left:10px}.plyr__controls .plyr__time+.plyr__time{display:none}@media (min-width:560px){.plyr__controls .plyr__time+.plyr__time{display:inline-block}}.plyr__controls .plyr__time+.plyr__time:before{content:'\\\\2044';margin-right:10px}.plyr__tooltip{visibility:hidden;position:absolute;z-index:2;bottom:100%;margin-bottom:10px;padding:10px 15px;opacity:0;background:#fff;box-shadow:0 0 5px rgba(64,64,64,.1),0 0 0 1px rgba(64,64,64,.1);border-radius:3px;line-height:1.5;-webkit-transform:translate(-50%,10px) scale(.8);transform:translate(-50%,10px) scale(.8);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transition:opacity .2s .1s ease,visibility .3s ease,-webkit-transform .2s .1s ease;transition:transform .2s .1s ease,opacity .2s .1s ease,visibility .3s ease;transition:transform .2s .1s ease,opacity .2s .1s ease,visibility .3s ease,-webkit-transform .2s .1s ease}.plyr__tooltip:after,.plyr__tooltip:before{content:'';position:absolute;width:0;height:0;top:100%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.plyr__tooltip:after{bottom:-8px;border-right:7px solid transparent;border-top:7px solid rgba(64,64,64,.2);border-left:7px solid transparent;z-index:1}.plyr__tooltip:before{bottom:-6px;border-right:6px solid transparent;border-top:6px solid #fff;border-left:6px solid transparent;z-index:2}.plyr__tooltip--visible,.plyr button.tab-focus:focus .plyr__tooltip,.plyr button:hover .plyr__tooltip{visibility:visible;opacity:1;-webkit-transform:translate(-50%) scale(1);transform:translate(-50%) scale(1)}.plyr button:hover .plyr__tooltip{z-index:3}.plyr input[type=range]::-ms-tooltip{display:none}.plyr input[type=range].tab-focus:focus{outline:1px dotted rgba(52,63,74,.8);outline-offset:3px}.plyr__progress--seek[type=range]:focus,.plyr__volume[type=range]:focus{outline:0}.plyr__progress{position:absolute;bottom:100%;left:0;right:0;width:100%;height:10px;background:rgba(86,93,100,.2)}.plyr__progress--buffer[value],.plyr__progress--played[value],.plyr__progress--seek[type=range]{position:absolute;left:0;top:0;width:100%;height:10px;margin:0;padding:0;vertical-align:top;-webkit-appearance:none;-moz-appearance:none;border:none;background:0 0}.plyr__progress--buffer[value]::-webkit-progress-bar,.plyr__progress--played[value]::-webkit-progress-bar{background:0 0;transition:width .2s ease}.plyr__progress--buffer[value]::-webkit-progress-value,.plyr__progress--played[value]::-webkit-progress-value{background:currentColor;transition:width .2s ease}.plyr__progress--buffer[value]::-moz-progress-bar,.plyr__progress--played[value]::-moz-progress-bar{background:currentColor;transition:width .2s ease}.plyr__progress--played[value]{z-index:2;color:#3498db}.plyr__progress--buffer[value]{color:rgba(86,93,100,.25)}.plyr__progress--seek[type=range]{z-index:4;cursor:pointer;outline:0}.plyr__progress--seek[type=range]::-webkit-slider-runnable-track{background:0 0;border:0}.plyr__progress--seek[type=range]::-webkit-slider-thumb{-webkit-appearance:none;background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-moz-range-track{background:0 0;border:0}.plyr__progress--seek[type=range]::-moz-range-thumb{-moz-appearance:none;background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-ms-track{color:transparent;background:0 0;border:0}.plyr__progress--seek[type=range]::-ms-fill-lower,.plyr__progress--seek[type=range]::-ms-fill-upper{background:0 0;border:0}.plyr__progress--seek[type=range]::-ms-thumb{background:0 0;border:0;width:1px;height:10px}.plyr__progress--seek[type=range]::-moz-focus-outer{border:0}.plyr__progress .plyr__tooltip{left:0}.plyr--is-touch .plyr--seek[type=range]::-webkit-slider-thumb{width:40px;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.plyr--is-touch .plyr--seek[type=range]::-moz-range-thumb{width:40px;transform:translateX(-50%)}.plyr--is-touch .plyr--seek[type=range]::-ms-thumb{width:40px;transform:translateX(-50%)}.plyr--loading .plyr__progress--buffer{-webkit-animation:plyr-progress 1s linear infinite;animation:plyr-progress 1s linear infinite;background-size:40px 40px;background-repeat:repeat-x;background-color:rgba(86,93,100,.25);background-image:linear-gradient(-45deg,rgba(0,0,0,.15) 25%,transparent 0,transparent 50%,rgba(0,0,0,.15) 0,rgba(0,0,0,.15) 75%,transparent 0,transparent);color:transparent}.plyr--playing .plyr__controls [data-plyr=play],.plyr__controls [data-plyr=pause]{display:none}.plyr--playing .plyr__controls [data-plyr=pause]{display:inline-block}.plyr__volume[type=range]{display:inline-block;vertical-align:middle;-webkit-appearance:none;-moz-appearance:none;width:100px;margin:0 10px 0 0;padding:0;cursor:pointer;background:0 0;border:none}.plyr__volume[type=range]::-webkit-slider-runnable-track{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-webkit-slider-thumb{-webkit-appearance:none;margin-top:-3px;height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]::-moz-range-track{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-moz-range-thumb{height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]::-ms-track{height:6px;background:0 0;border-color:transparent;border-width:3px 0;color:transparent}.plyr__volume[type=range]::-ms-fill-lower,.plyr__volume[type=range]::-ms-fill-upper{height:6px;background:#e6e6e6;border:0;border-radius:3px}.plyr__volume[type=range]::-ms-thumb{height:12px;width:12px;background:#6b7d86;border:0;border-radius:100%;transition:background .3s ease;cursor:ew-resize}.plyr__volume[type=range]:focus::-webkit-slider-thumb{background:#3498db}.plyr__volume[type=range]:focus::-moz-range-thumb{background:#3498db}.plyr__volume[type=range]:focus::-ms-thumb{background:#3498db}.plyr--is-ios.plyr--audio .plyr__controls--right,.plyr--is-ios .plyr__volume,.plyr--is-ios [data-plyr=mute]{display:none}.plyr--is-ios.plyr--audio .plyr__controls--left{float:none}.plyr--audio .plyr__controls{padding-top:20px}.plyr--audio .plyr__progress{bottom:auto;top:0;background:#d6dadd}.plyr--fullscreen-active,.plyr.plyr--fullscreen{position:fixed;top:0;left:0;right:0;bottom:0;height:100%;width:100%;z-index:10000000;background:#000}.plyr--fullscreen-active video,.plyr.plyr--fullscreen video{height:100%}.plyr--fullscreen-active .plyr__video-wrapper,.plyr.plyr--fullscreen .plyr__video-wrapper{height:100%;width:100%}.plyr--fullscreen-active .plyr__controls,.plyr.plyr--fullscreen .plyr__controls{position:absolute;bottom:0;left:0;right:0}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing .plyr__controls,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing .plyr__controls{-webkit-transform:translateY(100%) translateY(5px);transform:translateY(100%) translateY(5px);transition:-webkit-transform .3s .2s ease;transition:transform .3s .2s ease;transition:transform .3s .2s ease,-webkit-transform .3s .2s ease}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing .plyr__captions,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing .plyr__captions{bottom:5px;transition:bottom .3s .2s ease}.plyr--fullscreen-active.plyr--fullscreen--hide-controls.plyr--playing.plyr--hover .plyr__controls,.plyr.plyr--fullscreen.plyr--fullscreen--hide-controls.plyr--playing.plyr--hover .plyr__controls{-webkit-transform:translateY(0);transform:translateY(0)}.plyr--fullscreen--hide-controls.plyr--fullscreen-active.plyr--playing.plyr--hover .plyr__captions,.plyr--fullscreen-active .plyr__captions,.plyr.plyr--fullscreen .plyr__captions{top:auto;bottom:90px}@media (min-width:560px){.plyr--fullscreen--hide-controls.plyr--fullscreen-active.plyr--playing.plyr--hover .plyr__captions,.plyr--fullscreen-active .plyr__captions,.plyr.plyr--fullscreen .plyr__captions{bottom:60px}}.plyr--captions-active .plyr__controls .icon--captions-on,.plyr--fullscreen-active .icon--exit-fullscreen,.plyr--muted .plyr__controls .icon--muted{display:block}.plyr--captions-active .plyr__controls .icon--captions-on+svg,.plyr--fullscreen-active .icon--exit-fullscreen+svg,.plyr--muted .plyr__controls .icon--muted+svg,.plyr [data-plyr=captions],.plyr [data-plyr=fullscreen]{display:none}.plyr--captions-enabled [data-plyr=captions],.plyr--fullscreen-enabled [data-plyr=fullscreen]{display:inline-block}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/plyr/dist/plyr.css\n ** module id = 28\n ** module chunks = 2\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"audio[_v-00580021],video[_v-00580021]{width:100%}\", \"\", {\"version\":3,\"sources\":[\"/./client/components/player/index.vue\"],\"names\":[],\"mappings\":\"AAAA,sCAEE,UAAY,CACb\",\"file\":\"index.vue\",\"sourcesContent\":[\"video[_v-00580021],\\naudio[_v-00580021] {\\n  width: 100%;\\n}\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./~/stylus-loader?sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./client/components/player/index.vue\n ** module id = 29\n ** module chunks = 2\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"player.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./client/code/player.vue\n ** module id = 33\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../css-loader/index.js!./plyr.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./plyr.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./plyr.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/plyr/dist/plyr.css\n ** module id = 34\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./../../../node_modules/stylus-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./../../../node_modules/stylus-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./../../../node_modules/stylus-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!./~/stylus-loader?sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./client/components/player/index.vue\n ** module id = 38\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./client/code/player.vue\n ** module id = 42\n ** module chunks = 2\n **/","// ==========================================================================\n// Plyr\n// plyr.js v1.5.20\n// https://github.com/selz/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n// Credits: http://paypal.github.io/accessible-html5-video-player/\n// ==========================================================================\n\n(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(null, function() { factory(root, document) });\n    } else {\n        // Browser globals (root is window)\n        root.plyr = factory(root, document);\n    }\n}(typeof window !== 'undefined' ? window : this, function(window, document) {\n    'use strict';\n    /*global YT,$f*/\n\n    // Globals\n    var fullscreen, api = {};\n\n    // Default config\n    var defaults = {\n        enabled:                true,\n        debug:                  false,\n        autoplay:               false,\n        loop:                   false,\n        seekTime:               10,\n        volume:                 5,\n        duration:               null,\n        displayDuration:        true,\n        iconPrefix:             'icon',\n        click:                  true,\n        tooltips:               {\n            controls:           false,\n            seek:               true\n        },\n        selectors: {\n            container:          '.plyr',\n            controls: {\n                container:      null,\n                wrapper:        '.plyr__controls'\n            },\n            labels:             '[data-plyr]',\n            buttons: {\n                seek:           '[data-plyr=\"seek\"]',\n                play:           '[data-plyr=\"play\"]',\n                pause:          '[data-plyr=\"pause\"]',\n                restart:        '[data-plyr=\"restart\"]',\n                rewind:         '[data-plyr=\"rewind\"]',\n                forward:        '[data-plyr=\"fast-forward\"]',\n                mute:           '[data-plyr=\"mute\"]',\n                volume:         '[data-plyr=\"volume\"]',\n                captions:       '[data-plyr=\"captions\"]',\n                fullscreen:     '[data-plyr=\"fullscreen\"]'\n            },\n            progress: {\n                container:      '.plyr__progress',\n                buffer:         '.plyr__progress--buffer',\n                played:         '.plyr__progress--played'\n            },\n            captions:           '.plyr__captions',\n            currentTime:        '.plyr__time--current',\n            duration:           '.plyr__time--duration'\n        },\n        classes: {\n            videoWrapper:       'plyr__video-wrapper',\n            embedWrapper:       'plyr__video-embed',\n            type:               'plyr--{0}',\n            stopped:            'plyr--stopped',\n            playing:            'plyr--playing',\n            muted:              'plyr--muted',\n            loading:            'plyr--loading',\n            hover:              'plyr--hover',\n            tooltip:            'plyr__tooltip',\n            hidden:             'plyr__sr-only',\n            isIos:              'plyr--is-ios',\n            isTouch:            'plyr--is-touch',\n            captions: {\n                enabled:        'plyr--captions-enabled',\n                active:         'plyr--captions-active'\n            },\n            fullscreen: {\n                enabled:        'plyr--fullscreen-enabled',\n                active:         'plyr--fullscreen-active',\n                hideControls:   'plyr--fullscreen--hide-controls'\n            },\n            tabFocus:           'tab-focus'\n        },\n        captions: {\n            defaultActive:      false\n        },\n        fullscreen: {\n            enabled:            true,\n            fallback:           true,\n            hideControls:       true,\n            allowAudio:         false\n        },\n        storage: {\n            enabled:            true,\n            key:                'plyr'\n        },\n        controls:               ['restart', 'rewind', 'play', 'fast-forward', 'current-time', 'duration', 'mute', 'volume', 'captions', 'fullscreen'],\n        i18n: {\n            restart:            'Restart',\n            rewind:             'Rewind {seektime} secs',\n            play:               'Play',\n            pause:              'Pause',\n            forward:            'Forward {seektime} secs',\n            played:             'played',\n            buffered:           'buffered',\n            currentTime:        'Current time',\n            duration:           'Duration',\n            volume:             'Volume',\n            toggleMute:         'Toggle Mute',\n            toggleCaptions:     'Toggle Captions',\n            toggleFullscreen:   'Toggle Fullscreen',\n            frameTitle:         'Player for {title}'\n        },\n        types: {\n            embed:              ['youtube', 'vimeo'],\n            html5:              ['video', 'audio']\n        },\n        // URLs\n        urls: {\n            vimeo: {\n                api:            'https://cdn.plyr.io/froogaloop/1.0.1/plyr.froogaloop.js',\n            },\n            youtube: {\n                api:            'https://www.youtube.com/iframe_api'\n            }\n        },\n        // Custom control listeners\n        listeners: {\n            seek:               null,\n            play:               null,\n            pause:              null,\n            restart:            null,\n            rewind:             null,\n            forward:            null,\n            mute:               null,\n            volume:             null,\n            captions:           null,\n            fullscreen:         null\n        },\n        // Events to watch on HTML5 media elements\n        events:                 ['ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'emptied']\n    };\n\n    // Credits: http://paypal.github.io/accessible-html5-video-player/\n    // Unfortunately, due to mixed support, UA sniffing is required\n    function _browserSniff() {\n        var nAgt = navigator.userAgent,\n            name = navigator.appName,\n            fullVersion = '' + parseFloat(navigator.appVersion),\n            majorVersion = parseInt(navigator.appVersion, 10),\n            nameOffset,\n            verOffset,\n            ix;\n\n        // MSIE 11\n        if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n            name = 'IE';\n            fullVersion = '11;';\n        }\n        // MSIE\n        else if ((verOffset=nAgt.indexOf('MSIE')) !== -1) {\n            name = 'IE';\n            fullVersion = nAgt.substring(verOffset + 5);\n        }\n        // Chrome\n        else if ((verOffset=nAgt.indexOf('Chrome')) !== -1) {\n            name = 'Chrome';\n            fullVersion = nAgt.substring(verOffset + 7);\n        }\n        // Safari\n        else if ((verOffset=nAgt.indexOf('Safari')) !== -1) {\n            name = 'Safari';\n            fullVersion = nAgt.substring(verOffset + 7);\n            if ((verOffset=nAgt.indexOf('Version')) !== -1) {\n                fullVersion = nAgt.substring(verOffset + 8);\n            }\n        }\n        // Firefox\n        else if ((verOffset=nAgt.indexOf('Firefox')) !== -1) {\n            name = 'Firefox';\n            fullVersion = nAgt.substring(verOffset + 8);\n        }\n        // In most other browsers, 'name/version' is at the end of userAgent\n        else if ((nameOffset=nAgt.lastIndexOf(' ') + 1) < (verOffset=nAgt.lastIndexOf('/'))) {\n            name = nAgt.substring(nameOffset,verOffset);\n            fullVersion = nAgt.substring(verOffset + 1);\n\n            if (name.toLowerCase() == name.toUpperCase()) {\n                name = navigator.appName;\n            }\n        }\n        // Trim the fullVersion string at semicolon/space if present\n        if ((ix = fullVersion.indexOf(';')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        if ((ix = fullVersion.indexOf(' ')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        // Get major version\n        majorVersion = parseInt('' + fullVersion, 10);\n        if (isNaN(majorVersion)) {\n            fullVersion = '' + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n\n        // Return data\n        return {\n            name:       name,\n            version:    majorVersion,\n            ios:        /(iPad|iPhone|iPod)/g.test(navigator.platform),\n            touch:      'ontouchstart' in document.documentElement\n        };\n    }\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplyr.com/test/h5mt.html\n    function _supportMime(plyr, mimeType) {\n        var media = plyr.media;\n\n        // Only check video types for video players\n        if (plyr.type == 'video') {\n            // Check type\n            switch (mimeType) {\n                case 'video/webm':   return !!(media.canPlayType && media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, ''));\n                case 'video/mp4':    return !!(media.canPlayType && media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, ''));\n                case 'video/ogg':    return !!(media.canPlayType && media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''));\n            }\n        }\n\n        // Only check audio types for audio players\n        else if (plyr.type == 'audio') {\n            // Check type\n            switch (mimeType) {\n                case 'audio/mpeg':   return !!(media.canPlayType && media.canPlayType('audio/mpeg;').replace(/no/, ''));\n                case 'audio/ogg':    return !!(media.canPlayType && media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n                case 'audio/wav':    return !!(media.canPlayType && media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, ''));\n            }\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    }\n\n    // Inject a script\n    function _injectScript(source) {\n        if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n            return;\n        }\n\n        var tag = document.createElement('script');\n        tag.src = source;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // Element exists in an array\n    function _inArray(haystack, needle) {\n        return Array.prototype.indexOf && (haystack.indexOf(needle) != -1);\n    }\n\n    // Replace all\n    function _replaceAll(string, find, replace) {\n        return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n    }\n\n    // Wrap an element\n    function _wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        if (!elements.length) {\n            elements = [elements];\n        }\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        for (var i = elements.length - 1; i >= 0; i--) {\n            var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n            var element = elements[i];\n\n            // Cache the current parent and sibling.\n            var parent  = element.parentNode;\n            var sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            }\n            else {\n                parent.appendChild(child);\n            }\n        }\n    }\n\n    // Unwrap an element\n    // http://plainjs.com/javascript/manipulation/unwrap-a-dom-element-35/\n    function _unwrap(wrapper) {\n        // Get the element's parent node\n        var parent = wrapper.parentNode;\n\n        // Move all children out of the element\n        while (wrapper.firstChild) {\n            parent.insertBefore(wrapper.firstChild, wrapper);\n        }\n\n        // Remove the empty element\n        parent.removeChild(wrapper);\n    }\n\n    // Remove an element\n    function _remove(element) {\n        if(!element) {\n            return;\n        }\n        element.parentNode.removeChild(element);\n    }\n\n    // Prepend child\n    function _prependChild(parent, element) {\n        parent.insertBefore(element, parent.firstChild);\n    }\n\n    // Set attributes\n    function _setAttributes(element, attributes) {\n        for (var key in attributes) {\n            element.setAttribute(key, (typeof attributes[key] === 'boolean' && attributes[key]) ? '' : attributes[key]);\n        }\n    }\n\n    // Insert a HTML element\n    function _insertElement(type, parent, attributes) {\n        // Create a new <element>\n        var element = document.createElement(type);\n\n        // Set all passed attributes\n        _setAttributes(element, attributes);\n\n        // Inject the new element\n        _prependChild(parent, element);\n    }\n\n    // Get a classname from selector\n    function _getClassname(selector) {\n        return selector.replace('.', '');\n    }\n\n    // Toggle class on an element\n    function _toggleClass(element, className, state) {\n        if (element) {\n            if (element.classList) {\n                element.classList[state ? 'add' : 'remove'](className);\n            }\n            else {\n                var name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n                element.className = name + (state ? ' ' + className : '');\n            }\n        }\n    }\n\n    // Has class name\n    function _hasClass(element, className) {\n        if (element) {\n            if (element.classList) {\n                return element.classList.contains(className);\n            }\n            else {\n                return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n            }\n        }\n        return false;\n    }\n\n    // Bind event\n    function _on(element, events, callback) {\n        if (element) {\n            _toggleListener(element, events, callback, true);\n        }\n    }\n\n    // Unbind event\n    function _off(element, events, callback) {\n        if (element) {\n            _toggleListener(element, events, callback, false);\n        }\n    }\n\n    // Bind along with custom handler\n    function _proxyListener(element, eventName, userListener, defaultListener) {\n        _on(element, eventName, function(event) {\n            if(userListener) {\n                userListener.apply(element, [event]);\n            }\n            defaultListener.apply(element, [event]);\n        });\n    }\n\n    // Toggle event listener\n    function _toggleListener(element, events, callback, toggle) {\n        var eventList = events.split(' ');\n\n        // If a nodelist is passed, call itself on each node\n        if (element instanceof NodeList) {\n            for (var x = 0; x < element.length; x++) {\n                if (element[x] instanceof Node) {\n                    _toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n                }\n            }\n            return;\n        }\n\n        // If a single node is passed, bind the event listener\n        for (var i = 0; i < eventList.length; i++) {\n            element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, false);\n        }\n    }\n\n    // Trigger event\n    function _triggerEvent(element, eventName, properties) {\n        // Bail if no element\n        if(!element || !eventName) {\n            return;\n        }\n\n        // create and dispatch the event\n        var event = new CustomEvent(eventName, properties);\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    }\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    function _toggleState(target, state) {\n        // Bail if no target\n        if(!target) {\n            return;\n        }\n\n        // Get state\n        state = (typeof state === 'boolean' ? state : !target.getAttribute('aria-pressed'));\n\n        // Set the attribute on target\n        target.setAttribute('aria-pressed', state);\n\n        return state;\n    }\n\n    // Get percentage\n    function _getPercentage(current, max) {\n        if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n            return 0;\n        }\n        return ((current / max) * 100).toFixed(2);\n    }\n\n    // Deep extend/merge destination object with N more objects\n    // http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n    // Removed call to arguments.callee (used explicit function name instead)\n    function _extend() {\n        // Get arguments\n\t\tvar objects = arguments;\n\n        // Bail if nothing to merge\n        if(!objects.length) {\n            return;\n        }\n\n        // Return first if specified but nothing to merge\n        if(objects.lenth == 1) {\n            return objects[0];\n        }\n\n        // First object is the destination\n        var destination = Array.prototype.shift.call(objects),\n            length      = objects.length;\n\n        // Loop through all objects to merge\n        for (var i = 0; i < length; i++) {\n            var source = objects[i];\n\n            for (var property in source) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    _extend(destination[property], source[property]);\n                }\n                else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n\n        return destination;\n    }\n\n    // Fullscreen API\n    function _fullscreen() {\n        var fullscreen = {\n                supportsFullScreen: false,\n                isFullScreen: function() { return false; },\n                requestFullScreen: function() {},\n                cancelFullScreen: function() {},\n                fullScreenEventName: '',\n                element: null,\n                prefix: ''\n            },\n            browserPrefixes = 'webkit moz o ms khtml'.split(' ');\n\n        // Check for native support\n        if (typeof document.cancelFullScreen !== 'undefined') {\n            fullscreen.supportsFullScreen = true;\n        }\n        else {\n            // Check for fullscreen support by vendor prefix\n            for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {\n                fullscreen.prefix = browserPrefixes[i];\n\n                if (typeof document[fullscreen.prefix + 'CancelFullScreen'] !== 'undefined') {\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                }\n                // Special case for MS (when isn't it?)\n                else if (typeof document.msExitFullscreen !== 'undefined' && document.msFullscreenEnabled) {\n                    fullscreen.prefix = 'ms';\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                }\n            }\n        }\n\n        // Update methods to do something useful\n        if (fullscreen.supportsFullScreen) {\n            // Yet again Microsoft awesomeness,\n            // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n            fullscreen.fullScreenEventName = (fullscreen.prefix == 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange');\n\n            fullscreen.isFullScreen = function(element) {\n                if (typeof element === 'undefined') {\n                    element = document.body;\n                }\n                switch (this.prefix) {\n                    case '':\n                        return document.fullscreenElement == element;\n                    case 'moz':\n                        return document.mozFullScreenElement == element;\n                    default:\n                        return document[this.prefix + 'FullscreenElement'] == element;\n                }\n            };\n            fullscreen.requestFullScreen = function(element) {\n                if (typeof element === 'undefined') {\n                    element = document.body;\n                }\n                return (this.prefix === '') ? element.requestFullScreen() : element[this.prefix + (this.prefix == 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n            };\n            fullscreen.cancelFullScreen = function() {\n                return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + (this.prefix == 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n            };\n            fullscreen.element = function() {\n                return (this.prefix === '') ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n            };\n        }\n\n        return fullscreen;\n    }\n\n    // Local storage\n    function _storage() {\n        var storage = {\n            supported: (function() {\n                if(!('localStorage' in window)) {\n    \t\t\t\treturn false;\n    \t\t\t}\n\n    \t\t\t// Try to use it (it might be disabled, e.g. user is in private/porn mode)\n                // see: https://github.com/Selz/plyr/issues/131\n    \t\t\ttry {\n                    // Add test item\n    \t\t\t\twindow.localStorage.setItem('___test', 'OK');\n\n                    // Get the test item\n                    var result = window.localStorage.getItem('___test');\n\n                    // Clean up\n                    window.localStorage.removeItem('___test');\n\n                    // Check if value matches\n                    return (result === 'OK');\n    \t\t\t}\n    \t\t\tcatch (e) {\n    \t\t\t\treturn false;\n    \t\t\t}\n\n    \t\t\treturn false;\n            })()\n        };\n        return storage;\n    }\n\n    // Player instance\n    function Plyr(container, config) {\n        var plyr = this;\n        plyr.container = container;\n        plyr.timers = {};\n\n        // Log config options\n        _log(config);\n\n        // Debugging\n        function _log(text, warn) {\n            if (config.debug && window.console) {\n                console[(warn ? 'warn' : 'log')](text);\n            }\n        }\n\n        // Build the default HTML\n        function _buildControls() {\n            // Open and add the progress and seek elements\n            var html = [\n            '<div class=\"plyr__controls\">',\n                '<div class=\"plyr__progress\">',\n                    '<label for=\"seek{id}\" class=\"plyr__sr-only\">Seek</label>',\n                    '<input id=\"seek{id}\" class=\"plyr__progress--seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"0\" data-plyr=\"seek\">',\n                    '<progress class=\"plyr__progress--played\" max=\"100\" value=\"0\">',\n                        '<span>0</span>% ' + config.i18n.played,\n                    '</progress>',\n                    '<progress class=\"plyr__progress--buffer\" max=\"100\" value=\"0\">',\n                        '<span>0</span>% ' + config.i18n.buffered,\n                    '</progress>'];\n\n            // Seek tooltip\n            if (config.tooltips.seek) {\n                html.push('<span class=\"plyr__tooltip\">00:00</span>');\n            }\n\n            // Close progress\n            html.push('</div>',\n                '<span class=\"plyr__controls--left\">');\n\n            // Restart button\n            if (_inArray(config.controls, 'restart')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"restart\">',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-restart\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.restart + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Rewind button\n            if (_inArray(config.controls, 'rewind')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"rewind\">',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-rewind\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.rewind + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Play/pause button\n            if (_inArray(config.controls, 'play')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\">',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-play\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>',\n                    '<button type=\"button\" data-plyr=\"pause\">',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-pause\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.pause + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Fast forward button\n            if (_inArray(config.controls, 'fast-forward')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fast-forward\">',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-fast-forward\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.forward + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Media current time display\n            if (_inArray(config.controls, 'current-time')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.currentTime + '</span>',\n                        '<span class=\"plyr__time--current\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Media duration display\n            if (_inArray(config.controls, 'duration')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.duration + '</span>',\n                        '<span class=\"plyr__time--duration\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Close left controls\n            html.push(\n                '</span>',\n                '<span class=\"plyr__controls--right\">'\n            );\n\n            // Toggle mute button\n            if (_inArray(config.controls, 'mute')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"mute\">',\n                        '<svg class=\"icon--muted\"><use xlink:href=\"#' + config.iconPrefix + '-muted\" /></svg>',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-volume\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleMute + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Volume range control\n            if (_inArray(config.controls, 'volume')) {\n                html.push(\n                    '<label for=\"volume{id}\" class=\"plyr__sr-only\">' + config.i18n.volume + '</label>',\n                    '<input id=\"volume{id}\" class=\"plyr__volume\" type=\"range\" min=\"0\" max=\"10\" value=\"5\" data-plyr=\"volume\">'\n                );\n            }\n\n            // Toggle captions button\n            if (_inArray(config.controls, 'captions')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"captions\">',\n                        '<svg class=\"icon--captions-on\"><use xlink:href=\"#' + config.iconPrefix + '-captions-on\" /></svg>',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-captions-off\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleCaptions + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Toggle fullscreen button\n            if (_inArray(config.controls, 'fullscreen')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fullscreen\">',\n                        '<svg class=\"icon--exit-fullscreen\"><use xlink:href=\"#' + config.iconPrefix + '-exit-fullscreen\" /></svg>',\n                        '<svg><use xlink:href=\"#' + config.iconPrefix + '-enter-fullscreen\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleFullscreen + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Close everything\n            html.push(\n                '</span>',\n            '</div>'\n            );\n\n            return html.join('');\n        }\n\n        // Setup fullscreen\n        function _setupFullscreen() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            if ((plyr.type != 'audio' || config.fullscreen.allowAudio) && config.fullscreen.enabled) {\n                // Check for native support\n                var nativeSupport = fullscreen.supportsFullScreen;\n\n                if (nativeSupport || (config.fullscreen.fallback && !_inFrame())) {\n                    _log((nativeSupport ? 'Native' : 'Fallback') + ' fullscreen enabled');\n\n                    // Add styling hook\n                    _toggleClass(plyr.container, config.classes.fullscreen.enabled, true);\n                }\n                else {\n                    _log('Fullscreen not supported and fallback disabled');\n                }\n\n                // Toggle state\n                _toggleState(plyr.buttons.fullscreen, false);\n\n                // Setup focus trap\n                _focusTrap();\n\n                // Set control hide class hook\n                if (config.fullscreen.hideControls) {\n                    _toggleClass(plyr.container, config.classes.fullscreen.hideControls, true);\n                }\n            }\n        }\n\n        // Setup captions\n        function _setupCaptions() {\n            if (plyr.type !== 'video') {\n                return;\n            }\n\n            // Inject the container\n            if (!_getElement(config.selectors.captions)) {\n                plyr.videoContainer.insertAdjacentHTML('afterbegin', '<div class=\"' + _getClassname(config.selectors.captions) + '\"></div>');\n            }\n\n            // Determine if HTML5 textTracks is supported\n            plyr.usingTextTracks = false;\n            if (plyr.media.textTracks) {\n                plyr.usingTextTracks = true;\n            }\n\n            // Get URL of caption file if exists\n            var captionSrc = '',\n                kind,\n                children = plyr.media.childNodes;\n\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].nodeName.toLowerCase() === 'track') {\n                    kind = children[i].kind;\n                    if (kind === 'captions' || kind === 'subtitles') {\n                        captionSrc = children[i].getAttribute('src');\n                    }\n                }\n            }\n\n            // Record if caption file exists or not\n            plyr.captionExists = true;\n            if (captionSrc === '') {\n                plyr.captionExists = false;\n                _log('No caption track found');\n            }\n            else {\n                _log('Caption track found; URI: ' + captionSrc);\n            }\n\n            // If no caption file exists, hide container for caption text\n            if (!plyr.captionExists) {\n                _toggleClass(plyr.container, config.classes.captions.enabled);\n            }\n            // If caption file exists, process captions\n            else {\n                // Turn off native caption rendering to avoid double captions\n                // This doesn't seem to work in Safari 7+, so the <track> elements are removed from the dom below\n                var tracks = plyr.media.textTracks;\n                for (var x = 0; x < tracks.length; x++) {\n                    tracks[x].mode = 'hidden';\n                }\n\n                // Enable UI\n                _showCaptions(plyr);\n\n                // Disable unsupported browsers than report false positive\n                // Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\n                if ((plyr.browser.name === 'IE' && plyr.browser.version >= 10) ||\n                    (plyr.browser.name === 'Firefox' && plyr.browser.version >= 31)) {\n\n                    // Debugging\n                    _log('Detected browser with known TextTrack issues - using manual fallback');\n\n                    // Set to false so skips to 'manual' captioning\n                    plyr.usingTextTracks = false;\n                }\n\n                // Rendering caption tracks\n                // Native support required - http://caniuse.com/webvtt\n                if (plyr.usingTextTracks) {\n                    _log('TextTracks supported');\n\n                    for (var y = 0; y < tracks.length; y++) {\n                        var track = tracks[y];\n\n                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n                            _on(track, 'cuechange', function() {\n                                // Display a cue, if there is one\n                                if (this.activeCues[0] && 'text' in this.activeCues[0]) {\n                                    _setCaption(this.activeCues[0].getCueAsHTML());\n                                }\n                                else {\n                                    _setCaption();\n                                }\n                            });\n                        }\n                    }\n                }\n                // Caption tracks not natively supported\n                else {\n                    _log('TextTracks not supported so rendering captions manually');\n\n                    // Render captions from array at appropriate time\n                    plyr.currentCaption = '';\n                    plyr.captions = [];\n\n                    if (captionSrc !== '') {\n                        // Create XMLHttpRequest Object\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onreadystatechange = function() {\n                            if (xhr.readyState === 4) {\n                                if (xhr.status === 200) {\n                                    var captions = [],\n                                        caption,\n                                        req = xhr.responseText;\n\n                                    captions = req.split('\\n\\n');\n\n                                    for (var r = 0; r < captions.length; r++) {\n                                        caption = captions[r];\n                                        plyr.captions[r] = [];\n\n                                        // Get the parts of the captions\n                                        var parts = caption.split('\\n'),\n                                            index = 0;\n\n                                        // Incase caption numbers are added\n                                        if(parts[index].indexOf(\":\") === -1) {\n                                            index = 1;\n                                        }\n\n                                        plyr.captions[r] = [parts[index], parts[index + 1]];\n                                    }\n\n                                    // Remove first element ('VTT')\n                                    plyr.captions.shift();\n\n                                    _log('Successfully loaded the caption file via AJAX');\n                                }\n                                else {\n                                    _log('There was a problem loading the caption file via AJAX', true);\n                                }\n                            }\n                        };\n\n                        xhr.open('get', captionSrc, true);\n\n                        xhr.send();\n                    }\n                }\n            }\n        }\n\n        // Set the current caption\n        function _setCaption(caption) {\n            var container = _getElement(config.selectors.captions),\n                content = document.createElement('span');\n\n            // Empty the container\n            container.innerHTML = '';\n\n            // Default to empty\n            if(typeof caption === 'undefined') {\n                caption = '';\n            }\n\n            // Set the span content\n            if(typeof caption === 'string') {\n                content.innerHTML = caption.trim();\n            }\n            else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            container.appendChild(content);\n\n            // Force redraw\n            var redraw = container.offsetHeight;\n        }\n\n        // Captions functions\n        // Seek the manual caption time and update UI\n        function _seekManualCaptions(time) {\n            // Utilities for caption time codes\n            function _timecodeCommon(tc, pos) {\n                var tcpair = [];\n                tcpair = tc.split(' --> ');\n                for(var i = 0; i < tcpair.length; i++) {\n                    // WebVTT allows for extra meta data after the timestamp line\n                    // So get rid of this if it exists\n                    tcpair[i] = tcpair[i].replace(/(\\d+:\\d+:\\d+\\.\\d+).*/, \"$1\");\n                }\n                return _subTcSecs(tcpair[pos]);\n            }\n            function _timecodeMin(tc) {\n                return _timecodeCommon(tc, 0);\n            }\n            function _timecodeMax(tc) {\n                return _timecodeCommon(tc, 1);\n            }\n            function _subTcSecs(tc) {\n                if (tc === null || tc === undefined) {\n                    return 0;\n                }\n                else {\n                    var tc1 = [],\n                        tc2 = [],\n                        seconds;\n                    tc1 = tc.split(',');\n                    tc2 = tc1[0].split(':');\n                    seconds = Math.floor(tc2[0]*60*60) + Math.floor(tc2[1]*60) + Math.floor(tc2[2]);\n                    return seconds;\n                }\n            }\n\n            // If it's not video, or we're using textTracks, bail.\n            if (plyr.usingTextTracks || plyr.type !== 'video' || !plyr.supported.full) {\n                return;\n            }\n\n            // Reset subcount\n            plyr.subcount = 0;\n\n            // Check time is a number, if not use currentTime\n            // IE has a bug where currentTime doesn't go to 0\n            // https://twitter.com/Sam_Potts/status/573715746506731521\n            time = typeof time === 'number' ? time : plyr.media.currentTime;\n\n            // If there's no subs available, bail\n            if (!plyr.captions[plyr.subcount]) {\n                return;\n            }\n\n            while (_timecodeMax(plyr.captions[plyr.subcount][0]) < time.toFixed(1)) {\n                plyr.subcount++;\n                if (plyr.subcount > plyr.captions.length-1) {\n                    plyr.subcount = plyr.captions.length-1;\n                    break;\n                }\n            }\n\n            // Check if the next caption is in the current time range\n            if (plyr.media.currentTime.toFixed(1) >= _timecodeMin(plyr.captions[plyr.subcount][0]) &&\n                plyr.media.currentTime.toFixed(1) <= _timecodeMax(plyr.captions[plyr.subcount][0])) {\n                    plyr.currentCaption = plyr.captions[plyr.subcount][1];\n\n                // Render the caption\n                _setCaption(plyr.currentCaption);\n            }\n            else {\n                _setCaption();\n            }\n        }\n\n        // Display captions container and button (for initialization)\n        function _showCaptions() {\n            // If there's no caption toggle, bail\n            if (!plyr.buttons.captions) {\n                return;\n            }\n\n            _toggleClass(plyr.container, config.classes.captions.enabled, true);\n\n            if (config.captions.defaultActive) {\n                _toggleClass(plyr.container, config.classes.captions.active, true);\n                _toggleState(plyr.buttons.captions, true);\n            }\n        }\n\n        // Find all elements\n        function _getElements(selector) {\n            return plyr.container.querySelectorAll(selector);\n        }\n\n        // Find a single element\n        function _getElement(selector) {\n            return _getElements(selector)[0];\n        }\n\n        // Determine if we're in an iframe\n        function _inFrame() {\n            try {\n                return window.self !== window.top;\n            }\n            catch (e) {\n                return true;\n            }\n        }\n\n        // Trap focus inside container\n        function _focusTrap() {\n            var tabbables   = _getElements('input:not([disabled]), button:not([disabled])'),\n                first       = tabbables[0],\n                last        = tabbables[tabbables.length - 1];\n\n            function _checkFocus(event) {\n                // If it is TAB\n                if (event.which === 9 && plyr.isFullscreen) {\n                    // Move focus to first element that can be tabbed if Shift isn't used\n                    if (event.target === last && !event.shiftKey) {\n                        event.preventDefault();\n                        first.focus();\n                    }\n                    // Move focus to last element that can be tabbed if Shift is used\n                    else if (event.target === first && event.shiftKey) {\n                        event.preventDefault();\n                        last.focus();\n                    }\n                }\n            }\n\n            // Bind the handler\n            _on(plyr.container, 'keydown', _checkFocus);\n        }\n\n        // Add elements to HTML5 media (source, tracks, etc)\n        function _insertChildElements(type, attributes) {\n            if (typeof attributes === 'string') {\n               _insertElement(type, plyr.media, { src: attributes });\n            }\n            else if (attributes.constructor === Array) {\n                for (var i = attributes.length - 1; i >= 0; i--) {\n                    _insertElement(type, plyr.media, attributes[i]);\n                }\n            }\n        }\n\n        // Insert controls\n        function _injectControls() {\n            // Make a copy of the html\n            var html = config.html;\n\n            // Insert custom video controls\n            _log('Injecting custom controls');\n\n            // If no controls are specified, create default\n            if (!html) {\n                html = _buildControls();\n            }\n\n            // Replace seek time instances\n            html = _replaceAll(html, '{seektime}', config.seekTime);\n\n            // Replace all id references with random numbers\n            html = _replaceAll(html, '{id}', Math.floor(Math.random() * (10000)));\n\n            // Controls container\n            var container;\n\n            // Inject to custom location\n            if (config.selectors.controls.container !== null) {\n                container = config.selectors.controls.container;\n\n                if(typeof selector === 'string') {\n                    container = document.querySelector(container);\n                }\n            }\n\n            // Inject into the container by default\n            if (!(container instanceof HTMLElement)) {\n                container = plyr.container\n            }\n\n            // Inject controls HTML\n            container.insertAdjacentHTML('beforeend', html);\n\n            // Setup tooltips\n            if (config.tooltips.controls) {\n                var labels = _getElements(config.selectors.labels + ' .' + config.classes.hidden);\n\n                for (var i = labels.length - 1; i >= 0; i--) {\n                    var label = labels[i];\n\n                    _toggleClass(label, config.classes.hidden, false);\n                    _toggleClass(label, config.classes.tooltip, true);\n                }\n            }\n        }\n\n        // Find the UI controls and store references\n        function _findElements() {\n            try {\n                plyr.controls                 = _getElement(config.selectors.controls.wrapper);\n\n                // Buttons\n                plyr.buttons = {};\n                plyr.buttons.seek             = _getElement(config.selectors.buttons.seek);\n                plyr.buttons.play             = _getElement(config.selectors.buttons.play);\n                plyr.buttons.pause            = _getElement(config.selectors.buttons.pause);\n                plyr.buttons.restart          = _getElement(config.selectors.buttons.restart);\n                plyr.buttons.rewind           = _getElement(config.selectors.buttons.rewind);\n                plyr.buttons.forward          = _getElement(config.selectors.buttons.forward);\n                plyr.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\n                // Inputs\n                plyr.buttons.volume           = _getElement(config.selectors.buttons.volume);\n                plyr.buttons.mute             = _getElement(config.selectors.buttons.mute);\n                plyr.buttons.captions         = _getElement(config.selectors.buttons.captions);\n                plyr.checkboxes               = _getElements('[type=\"checkbox\"]');\n\n                // Progress\n                plyr.progress = {};\n                plyr.progress.container       = _getElement(config.selectors.progress.container);\n\n                // Progress - Buffering\n                plyr.progress.buffer          = {};\n                plyr.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n                plyr.progress.buffer.text     = plyr.progress.buffer.bar && plyr.progress.buffer.bar.getElementsByTagName('span')[0];\n\n                // Progress - Played\n                plyr.progress.played          = {};\n                plyr.progress.played.bar      = _getElement(config.selectors.progress.played);\n                plyr.progress.played.text     = plyr.progress.played.bar && plyr.progress.played.bar.getElementsByTagName('span')[0];\n\n                // Seek tooltip\n                plyr.progress.tooltip           = plyr.progress.container && plyr.progress.container.querySelector('.' + config.classes.tooltip);\n\n                // Volume\n                plyr.volume                   = _getElement(config.selectors.buttons.volume);\n\n                // Timing\n                plyr.duration                 = _getElement(config.selectors.duration);\n                plyr.currentTime              = _getElement(config.selectors.currentTime);\n                plyr.seekTime                 = _getElements(config.selectors.seekTime);\n\n                return true;\n            }\n            catch(e) {\n                _log('It looks like there is a problem with your controls html', true);\n\n                // Restore native video controls\n                _toggleControls(true);\n\n                return false;\n            }\n        }\n\n        // Toggle style hook\n        function _toggleStyleHook() {\n            _toggleClass(plyr.container, config.selectors.container.replace('.', ''), plyr.supported.full);\n        }\n\n        // Toggle native controls\n        function _toggleControls(toggle) {\n            if(toggle) {\n                plyr.media.setAttribute('controls', '');\n            }\n            else {\n                plyr.media.removeAttribute('controls');\n            }\n        }\n\n        // Setup aria attribute for play and iframe title\n        function _setTitle(iframe) {\n            // Find the current text\n            var label = config.i18n.play;\n\n            // If there's a media title set, use that for the label\n            if (typeof(config.title) !== 'undefined' && config.title.length) {\n                label += ', ' + config.title;\n            }\n\n            // If there's a play button, set label\n            if (plyr.supported.full && plyr.buttons.play) {\n                plyr.buttons.play.setAttribute('aria-label', label);\n            }\n\n            // Set iframe title\n            // https://github.com/Selz/plyr/issues/124\n            if (iframe instanceof HTMLElement) {\n                iframe.setAttribute('title', config.i18n.frameTitle.replace('{title}', config.title));\n            }\n        }\n\n        // Setup media\n        function _setupMedia() {\n            // If there's no media, bail\n            if (!plyr.media) {\n                _log('No audio or video element found', true);\n                return false;\n            }\n\n            if (plyr.supported.full) {\n                // Add type class\n                _toggleClass(plyr.container, config.classes.type.replace('{0}', plyr.type), true);\n\n                // If there's no autoplay attribute, assume the video is stopped and add state class\n                _toggleClass(plyr.container, config.classes.stopped, config.autoplay);\n\n                // Add iOS class\n                _toggleClass(plyr.container, config.classes.isIos, plyr.browser.ios);\n\n                // Add touch class\n                _toggleClass(plyr.container, config.classes.isTouch, plyr.browser.touch);\n\n                // Inject the player wrapper\n                if (plyr.type === 'video') {\n                    // Create the wrapper div\n                    var wrapper = document.createElement('div');\n                    wrapper.setAttribute('class', config.classes.videoWrapper);\n\n                    // Wrap the video in a container\n                    _wrap(plyr.media, wrapper);\n\n                    // Cache the container\n                    plyr.videoContainer = wrapper;\n                }\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                _setupEmbed();\n\n                // Clean up\n                plyr.embedId = null;\n            }\n        }\n\n        // Setup YouTube/Vimeo\n        function _setupEmbed() {\n            var container = document.createElement('div'),\n                videoId = plyr.embedId,\n                id = plyr.type + '-' + Math.floor(Math.random() * (10000));\n\n            // Remove old containers\n            var containers = _getElements('[id^=\"' + plyr.type + '-\"]');\n            for (var i = containers.length - 1; i >= 0; i--) {\n                _remove(containers[i]);\n            }\n\n            // Add embed class for responsive\n            _toggleClass(plyr.media, config.classes.videoWrapper, true);\n            _toggleClass(plyr.media, config.classes.embedWrapper, true);\n\n            // YouTube\n            if (plyr.type === 'youtube') {\n                // Create the YouTube container\n                plyr.media.appendChild(container);\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Setup API\n                if (typeof YT === 'object') {\n                    _youTubeReady(videoId, container);\n                }\n                else {\n                    // Load the API\n                    _injectScript(config.urls.youtube.api);\n\n                    // Setup callback for the API\n                    window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n                    // Add to queue\n                    window.onYouTubeReadyCallbacks.push(function() { _youTubeReady(videoId, container) });\n\n                    // Set callback to process queue\n                    window.onYouTubeIframeAPIReady = function () {\n                        window.onYouTubeReadyCallbacks.forEach(function(callback) { callback(); });\n                    };\n                }\n            }\n            // Vimeo\n            else if (plyr.type === 'vimeo') {\n                // Inject the iframe\n                var iframe = document.createElement('iframe');\n\n                // Watch for iframe load\n                iframe.loaded = false;\n                _on(iframe, 'load', function() { iframe.loaded = true; });\n\n                _setAttributes(iframe, {\n                    'src':                      'https://player.vimeo.com/video/' + videoId + '?player_id=' + id + '&api=1&badge=0&byline=0&portrait=0&title=0',\n                    'id':                       id,\n                    'webkitallowfullscreen':    '',\n                    'mozallowfullscreen':       '',\n                    'allowfullscreen':          '',\n                    'frameborder':              0\n                });\n\n                // If full support, we can use custom controls (hiding Vimeos), if not, use Vimeo\n                if(plyr.supported.full) {\n                    container.appendChild(iframe);\n                    plyr.media.appendChild(container);\n                }\n                else {\n                    plyr.media.appendChild(iframe);\n                }\n\n                // Load the API\n                if (!('$f' in window)) {\n                    _injectScript(config.urls.vimeo.api);\n                }\n\n                // Wait for fragaloop load\n                var timer = window.setInterval(function() {\n                    if ('$f' in window && iframe.loaded) {\n                        window.clearInterval(timer);\n                        _vimeoReady.call(iframe);\n                    }\n                }, 50);\n            }\n        }\n\n        // When embeds are ready\n        function _embedReady() {\n            // Set title\n            _setTitle(_getElement('iframe'));\n\n            // Store reference to API\n            plyr.container.plyr.embed = plyr.embed;\n\n            // Setup the UI\n            _setupInterface();\n        }\n\n        // Handle YouTube API ready\n        function _youTubeReady(videoId, container) {\n            // Setup timers object\n            // We have to poll YouTube for updates\n            if (!('timer' in plyr)) {\n                plyr.timer = {};\n            }\n\n            // Setup instance\n            // https://developers.google.com/youtube/iframe_api_reference\n            plyr.embed = new YT.Player(container.id, {\n                videoId: videoId,\n                playerVars: {\n                    autoplay: (config.autoplay ? 1 : 0),\n                    controls: (plyr.supported.full ? 0 : 1),\n                    rel: 0,\n                    showinfo: 0,\n                    iv_load_policy: 3,\n                    cc_load_policy: (config.captions.defaultActive ? 1 : 0),\n                    cc_lang_pref: 'en',\n                    wmode: 'transparent',\n                    modestbranding: 1,\n                    disablekb: 1,\n                    origin: '*' // https://code.google.com/p/gdata-issues/issues/detail?id=5788#c45\n                },\n                events: {\n                    'onReady': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Create a faux HTML5 API using the YouTube API\n                        plyr.media.play = function() {\n                            instance.playVideo();\n                            plyr.media.paused = false;\n                        };\n                        plyr.media.pause = function() {\n                            instance.pauseVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.stop = function() {\n                            instance.stopVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.duration = instance.getDuration();\n                        plyr.media.paused = true;\n                        plyr.media.currentTime = instance.getCurrentTime();\n                        plyr.media.muted = instance.isMuted();\n\n                        // Set title\n                        config.title = instance.getVideoData().title;\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'timeupdate');\n\n                        // Reset timer\n                        window.clearInterval(plyr.timer.buffering);\n\n                        // Setup buffering\n                        plyr.timer.buffering = window.setInterval(function() {\n                            // Get loaded % from YouTube\n                            plyr.media.buffered = instance.getVideoLoadedFraction();\n\n                            // Trigger progress\n                            _triggerEvent(plyr.media, 'progress');\n\n                            // Bail if we're at 100%\n                            if (plyr.media.buffered === 1) {\n                                window.clearInterval(plyr.timer.buffering);\n\n                                // Trigger event\n                                _triggerEvent(plyr.media, 'canplaythrough');\n                            }\n                        }, 200);\n\n                        // Update UI\n                        _embedReady();\n\n                        // Display duration if available\n                        _displayDuration();\n                    },\n                    'onStateChange': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Reset timer\n                        window.clearInterval(plyr.timer.playing);\n\n                        // Handle events\n                        // -1   Unstarted\n                        // 0    Ended\n                        // 1    Playing\n                        // 2    Paused\n                        // 3    Buffering\n                        // 5    Video cued\n                        switch (event.data) {\n                            case 0:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'ended');\n                                break;\n\n                            case 1:\n                                plyr.media.paused = false;\n                                plyr.media.seeking = false;\n                                _triggerEvent(plyr.media, 'play');\n                                _triggerEvent(plyr.media, 'playing');\n\n                                // Poll to get playback progress\n                                plyr.timer.playing = window.setInterval(function() {\n                                    // Set the current time\n                                    plyr.media.currentTime = instance.getCurrentTime();\n\n                                    // Trigger timeupdate\n                                    _triggerEvent(plyr.media, 'timeupdate');\n                                }, 100);\n\n                                break;\n\n                            case 2:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'pause');\n                                break;\n                        }\n                    }\n                }\n            });\n        }\n\n        // Vimeo ready\n        function _vimeoReady() {\n            /* jshint validthis: true */\n            plyr.embed = $f(this);\n\n            // Setup on ready\n            plyr.embed.addEvent('ready', function() {\n\n                // Create a faux HTML5 API using the Vimeo API\n                plyr.media.play = function() {\n                    plyr.embed.api('play');\n                    plyr.media.paused = false;\n                };\n                plyr.media.pause = function() {\n                    plyr.embed.api('pause');\n                    plyr.media.paused = true;\n                };\n                plyr.media.stop = function() {\n                    plyr.embed.api('stop');\n                    plyr.media.paused = true;\n                };\n                plyr.media.paused = true;\n                plyr.media.currentTime = 0;\n\n                // Update UI\n                _embedReady();\n\n                plyr.embed.api('getCurrentTime', function (value) {\n                    plyr.media.currentTime = value;\n\n                    // Trigger timeupdate\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.api('getDuration', function(value) {\n                    plyr.media.duration = value;\n\n                    // Display duration if available\n                    _displayDuration();\n                });\n\n                plyr.embed.addEvent('play', function() {\n                    plyr.media.paused = false;\n                    _triggerEvent(plyr.media, 'play');\n                    _triggerEvent(plyr.media, 'playing');\n                });\n\n                plyr.embed.addEvent('pause', function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'pause');\n                });\n\n                plyr.embed.addEvent('playProgress', function(data) {\n                    plyr.media.seeking = false;\n                    plyr.media.currentTime = data.seconds;\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.addEvent('loadProgress', function(data) {\n                    plyr.media.buffered = data.percent;\n                    _triggerEvent(plyr.media, 'progress');\n\n                    if(parseInt(data.percent) === 1) {\n                        // Trigger event\n                        _triggerEvent(plyr.media, 'canplaythrough');\n                    }\n                });\n\n                plyr.embed.addEvent('finish', function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'ended');\n                });\n\n                // Always seek to 0\n                // plyr.embed.api('seekTo', 0);\n\n                // Autoplay\n                if (config.autoplay) {\n                    plyr.embed.api('play');\n                }\n            });\n        }\n\n        // Play media\n        function _play() {\n            if('play' in plyr.media) {\n                plyr.media.play();\n            }\n        }\n\n        // Pause media\n        function _pause() {\n            if('pause' in plyr.media) {\n                plyr.media.pause();\n            }\n        }\n\n        // Toggle playback\n        function _togglePlay(toggle) {\n            // Play\n            if (toggle === true) {\n                _play();\n            }\n            // Pause\n            else if (toggle === false) {\n                _pause();\n            }\n            // True toggle\n            else {\n                plyr.media[plyr.media.paused ? 'play' : 'pause']();\n            }\n        }\n\n        // Rewind\n        function _rewind(seekTime) {\n            // Use default if needed\n            if (typeof seekTime !== 'number') {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime - seekTime);\n        }\n\n        // Fast forward\n        function _forward(seekTime) {\n            // Use default if needed\n            if (typeof seekTime !== 'number') {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime + seekTime);\n        }\n\n        // Seek to time\n        // The input parameter can be an event or a number\n        function _seek(input) {\n            var targetTime = 0,\n                paused = plyr.media.paused,\n                duration = _getDuration();\n\n            // Explicit position\n            if (typeof input === 'number') {\n                targetTime = input;\n            }\n            // Event\n            else if (typeof input === 'object' && (input.type === 'input' || input.type === 'change')) {\n                // It's the seek slider\n                // Seek to the selected time\n                targetTime = ((input.target.value / input.target.max) * duration);\n            }\n\n            // Normalise targetTime\n            if (targetTime < 0) {\n                targetTime = 0;\n            }\n            else if (targetTime > duration) {\n                targetTime = duration;\n            }\n\n            // Set the current time\n            // Try/catch incase the media isn't set and we're calling seek() from source() and IE moans\n            try {\n                plyr.media.currentTime = targetTime.toFixed(1);\n            }\n            catch(e) {}\n\n            // Embeds\n            if(_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.seekTo(targetTime);\n                        break;\n\n                    case 'vimeo':\n                        // Round to nearest second for vimeo\n                        plyr.embed.api('seekTo', targetTime.toFixed(0));\n                        break;\n                }\n\n                if (paused) {\n                    _pause();\n                }\n\n                // Trigger timeupdate for embeds\n                _triggerEvent(plyr.media, 'timeupdate');\n\n                // Set seeking flag\n                plyr.media.seeking = true;\n            }\n\n            // Logging\n            _log('Seeking to ' + plyr.media.currentTime + ' seconds');\n\n            // Special handling for 'manual' captions\n            _seekManualCaptions(targetTime);\n        }\n\n        // Get the duration (or custom if set)\n        function _getDuration() {\n            // It should be a number, but parse it just incase\n            var duration = parseInt(config.duration);\n\n            // If custom duration is funky, use regular duration\n            return (isNaN(duration) ? plyr.media.duration : duration);\n        }\n\n        // Check playing state\n        function _checkPlaying() {\n            _toggleClass(plyr.container, config.classes.playing, !plyr.media.paused);\n            _toggleClass(plyr.container, config.classes.stopped, plyr.media.paused);\n        }\n\n        // Toggle fullscreen\n        function _toggleFullscreen(event) {\n            // Check for native support\n            var nativeSupport = fullscreen.supportsFullScreen;\n\n            // If it's a fullscreen change event, it's probably a native close\n            if (event && event.type === fullscreen.fullScreenEventName) {\n                plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n            }\n            // If there's native support, use it\n            else if (nativeSupport) {\n                // Request fullscreen\n                if (!fullscreen.isFullScreen(plyr.container)) {\n                    fullscreen.requestFullScreen(plyr.container);\n                }\n                // Bail from fullscreen\n                else {\n                    fullscreen.cancelFullScreen();\n                }\n\n                // Check if we're actually full screen (it could fail)\n                plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n            }\n            else {\n                // Otherwise, it's a simple toggle\n                plyr.isFullscreen = !plyr.isFullscreen;\n\n                // Bind/unbind escape key\n                if (plyr.isFullscreen) {\n                    _on(document, 'keyup', _handleEscapeFullscreen);\n                    document.body.style.overflow = 'hidden';\n                }\n                else {\n                    _off(document, 'keyup', _handleEscapeFullscreen);\n                    document.body.style.overflow = '';\n                }\n            }\n\n            // Set class hook\n            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\n            // Trap focus\n            if(plyr.isFullscreen) {\n                plyr.container.setAttribute('tabindex', '-1');\n            }\n            else {\n                plyr.container.removeAttribute('tabindex');\n            }\n\n            // Trap focus\n            _focusTrap(plyr.isFullscreen);\n\n            // Set button state\n            _toggleState(plyr.buttons.fullscreen, plyr.isFullscreen);\n\n            // Hide on entering full screen\n            if (config.fullscreen.hideControls) {\n                //_toggleClass(plyr.controls, config.classes.hover, false);\n                _showControls(true);\n            }\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.isFullscreen ? 'enterfullscreen' : 'exitfullscreen');\n        }\n\n        // Bail from faux-fullscreen\n        function _handleEscapeFullscreen(event) {\n            // If it's a keypress and not escape, bail\n            if ((event.which || event.charCode || event.keyCode) === 27 && plyr.isFullscreen) {\n                _toggleFullscreen();\n            }\n        }\n\n        // Mute\n        function _toggleMute(muted) {\n            // If the method is called without parameter, toggle based on current value\n            if (typeof muted !== 'boolean') {\n                muted = !plyr.media.muted;\n            }\n\n            // Set button state\n            _toggleState(plyr.buttons.mute, muted);\n\n            // Set mute on the player\n            plyr.media.muted = muted;\n\n            // Embeds\n            if(_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed[plyr.media.muted ? 'mute' : 'unMute']();\n                        break;\n\n                    case 'vimeo':\n                        plyr.embed.api('setVolume', plyr.media.muted ? 0 : parseFloat(config.volume / 10));\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n        }\n\n        // Set volume\n        function _setVolume(volume) {\n            // Use default if no value specified\n            if (typeof volume === 'undefined') {\n                volume = config.volume;\n\n                if (config.storage.enabled && _storage().supported) {\n                    volume = window.localStorage.getItem(config.storage.key);\n\n                    // Clean up old volume\n                    // https://github.com/Selz/plyr/issues/171\n                    window.localStorage.removeItem('plyr-volume');\n                }\n            }\n\n            // Use config if all else fails\n            if(volume === null || isNaN(volume)) {\n                volume = config.volume;\n            }\n\n            // Maximum is 10\n            if (volume > 10) {\n                volume = 10;\n            }\n            // Minimum is 0\n            if (volume < 0) {\n                volume = 0;\n            }\n\n            // Set the player volume\n            plyr.media.volume = parseFloat(volume / 10);\n\n            // Store in config\n            config.volume = volume;\n\n            // Embeds\n            if(_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.setVolume(plyr.media.volume * 100);\n                        break;\n\n                    case 'vimeo':\n                        plyr.embed.api('setVolume', plyr.media.volume);\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n\n            // Toggle muted state\n            if (plyr.media.muted && volume > 0) {\n                _toggleMute();\n            }\n        }\n\n        // Update volume UI and storage\n        function _updateVolume() {\n            // Get the current volume\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * 10);\n\n            // Update the <input type=\"range\"> if present\n            if (plyr.supported.full && plyr.volume) {\n                plyr.volume.value = volume;\n            }\n\n            // Store the volume in storage\n            if (config.storage.enabled && _storage().supported && !isNaN(volume)) {\n                window.localStorage.setItem(config.storage.key, volume);\n            }\n\n            // Toggle class if muted\n            _toggleClass(plyr.container, config.classes.muted, (volume === 0));\n\n            // Update checkbox for mute state\n            if (plyr.supported.full && plyr.buttons.mute) {\n                _toggleState(plyr.buttons.mute, (volume === 0));\n            }\n        }\n\n        // Toggle captions\n        function _toggleCaptions(show) {\n            // If there's no full support, or there's no caption toggle\n            if (!plyr.supported.full || !plyr.buttons.captions) {\n                return;\n            }\n\n            // If the method is called without parameter, toggle based on current value\n            if (typeof show !== 'boolean') {\n                show = (plyr.container.className.indexOf(config.classes.captions.active) === -1);\n            }\n\n            // Set global\n            plyr.captionsEnabled = show;\n\n            // Toggle state\n            _toggleState(plyr.buttons.captions, plyr.captionsEnabled);\n\n            // Add class hook\n            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.captionsEnabled ? 'captionsenabled' : 'captionsdisabled');\n        }\n\n        // Check if media is loading\n        function _checkLoading(event) {\n            var loading = (event.type === 'waiting');\n\n            // Clear timer\n            clearTimeout(plyr.timers.loading);\n\n            // Timer to prevent flicker when seeking\n            plyr.timers.loading = setTimeout(function() {\n                _toggleClass(plyr.container, config.classes.loading, loading);\n            }, (loading ? 250 : 0));\n        }\n\n        // Update <progress> elements\n        function _updateProgress(event) {\n            var progress    = plyr.progress.played.bar,\n                text        = plyr.progress.played.text,\n                value       = 0,\n                duration    = _getDuration();\n\n            if (event) {\n                switch (event.type) {\n                    // Video playing\n                    case 'timeupdate':\n                    case 'seeking':\n                        value = _getPercentage(plyr.media.currentTime, duration);\n\n                        // Set seek range value only if it's a 'natural' time event\n                        if (event.type == 'timeupdate' && plyr.buttons.seek) {\n                            plyr.buttons.seek.value = value;\n                        }\n\n                        break;\n\n                    // Events from seek range\n                    case 'change':\n                    case 'input':\n                        value = event.target.value;\n                        break;\n\n\n                    // Check buffer status\n                    case 'playing':\n                    case 'progress':\n                        progress    = plyr.progress.buffer.bar;\n                        text        = plyr.progress.buffer.text;\n                        value       = (function() {\n                                        var buffered = plyr.media.buffered;\n\n                                        // HTML5\n                                        if (buffered && buffered.length) {\n                                            return _getPercentage(buffered.end(0), duration);\n                                        }\n                                        // YouTube returns between 0 and 1\n                                        else if (typeof buffered === 'number') {\n                                            return (buffered * 100);\n                                        }\n\n                                        return 0;\n                                    })();\n                }\n            }\n\n            // Set values\n            if (progress) {\n                progress.value = value;\n            }\n            if (text) {\n                text.innerHTML = value;\n            }\n        }\n\n        // Update the displayed time\n        function _updateTimeDisplay(time, element) {\n            // Bail if there's no duration display\n            if (!element) {\n                return;\n            }\n\n            // Fallback to 0\n            if (isNaN(time)) {\n                time = 0;\n            }\n\n            plyr.secs = parseInt(time % 60);\n            plyr.mins = parseInt((time / 60) % 60);\n            plyr.hours = parseInt(((time / 60) / 60) % 60);\n\n            // Do we need to display hours?\n            var displayHours = (parseInt(((_getDuration() / 60) / 60) % 60) > 0);\n\n            // Ensure it's two digits. For example, 03 rather than 3.\n            plyr.secs = ('0' + plyr.secs).slice(-2);\n            plyr.mins = ('0' + plyr.mins).slice(-2);\n\n            // Render\n            element.innerHTML = (displayHours ? plyr.hours + ':' : '') + plyr.mins + ':' + plyr.secs;\n        }\n\n        // Show the duration on metadataloaded\n        function _displayDuration() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Determine duration\n            var duration = _getDuration() || 0;\n\n            // If there's only one time display, display duration there\n            if (!plyr.duration && config.displayDuration && plyr.media.paused) {\n                _updateTimeDisplay(duration, plyr.currentTime);\n            }\n\n            // If there's a duration element, update content\n            if (plyr.duration) {\n                _updateTimeDisplay(duration, plyr.duration);\n            }\n\n            // Update the tooltip (if visible)\n            _updateSeekTooltip();\n        }\n\n        // Handle time change event\n        function _timeUpdate(event) {\n            // Duration\n            _updateTimeDisplay(plyr.media.currentTime, plyr.currentTime);\n\n            // Ignore updates while seeking\n            if(event && event.type == 'timeupdate' && plyr.media.seeking) {\n                return;\n            }\n\n            // Playing progress\n            _updateProgress(event);\n        }\n\n        // Update hover tooltip for seeking\n        function _updateSeekTooltip(event) {\n            // Bail if setting not true\n            if (!config.tooltips.seek || plyr.browser.touch) {\n                return;\n            }\n\n            // Calculate percentage\n            var clientRect  = plyr.progress.container.getBoundingClientRect(),\n                percent     = 0,\n                visible     = config.classes.tooltip + '--visible';\n\n            // Determine percentage, if already visible\n            if (!event) {\n                if(_hasClass(plyr.progress.tooltip, visible)) {\n                    percent = plyr.progress.tooltip.style.left.replace('%', '');\n                }\n                else {\n                    return;\n                }\n            }\n            else {\n                percent = ((100 / clientRect.width) * (event.pageX - clientRect.left));\n            }\n\n            // Set bounds\n            if (percent < 0) {\n                percent = 0;\n            }\n            else if (percent > 100) {\n                percent = 100;\n            }\n\n            // Display the time a click would seek to\n            _updateTimeDisplay(((_getDuration() / 100) * percent), plyr.progress.tooltip);\n\n            // Set position\n            plyr.progress.tooltip.style.left = percent + \"%\";\n\n            // Show/hide the tooltip\n            // If the event is a moues in/out and percentage is inside bounds\n            if(event && _inArray(['mouseenter', 'mouseleave'], event.type)) {\n                _toggleClass(plyr.progress.tooltip, visible, (event.type === 'mouseenter'));\n            }\n        }\n\n        // Show the player controls in fullscreen mode\n        function _showControls(force) {\n            // We're only worried about fullscreen\n            if (!plyr.isFullscreen) {\n                return;\n            }\n\n            // Set shown class\n            _toggleClass(plyr.container, config.classes.hover, true);\n\n            // Clear timer every movement\n            window.clearTimeout(plyr.timers.hover);\n\n            // If the mouse is not over the controls, set a timeout to hide them\n            plyr.timers.hover = window.setTimeout(function() {\n                if (!plyr.controls.mouseover || (force === true)) {\n                    _toggleClass(plyr.container, config.classes.hover, false);\n                }\n            }, 2000);\n        }\n\n        // Add common function to retrieve media source\n        function _source(source) {\n            // If not null or undefined, parse it\n            if(typeof source !== 'undefined') {\n                _updateSource(source);\n                return;\n            }\n\n            // Return the current source\n            var url;\n            switch(plyr.type) {\n                case 'youtube':\n                    url = plyr.embed.getVideoUrl();\n                    break;\n\n                case 'vimeo':\n                    plyr.embed.api('getVideoUrl', function (value) {\n                        url = value;\n                    });\n                    break;\n\n                default:\n                    url = plyr.media.currentSrc;\n                    break;\n            }\n\n            return url || '';\n        }\n\n        // Update source\n        // Sources are not checked for support so be careful\n        function _updateSource(source) {\n            if (typeof source === 'undefined' || !('sources' in source) || !source.sources.length) {\n                _log('Invalid source format', true);\n                return;\n            }\n\n            // Pause playback\n            _pause();\n\n            // Clean up YouTube stuff\n            if (plyr.type === 'youtube') {\n                // Destroy the embed instance\n                plyr.embed.destroy();\n\n                // Clear timer\n                window.clearInterval(plyr.timer.buffering);\n                window.clearInterval(plyr.timer.playing);\n            }\n            else if (plyr.type === 'video' && plyr.videoContainer) {\n                // Remove video wrapper\n                _remove(plyr.videoContainer);\n            }\n\n            // Remove embed object\n            plyr.embed = null;\n\n            // Cancel current network requests\n            _cancelRequests();\n\n            // Remove the old media\n            _remove(plyr.media);\n\n            // Set the type\n            if ('type' in source) {\n                plyr.type = source.type;\n\n                // Get child type for video (it might be an embed)\n                if(plyr.type === 'video') {\n                    var firstSource = source.sources[0];\n\n                    if('type' in firstSource && _inArray(config.types.embed, firstSource.type)) {\n                        plyr.type = firstSource.type;\n                    }\n                }\n            }\n\n            // Check for support\n            plyr.supported = api.supported(plyr.type);\n\n            // Create new markup\n            switch(plyr.type) {\n                case 'video':\n                    plyr.media = document.createElement('video');\n                    break;\n\n                case 'audio':\n                    plyr.media = document.createElement('audio');\n                    break;\n\n                case 'youtube':\n                case 'vimeo':\n                    plyr.media = document.createElement('div');\n                    plyr.embedId = source.sources[0].src;\n                    break;\n            }\n\n            // Inject the new element\n            _prependChild(plyr.container, plyr.media);\n\n            // Autoplay the new source?\n            if (typeof source.autoplay !== 'undefined') {\n                config.autoplay = source.autoplay;\n            }\n\n            // Set attributes for audio video\n            if (_inArray(config.types.html5, plyr.type)) {\n                if (config.crossorigin) {\n                    plyr.media.setAttribute('crossorigin', '');\n                }\n                if (config.autoplay) {\n                    plyr.media.setAttribute('autoplay', '');\n                }\n                if ('poster' in source) {\n                    plyr.media.setAttribute('poster', source.poster);\n                }\n                if (config.loop) {\n                    plyr.media.setAttribute('loop', '');\n                }\n            }\n\n            // Classname reset\n            plyr.container.className = plyr.originalClassName;\n\n            // Restore class hooks\n            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n            _toggleStyleHook();\n\n            // Set new sources for html5\n            if (_inArray(config.types.html5, plyr.type)) {\n                _insertChildElements('source', source.sources);\n            }\n\n            // Set up from scratch\n            _setupMedia();\n\n            // HTML5 stuff\n            if (_inArray(config.types.html5, plyr.type)) {\n                // Setup captions\n                if ('tracks' in source) {\n                    _insertChildElements('track', source.tracks);\n                }\n\n                // Load HTML5 sources\n                plyr.media.load();\n\n                // Setup interface\n                _setupInterface();\n\n                // Display duration if available\n                _displayDuration();\n            }\n\n            // Set aria title and iframe title\n            config.title = source.title;\n            _setTitle();\n\n            // Reset media objects\n            plyr.container.plyr.media = plyr.media;\n        }\n\n        // Update poster\n        function _updatePoster(source) {\n            if (plyr.type === 'video') {\n                plyr.media.setAttribute('poster', source);\n            }\n        }\n\n        // Listen for control events\n        function _controlListeners() {\n            // IE doesn't support input event, so we fallback to change\n            var inputEvent = (plyr.browser.name == 'IE' ? 'change' : 'input');\n\n            // Click play/pause helper\n            function _togglePlay() {\n                var play = plyr.media.paused;\n\n                // Toggle playback\n                if (play) {\n                    _play();\n                }\n                else {\n                    _pause();\n                }\n\n                // Determine which buttons\n                var trigger = plyr.buttons[play ? 'play' : 'pause'],\n                    target = plyr.buttons[play ? 'pause' : 'play'];\n\n                // Setup focus and tab focus\n                if(target) {\n                    var hadTabFocus = _hasClass(trigger, config.classes.tabFocus);\n\n                    setTimeout(function() {\n                        target.focus();\n\n                        if(hadTabFocus) {\n                            _toggleClass(trigger, config.classes.tabFocus, false);\n                            _toggleClass(target, config.classes.tabFocus, true);\n                        }\n                    }, 100);\n                }\n            }\n\n            // Detect tab focus\n            function checkFocus() {\n                var focused = document.activeElement;\n                if (!focused || focused == document.body) {\n                    focused = null;\n                }\n                else if (document.querySelector) {\n                    focused = document.querySelector(':focus');\n                }\n                for (var button in plyr.buttons) {\n                    var element = plyr.buttons[button];\n\n                    _toggleClass(element, config.classes.tabFocus, (element === focused));\n                }\n            }\n            _on(window, 'keyup', function(event) {\n                var code = (event.keyCode ? event.keyCode : event.which);\n\n                if (code == 9) {\n                    checkFocus();\n                }\n            });\n            _on(document.body, 'click', function() {\n                _toggleClass(_getElement('.' + config.classes.tabFocus), config.classes.tabFocus, false);\n            });\n            for (var button in plyr.buttons) {\n                var element = plyr.buttons[button];\n\n                _on(element, 'blur', function() {\n                    _toggleClass(element, 'tab-focus', false);\n                });\n            }\n\n            // Play\n            _proxyListener(plyr.buttons.play, 'click', config.listeners.play, _togglePlay);\n\n            // Pause\n            _proxyListener(plyr.buttons.pause, 'click', config.listeners.pause, _togglePlay);\n\n            // Restart\n            _proxyListener(plyr.buttons.restart, 'click', config.listeners.restart, _seek);\n\n            // Rewind\n            _proxyListener(plyr.buttons.rewind, 'click', config.listeners.rewind, _rewind);\n\n            // Fast forward\n            _proxyListener(plyr.buttons.forward, 'click', config.listeners.forward, _forward);\n\n            // Seek\n            _proxyListener(plyr.buttons.seek, inputEvent, config.listeners.seek, _seek);\n\n            // Set volume\n            _proxyListener(plyr.volume, inputEvent, config.listeners.volume, function() {\n                _setVolume(plyr.volume.value);\n            });\n\n            // Mute\n            _proxyListener(plyr.buttons.mute, 'click', config.listeners.mute, _toggleMute);\n\n            // Fullscreen\n            _proxyListener(plyr.buttons.fullscreen, 'click', config.listeners.fullscreen, _toggleFullscreen);\n\n            // Handle user exiting fullscreen by escaping etc\n            if (fullscreen.supportsFullScreen) {\n                _on(document, fullscreen.fullScreenEventName, _toggleFullscreen);\n            }\n\n            // Captions\n            _on(plyr.buttons.captions, 'click', _toggleCaptions);\n\n            // Seek tooltip\n            _on(plyr.progress.container, 'mouseenter mouseleave mousemove', _updateSeekTooltip);\n\n            // Toggle controls visibility based on mouse movement and location\n            var hoverTimer, isMouseOver = false;\n\n            if (config.fullscreen.hideControls) {\n                // Keep an eye on the mouse location in relation to controls\n                _on(plyr.controls, 'mouseenter mouseleave', function(event) {\n                    plyr.controls.mouseover = (event.type === 'mouseenter');\n                });\n            }\n        }\n\n        // Listen for media events\n        function _mediaListeners() {\n            // Time change on media\n            _on(plyr.media, 'timeupdate seeking', _timeUpdate);\n\n            // Update manual captions\n            _on(plyr.media, 'timeupdate', _seekManualCaptions);\n\n            // Display duration\n            _on(plyr.media, 'durationchange loadedmetadata', _displayDuration);\n\n            // Handle the media finishing\n            _on(plyr.media, 'ended', function() {\n                // Clear\n                if (plyr.type === 'video') {\n                    _setCaption();\n                }\n\n                // Reset UI\n                _checkPlaying();\n            });\n\n            // Check for buffer progress\n            _on(plyr.media, 'progress playing', _updateProgress);\n\n            // Handle native mute\n            _on(plyr.media, 'volumechange', _updateVolume);\n\n            // Handle native play/pause\n            _on(plyr.media, 'play pause', _checkPlaying);\n\n            // Loading\n            _on(plyr.media, 'waiting canplay seeked', _checkLoading);\n\n            // Click video\n            if (config.click) {\n                _on(plyr.media, 'click', function() {\n                    if (plyr.media.paused) {\n                        _play();\n                    }\n                    else if (plyr.media.ended) {\n                        _seek();\n                        _play();\n                    }\n                    else {\n                        _pause();\n                    }\n                });\n            }\n\n            // Listen for mouse move to show controls\n            if (config.fullscreen.hideControls) {\n                // Show the controls on mouse move\n                _on(plyr.media, 'mousemove', _showControls);\n            }\n\n            // Proxy events to container\n            _on(plyr.media, config.events.join(' '), function(event) {\n                _triggerEvent(plyr.container, event.type);\n            });\n        }\n\n        // Cancel current network requests\n        // See https://github.com/Selz/plyr/issues/174\n        function _cancelRequests() {\n            if(!_inArray(config.types.html5, plyr.type)) {\n                return;\n            }\n\n            // Set empty src attribute\n            plyr.media.setAttribute('src', '');\n\n            // Remove child sources\n            var sources = plyr.media.querySelectorAll('source');\n            for (var i = 0; i < sources.length; i++) {\n                _remove(sources[i]);\n            }\n\n            // Load the new empty source\n            // This will cancel existing requests\n            // See https://github.com/Selz/plyr/issues/174\n            plyr.media.load();\n\n            // Debugging\n            _log(\"Cancelled network requests for old media\");\n        }\n\n        // Destroy an instance\n        // Event listeners are removed when elements are removed\n        // http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n        function _destroy() {\n            // Bail if the element is not initialized\n            if (!plyr.init) {\n                return null;\n            }\n\n            // Reset container classname\n            plyr.container.setAttribute('class', _getClassname(config.selectors.container));\n\n            // Remove init flag\n            plyr.init = false;\n\n            // Remove controls\n            _remove(_getElement(config.selectors.controls.wrapper));\n\n            // YouTube\n            if (plyr.type === 'youtube') {\n                plyr.embed.destroy();\n                return;\n            }\n\n            // If video, we need to remove some more\n            if (plyr.type === 'video') {\n                // Remove captions container\n                _remove(_getElement(config.selectors.captions));\n\n                // Remove video wrapper\n                _unwrap(plyr.videoContainer);\n            }\n\n            // Restore native video controls\n            _toggleControls(true);\n\n            // Clone the media element to remove listeners\n            // http://stackoverflow.com/questions/19469881/javascript-remove-all-event-listeners-of-specific-type\n            var clone = plyr.media.cloneNode(true);\n            plyr.media.parentNode.replaceChild(clone, plyr.media);\n        }\n\n        // Setup a player\n        function _init() {\n            // Bail if the element is initialized\n            if (plyr.init) {\n                return null;\n            }\n\n            // Setup the fullscreen api\n            fullscreen = _fullscreen();\n\n            // Sniff out the browser\n            plyr.browser = _browserSniff();\n\n            // Get the media element\n            plyr.media = plyr.container.querySelectorAll('audio, video, div')[0];\n\n            // Get original classname\n            plyr.originalClassName = plyr.container.className;\n\n            // Set media type based on tag or data attribute\n            // Supported: video, audio, vimeo, youtube\n            var tagName = plyr.media.tagName.toLowerCase();\n            if (tagName === 'div') {\n                plyr.type     = plyr.media.getAttribute('data-type');\n                plyr.embedId  = plyr.media.getAttribute('data-video-id');\n\n                // Clean up\n                plyr.media.removeAttribute('data-type');\n                plyr.media.removeAttribute('data-video-id');\n            }\n            else {\n                plyr.type           = tagName;\n                config.crossorigin  = (plyr.media.getAttribute('crossorigin') !== null);\n                config.autoplay     = (config.autoplay || (plyr.media.getAttribute('autoplay') !== null));\n                config.loop         = (config.loop || (plyr.media.getAttribute('loop') !== null));\n            }\n\n            // Check for support\n            plyr.supported = api.supported(plyr.type);\n\n            // Add style hook\n            _toggleStyleHook();\n\n            // If no native support, bail\n            if (!plyr.supported.basic) {\n                return false;\n            }\n\n            // Debug info\n            _log(plyr.browser.name + ' ' + plyr.browser.version);\n\n            // Setup media\n            _setupMedia();\n\n            // Setup interface\n            if (_inArray(config.types.html5, plyr.type)) {\n                // Bail if no support\n                if (!plyr.supported.full) {\n                    // Successful setup\n                    plyr.init = true;\n\n                    // Don't inject controls if no full support\n                    return;\n                }\n\n                // Setup UI\n                _setupInterface();\n\n                // Set title on button and frame\n                _setTitle();\n\n                // Autoplay\n                if (config.autoplay) {\n                    _play();\n                }\n            }\n\n            // Successful setup\n            plyr.init = true;\n        }\n\n        function _setupInterface() {\n            // Don't setup interface if no support\n            if (!plyr.supported.full) {\n                _log('No full support for this media type (' + plyr.type + ')', true);\n\n                // Remove controls\n                _remove(_getElement(config.selectors.controls.wrapper));\n\n                // Restore native controls\n                _toggleControls(true);\n\n                // Bail\n                return;\n            }\n\n            // Inject custom controls if not present\n            var controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n            if (controlsMissing) {\n                // Inject custom controls\n                _injectControls();\n            }\n\n            // Find the elements\n            if (!_findElements()) {\n                return;\n            }\n\n            // If the controls are injected, re-bind listeners for controls\n            if (controlsMissing) {\n                _controlListeners();\n            }\n\n            // Media element listeners\n            _mediaListeners();\n\n            // Remove native controls\n            _toggleControls();\n\n            // Setup fullscreen\n            _setupFullscreen();\n\n            // Captions\n            _setupCaptions();\n\n            // Set volume\n            _setVolume();\n            _updateVolume();\n\n            // Reset time display\n            _timeUpdate();\n\n            // Update the UI\n            _checkPlaying();\n\n            // Display duration\n            _displayDuration();\n\n            // Ready event\n            _triggerEvent(plyr.container, 'ready');\n        }\n\n        // Initialize instance\n        _init();\n\n        // If init failed, return an empty object\n        if (!plyr.init) {\n            return {};\n        }\n\n        return {\n            media:              plyr.media,\n            play:               _play,\n            pause:              _pause,\n            restart:            _seek,\n            rewind:             _rewind,\n            forward:            _forward,\n            seek:               _seek,\n            source:             _source,\n            poster:             _updatePoster,\n            setVolume:          _setVolume,\n            togglePlay:         _togglePlay,\n            toggleMute:         _toggleMute,\n            toggleCaptions:     _toggleCaptions,\n            toggleFullscreen:   _toggleFullscreen,\n            isFullscreen:       function() { return plyr.isFullscreen || false; },\n            support:            function(mimeType) { return _supportMime(plyr, mimeType); },\n            destroy:            _destroy,\n            restore:            _init\n        };\n    }\n\n    // Check for support\n    api.supported = function(type) {\n        var browser = _browserSniff(),\n            oldIE   = (browser.name === 'IE' && browser.version <= 9),\n            iPhone  = /iPhone|iPod/i.test(navigator.userAgent),\n            audio   = !!document.createElement('audio').canPlayType,\n            video   = !!document.createElement('video').canPlayType,\n            basic, full;\n\n        switch (type) {\n            case 'video':\n                basic = video;\n                full  = (basic && (!oldIE && !iPhone));\n                break;\n\n            case 'audio':\n                basic = audio;\n                full  = (basic && !oldIE);\n                break;\n\n            case 'vimeo':\n            case 'youtube':\n                basic = true;\n                full  = (!oldIE && !iPhone);\n                break;\n\n            default:\n                basic = (audio && video);\n                full  = (basic && !oldIE);\n        }\n\n        return {\n            basic:  basic,\n            full:   full\n        };\n    };\n\n    // Expose setup function\n    api.setup = function(elements, options) {\n        // Get the players\n        var instances = [];\n\n        // Select the elements\n        // Assume elements is a NodeList by default\n        if (typeof elements === 'string') {\n            elements = document.querySelectorAll(elements);\n        }\n        // Single HTMLElement passed\n        else if (elements instanceof HTMLElement) {\n            elements = [elements];\n        }\n        // No selector passed, possibly options as first argument\n        else if (!(elements instanceof NodeList) && typeof elements !== 'string')  {\n            // If options are the first argument\n            if (typeof options === 'undefined' && typeof elements === 'object') {\n                options = elements;\n            }\n\n            // Use default selector\n            elements = document.querySelectorAll(defaults.selectors.container);\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!api.supported().basic || !elements.length) {\n            return false;\n        }\n\n        // Create a player instance for each element\n        for (var i = elements.length - 1; i >= 0; i--) {\n            // Get the current element\n            var element = elements[i];\n\n            // Setup a player instance and add to the element\n            if (typeof element.plyr === 'undefined') {\n                // Create instance-specific config\n                var config = _extend(defaults, options, JSON.parse(element.getAttribute(\"data-plyr\")));\n\n                // Bail if not enabled\n                if(!config.enabled) {\n                    return;\n                }\n\n                // Create new instance\n                var instance = new Plyr(element, config);\n\n                // Set plyr to false if setup failed\n                element.plyr = (Object.keys(instance).length ? instance : false);\n\n                // Callback\n                _triggerEvent(element, 'setup', { plyr: element.plyr });\n            }\n\n            // Add to return array even if it's already setup\n            instances.push(element.plyr);\n        }\n\n        return instances;\n    };\n\n    return api;\n}));\n\n// Custom event polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function () {\n    if (typeof window.CustomEvent === 'function') {\n        return false;\n    }\n\n    function CustomEvent (event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/plyr/src/js/plyr.js\n ** module id = 44\n ** module chunks = 2\n **/","module.exports = \"<div _v-00580021=\\\"\\\"> <div class=hidden _v-00580021=\\\"\\\"> <svg _v-00580021=\\\"\\\"> <symbol id=icon-captions-off viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-captions-on viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h16c.552 0 1-.448 1-1V3c0-.552-.448-1-1-1H1zm1 12V4h14v10H2z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M3 11h3v2H3zM12 11h3v2h-3zM7 11h4v2H7z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-enter-fullscreen viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M10.3 9.7c.7.677 1.4 0 1.4 0L16 5.4V10h2V3c0-.6-.4-1-1-1h-7v2h4.6l-4.3 4.3s-.7.723 0 1.4z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M7 2v2H2v10h14v-1h2v2c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1h6z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-exit-fullscreen viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M7.7 8.3c-.7-.677-1.4 0-1.4 0L2 12.6V8H0v7c0 .6.4 1 1 1h7v-2H3.4l4.3-4.3s.7-.723 0-1.4z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M11 16v-2h5V4H2v1H0V3c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1h-6z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-fast-forward viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M17.57 8.246L7 2c-.552 0-1 .448-1 1v1.954L1 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l5-2.955V15c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754zM6 10.722l-4 2.364V4.914l4 2.364v3.444zm2 2.364V4.914L14.915 9 8 13.086z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-muted viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M9.214 2c-.11 0-.225.032-.334.1L4.832 4.91C4.75 4.97 4.65 5 4.55 5H.995C.446 5 0 5.448 0 6v6c0 .552.446 1 .996 1H4.55c.1 0 .2.03.282.09L8.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM7.97 12.834L5.58 11.177c-.166-.115-.364-.178-.566-.178H2.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L7.97 5.165v7.67zM14.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\\\" _v-00580021=\\\"\\\"></path> <path d=\\\"M13.957 9.2c.086 1.747 1.514 2.99 2.507 3.648.47.312 1.094.122 1.325-.408l.037-.086c.188-.43.045-.94-.336-1.194-.705-.473-1.585-1.247-1.623-2.065-.032-.676.553-1.468 1.663-2.27.398-.288.53-.84.285-1.275l-.042-.075c-.266-.475-.866-.624-1.3-.312-1.74 1.25-2.586 2.606-2.516 4.037z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-pause viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M2 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2H4S2 2 2 4zm2 0h2v10H4V4zM10 4v10c0 2 2 2 2 2h2s2 0 2-2V4c0-2-2-2-2-2h-2s-2 0-2 2zm2 0h2v10h-2V4z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-play viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M5 4.914L11.915 9 5 13.086V4.914zM4 2c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1l10.57-6.246c.266-.158.43-.444.43-.754s-.164-.597-.43-.754L4 2z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-restart viewBox=\\\"0 0 16 16\\\" _v-00580021=\\\"\\\"> <path d=\\\"M7.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C4 2.6 2.9 3.2 2 4.1-.7 6.8-.7 11.2 2 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L14 1.9l-6.3-.7z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-rewind viewBox=\\\"0 0 18 21\\\" _v-00580021=\\\"\\\"> <path d=\\\"M.43 10.754L11 17c.552 0 1-.448 1-1v-1.954L17 17c.552 0 1-.448 1-1V4c0-.552-.448-1-1-1l-5 2.955V4c0-.552-.448-1-1-1L.43 9.246C.165 9.404 0 9.69 0 10s.164.597.43.754zM12 8.278l4-2.364v8.172l-4-2.364V8.278zm-2-2.364v8.172L3.085 10 10 5.914z\\\" _v-00580021=\\\"\\\"></path> </symbol> <symbol id=icon-volume viewBox=\\\"0 0 18 18\\\" _v-00580021=\\\"\\\"> <path d=\\\"M10.214 2c-.11 0-.225.032-.334.1L5.832 4.91C5.75 4.97 5.65 5 5.55 5H1.995C1.446 5 1 5.448 1 6v6c0 .552.446 1 .996 1H5.55c.1 0 .2.03.282.09L9.88 15.9c.11.068.223.1.334.1.392 0 .747-.4.747-.95V2.95c0-.55-.354-.95-.746-.95zM8.97 12.834L6.58 11.177c-.166-.115-.364-.178-.566-.178H3.49c-.274 0-.497-.225-.497-.5v-3c0-.277.223-.5.498-.5h2.526c.202 0 .4-.063.566-.18L8.97 5.165v7.67zM16.934 8.8c-.086-1.75-1.514-2.992-2.507-3.65-.47-.312-1.094-.122-1.325.408l-.038.086c-.188.43-.045.94.336 1.194.706.473 1.586 1.247 1.624 2.065.032.676-.553 1.468-1.663 2.27-.397.288-.528.84-.284 1.275l.042.075c.266.475.866.624 1.3.312 1.74-1.25 2.586-2.606 2.516-4.037z\\\" _v-00580021=\\\"\\\"></path> </symbol> </svg> </div> <div class=plyr v-if=video _v-00580021=\\\"\\\"> <video controls=\\\"\\\" _v-00580021=\\\"\\\"> <source :src=url :type=type _v-00580021=\\\"\\\"> <p class=\\\"alert alert-warning\\\" _v-00580021=\\\"\\\"> <strong _v-00580021=\\\"\\\">糟糕！您的浏览器不支持音频播放，</strong><a href=http://browsehappy.com/ _v-00580021=\\\"\\\">请升级您的浏览器。</a> </p> </video> </div> <div class=plyr v-else=\\\"\\\" _v-00580021=\\\"\\\"> <audio controls=\\\"\\\" _v-00580021=\\\"\\\"> <source :src=url :type=type _v-00580021=\\\"\\\"> <p class=\\\"alert alert-warning\\\" _v-00580021=\\\"\\\"> <strong _v-00580021=\\\"\\\">糟糕！您的浏览器不支持视频播放，</strong><a href=http://browsehappy.com/ _v-00580021=\\\"\\\">请升级您的浏览器。</a> </p> </audio> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-00580021!./~/vue-loader/lib/selector.js?type=template&index=0!./client/components/player/index.vue\n ** module id = 50\n ** module chunks = 2\n **/","module.exports = \"<div _v-7618d9e7=\\\"\\\"> <h2 class=content-subhead _v-7618d9e7=\\\"\\\"></h2> <p _v-7618d9e7=\\\"\\\"> 音频播放 </p> <p _v-7618d9e7=\\\"\\\"> <player type=audio/mp3 url=http://7xpcvs.com1.z0.glb.clouddn.com/audio.mp3 _v-7618d9e7=\\\"\\\"></player> </p> <p _v-7618d9e7=\\\"\\\"> 视频播放 (不支持 flv) </p> <p _v-7618d9e7=\\\"\\\"> <player type=video/mp4 url=http://7xpcvs.com1.z0.glb.clouddn.com/video.mp4 _v-7618d9e7=\\\"\\\"></player> </p> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-7618d9e7!./~/vue-loader/lib/selector.js?type=template&index=0!./client/code/player.vue\n ** module id = 54\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7618d9e7&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./player.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./player.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-7618d9e7!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./player.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/code/player.vue\n ** module id = 57\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-00580021&scoped=true!stylus-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-00580021!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/components/player/index.vue\n ** module id = 58\n ** module chunks = 2\n **/"],"sourceRoot":""}